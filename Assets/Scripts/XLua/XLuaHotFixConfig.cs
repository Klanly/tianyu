//==============================================
//作者：邓成
//日期：2017/03/31
//用途：XLUA标签配置
//=============================================

using UnityEngine;
using System.Collections;
using System.Collections.Generic;
using System;
using XLua;

public static class XLuaHotFixConfig 
{
    //lua中要使用到C#库的配置，比如C#标准库，或者Unity API，第三方库等。
    [LuaCallCSharp]
    public static List<Type> LuaCallCSharp = new List<Type>() {
                typeof(System.Object),
                typeof(UnityEngine.Object),
                typeof(Vector2),
                typeof(Vector3),
                typeof(Vector4),
                typeof(Quaternion),
                typeof(Color),
                typeof(Ray),
                typeof(Bounds),
                typeof(Ray2D),
                typeof(Time),
                typeof(GameObject),
                typeof(Component),
                typeof(Behaviour),
                typeof(Transform),
                typeof(Resources),
                typeof(TextAsset),
                typeof(Keyframe),
                typeof(AnimationCurve),
                typeof(AnimationClip),
                typeof(MonoBehaviour),
                typeof(ParticleSystem),
                typeof(SkinnedMeshRenderer),
                typeof(Renderer),
                typeof(WWW),
                typeof(System.Collections.Generic.List<int>),
                typeof(Action<string>),
                typeof(UnityEngine.Debug),
                typeof(GameStageUtility),//扩展方法必须把 方法所在的类和方法的参数类都加上[LuaCallCSharp]标签
                typeof(GameStage),//扩展方法必须把 方法所在的类和方法的参数类都加上[LuaCallCSharp]标签
                typeof(UnityEngineExtends),
            };

    //C#静态调用Lua的配置（包括事件的原型），仅可以配delegate，interface
    //如果希望把一个lua函数适配到一个C# delegate。或者把一个lua table适配到一个C# interface，该delegate或者interface需要加上该配置。
    [CSharpCallLua]
    public static List<Type> CSharpCallLua = new List<Type>() {
                typeof(Action),
                typeof(Func<double, double, double>),
                typeof(Action<string>),
                typeof(Action<double>),
                typeof(System.Action<ActorBaseTag, ulong,bool>),
                typeof(System.Action<ActorPropertyTag, long, bool>),
                typeof(System.Action<int,int>),
                typeof(System.Action<bool>),
                typeof(Action<st.net.NetBase.Pt>),
                typeof(UIEventListener.VoidDelegate),//UIButton
                typeof(UIEventListener.BoolDelegate),
                typeof(UIEventListener.FloatDelegate),
                typeof(UIEventListener.KeyCodeDelegate),
                typeof(UIEventListener.ObjectDelegate),
                typeof(UIEventListener.VectorDelegate),
                typeof(EventDelegate.Callback),//UIToggle
                typeof(UITimer.VoidDelegate),//UITimer
                typeof(UIScrollView.OnDragNotification),//UIScrollView

                typeof(UnityEngine.Events.UnityAction),
                typeof(System.Collections.IEnumerator),
                typeof(System.Action<int>),
                typeof(System.Action<QuestionsReplyInfo>),
                typeof(Action<FunctionDataInfo, bool>),
                typeof(Action<FunctionDataInfo>),
                typeof(Action<TaskType>),
                typeof(System.Action<DescriptionRef>),
                typeof(System.Action<List<EquipmentInfo>>),
                typeof(System.Action<int,EquipmentInfo>),
                typeof(System.Action<EquipmentInfo>),
                typeof(System.Action<AchievementData>),
                typeof(System.Action<GameObject>),
                typeof(System.Action<WingInfo>),
                typeof(Action<OpenNewFunctionGuideRef>),
                typeof(System.Action<pt_ranklist_d601>),
                typeof(System.Action<List<st.net.NetBase.reward_list>>),
                typeof(System.Action<LingXiuType>),
                typeof(System.Action<MercenaryInfo>),
                typeof(System.Action<Color>),
                typeof(System.Action<MountInfo>),
                typeof(System.Action<ChatInfo, Vector3>),
                typeof(System.Action<ChatInfo>),
                typeof(Action<MerryGoRoundDataInfo>),
                typeof(System.Action<ShopItemUI>),
                typeof(System.Action<List<EquipmentInfo>>),
                typeof(System.Action<MallItemUI>),
                typeof(System.Action<FloatTipObject>),
                typeof(System.Action<MarketTypeUI>),
                typeof(System.Action<MarketItemUI>),
                typeof(System.Action<ServerPageData>),
                typeof(System.Action<ServerChoiceData>),
                typeof(System.Action<GuildSkillUI>),
                typeof(System.Action<GuildShopItemUI>),
                typeof(System.Action<GuildMemberData,bool>),
                typeof(System.Action<LivelyRewardRef>),
                typeof(System.Action<BossChallengeData>),
                typeof(System.Action<WingInfo>),
                typeof(Action<LockUpdateType>),
                typeof(Action<int, bool>),
                typeof(System.Action<TaskInfo>),
                typeof(Action<int, Vector3>),
                typeof(System.Action<TaskType>),
                typeof(System.Action<TaskDataType, TaskType>),
                typeof(System.Action<SystemSettingMng.RendererQuality>),
                typeof(System.Action<SystemSettingType, bool,float>),
                typeof(Action<ObjectType, int>),
                typeof(Action<DropItemInfo>),
                typeof(System.Action<List<MessageST>>),
                typeof(System.Action<ErrorMsgStr>),
                typeof(System.Action<string,bool>),
                typeof(System.Action<MessageST>),
                typeof(Action<byte>),
                typeof(System.Action<LoginMng.LoginPassType>),
                typeof(Action<EquipSlot>),
                typeof(System.Action<int,int,int>),
                typeof(System.Action<DescriptionRef>),
                typeof(System.Action<float>),
                typeof(System.Action<OtherPlayer>),
                typeof(System.Action<SmartActor>),
                typeof(System.Action<AchievementData>),
                typeof(System.Action<AbilityMoveData>),
                typeof(Action<bool,bool>),
                typeof(Action<SustainRef> ),
                typeof(Action<PlayerPlayMode>),
                typeof(System.Action<ActorBaseTag, int>),
                typeof(System.Action<ActorPropertyTag, int>),
                typeof(System.Action<ActorBaseTag, int,bool>),
                typeof(System.Action<uint>),
                typeof(MessageST.MessDel),
            };

    //黑名单
    [BlackList]
    public static List<List<string>> BlackList = new List<List<string>>()  {
                new List<string>(){"UnityEngine.WWW", "movie"},
                new List<string>(){"UnityEngine.Texture2D", "alphaIsTransparency"},
                new List<string>(){"UnityEngine.Security", "GetChainOfTrustValue"},
                new List<string>(){"UnityEngine.CanvasRenderer", "onRequestRebuild"},
                new List<string>(){"UnityEngine.Light", "areaSize"},
                new List<string>(){"UnityEngine.AnimatorOverrideController", "PerformOverrideClipListCleanup"},
    #if !UNITY_WEBPLAYER
                new List<string>(){"UnityEngine.Application", "ExternalEval"},
    #endif
                new List<string>(){"UnityEngine.GameObject", "networkView"}, //4.6.2 not support
                new List<string>(){"UnityEngine.Component", "networkView"},  //4.6.2 not support
                new List<string>(){"System.IO.FileInfo", "GetAccessControl", "System.Security.AccessControl.AccessControlSections"},
                new List<string>(){"System.IO.FileInfo", "SetAccessControl", "System.Security.AccessControl.FileSecurity"},
                new List<string>(){"System.IO.DirectoryInfo", "GetAccessControl", "System.Security.AccessControl.AccessControlSections"},
                new List<string>(){"System.IO.DirectoryInfo", "SetAccessControl", "System.Security.AccessControl.DirectorySecurity"},
                new List<string>(){"System.IO.DirectoryInfo", "CreateSubdirectory", "System.String", "System.Security.AccessControl.DirectorySecurity"},
                new List<string>(){"System.IO.DirectoryInfo", "Create", "System.Security.AccessControl.DirectorySecurity"},
                new List<string>(){"UnityEngine.MonoBehaviour", "runInEditMode"},
            };

    [Hotfix(HotfixFlag.Stateful)]
    public static List<Type> StatefulClass = new List<Type>()
    {
        typeof(ItemUIContainer),
    };
    [Hotfix(HotfixFlag.Stateless)]
    public static List<Type> StatelessClass = new List<Type>()
    {
        //Stage
        typeof(GameCenter),
        typeof(GameStage),
        typeof(PlayGameStage),
        typeof(UpdateAssetStage),
        typeof(CityStage),
        typeof(DungeonStage),
        typeof(GameStageUtility),
        //Command类
        typeof(Command_AutoPick),
        typeof(Command_CastAbilityOn),
        typeof(Command_FlyPoint),
        typeof(Command_FlyTo),
        typeof(Command_MoveTo),
        typeof(Command_TraceTarget),
        typeof(CommandTriggerTarget),
        typeof(CommandTriggerTaskTarget),
        //对象（Actor）
        typeof(InteractiveObject),
        typeof(Actor),
        typeof(ActorAnimFSM),
        typeof(ActorInfo),
        typeof(ActorMoveFSM),
        typeof(ActorRendererCtrl),
        //对象（SmartActor）
        typeof(SmartActor),
        typeof(SmartActorAnimFSM),
        typeof(SmartActorRendererCtrl),
        //对象（Monster）
        typeof(Monster),
        typeof(MonsterInfo),
        typeof(MonsterData),
        typeof(MonsterHeadWnd),
        typeof(MonsterDistributionRef),
        typeof(SceneItem),
        typeof(SceneItemAnimFSM),
        typeof(SceneItemInfo),
        typeof(DropItem),
        typeof(DropItemInfo),
        typeof(Trap),
        typeof(TrapInfo),
        typeof(FlyPoint),
        typeof(EntourageAnimFSM),
        typeof(EntourageBase),
        typeof(EntourageAutoFightFSM),
        typeof(MainEntourage),
        typeof(MainEntourageMoveFSM),
        typeof(EntourageTalkCheck),
        typeof(OtherEntourage),
        //对象Player
        typeof(PlayerBase),
        typeof(PlayerBaseData),
        typeof(PlayerBaseInfo),
        typeof(PlayerRendererCtrl),
        typeof(PreviewPlayer),
        typeof(PreviewPlayerRendererCtrl),
        typeof(PlayerAnimFSM),
        typeof(OtherPlayer),
        typeof(OtherPlayerData),
        typeof(OtherPlayerInfo),
        typeof(OtherPlayerListSingle),
        typeof(MainPlayer),
        typeof(MainPlayerData),
        typeof(MainPlayerInfo),
        typeof(MainPlayerMoveFSM),
        typeof(CreatePlayerAnimFSM),
        typeof(CreatePlayer),
        typeof(PlayerAutoDartFSM),
        typeof(PlayerAutoFightFSM),
        typeof(LoginPlayer),
        typeof(LoginPlayerRndCtrl),
        //NPC
        typeof(NPC),
        typeof(NPCInfo),
        typeof(NPCAnimFSM),
        typeof(NPCRendererCtrl),
        typeof(PreviewNPC),
        typeof(NPCFuncDialogueWnd),
        typeof(NpcTalkWnd),
        //坐骑
        typeof(Mount),
        typeof(MountInfo),
        typeof(MountAnimFSM),
        typeof(PreviewMount),
        typeof(MountData),
        typeof(MountEquipSubWnd),
        typeof(MountEquipUpgradeWnd),
        typeof(MountRendererCtrl),
        typeof(MountSubWnd),
        typeof(PreviewMount),
        typeof(NewMountMng),
        //头顶显示
        typeof(HeadTextCtrl),
        typeof(HeadTextPrefab),
        typeof(CollectProgressPrefab),
        typeof(MonsterHeadWnd),
        typeof(BubblePrefab),
        typeof(LookAt),
        typeof(NumberLookAt),
        typeof(FXCtrl),
        //声音
        typeof(SoundMng),
        typeof(SoundLoader),
        //预览
        typeof(PreviewEntourage),
        typeof(PreviewEquipment),
        typeof(PreviewManager),
        typeof(PreviewMob),
        typeof(PreviewMount),
        typeof(PreviewNPC),
        typeof(PreviewPlayer),
        typeof(Load3DObject),
        //主界面
        typeof(GUIBase),
        typeof(MenuWnd),
        typeof(MainFightWnd),
        typeof(CharacterWnd),
        typeof(LittleMapWnd),
        typeof(MainTimeWnd),
        typeof(TaskTeamWnd),
        typeof(SkillWnd),
        typeof(RockerItem),
        typeof(ChatMainUI),
        typeof(TaskListSingle),
        typeof(TeamMemberListSingle),
        typeof(OtherPlayerListSingle),
        typeof(PkModelUI),
        typeof(EquipTipUI),
        //登录系统
        typeof(LoginPlatformWnd),
        typeof(LoginSceneCtrl),
        typeof(LoginBaseWnd),
        typeof(LoginMng),
        typeof(LoginPlatformWnd),
        typeof(LoginWnd),
        typeof(LoginStage),
        typeof(ReturnLoginWnd),
        typeof(SelectServerWnd),
        typeof(ServerPageData),
        typeof(ServerPageItem),
        typeof(ServerChoiceData),
        typeof(ServerChoiceItem),
        typeof(CharacterCreateStage),
        typeof(CreatePlayersWnd),
        //仙盟系统
        typeof(GuildMng),
        typeof(GuildListWnd),
        typeof(GuildMainWnd),
        typeof(GuildLogWnd),
        typeof(GuildHallWnd),
        typeof(GuildDonateWnd),
        typeof(GuildMemberWnd),
        typeof(GuildMemberAddWnd),
        typeof(GuildMemberData),
        typeof(GuildActivityCoppyWnd),
        typeof(GuildItem),
        typeof(GuildInfo),
        typeof(GuildData),
        typeof(GuildFireCoppyWnd),
        typeof(GuildBonfireWnd),
        typeof(GuildBonfireItemUI),
        typeof(GuildBonfireItemContainer),
        typeof(GuildDartWnd),
        typeof(GuildApplyWnd),
        typeof(GuildBattleWnd),
        typeof(GuildFightWnd),
        typeof(GuildFightCoppyWnd),
        typeof(GuildFightItemInfo),
        typeof(GuildFightItemUI),
        typeof(GuildFightMng),
        typeof(GuildFightRankItemUI),
        typeof(GuildFightRankItemInfo),
        typeof(GuildProtectCoppyWnd),
        typeof(GuildProtectRankUI),
        typeof(GuildProtectWnd),
        typeof(GuildSiegeApplyItemUI),
        typeof(GuildSiegeCoppyWnd),
        typeof(GuildSiegeStoreWnd),
        typeof(GuildSiegeWnd),
        typeof(GuildStorageWnd),
        typeof(RankItemUI),
        typeof(ApplyListItemUI),
        typeof(GuildFireCoppyWnd),

        typeof(GuildSkillMng),
        typeof(GuildSkillInfo),
        typeof(GuildSkillUI),
        typeof(GuildSkillWnd),
        typeof(GuildSkillContainer),
        typeof(GuildShopItemInfo),
        typeof(GuildShopItemContainer),
        typeof(GuildShopItemUI),
        typeof(GuildShopMng),
        typeof(GuildShopWnd),
        //加载界面
        typeof(LoadingWnd),
        //背包系统
        typeof(InventoryMng),
        typeof(EquipmentInfo),
        typeof(BackPackWnd),
        typeof(BackpackBaseWnd),
        typeof(BackpackPageUI),
        typeof(BackPackSynthesisUI),
        typeof(SynthesisItemUI),
        typeof(DecompositionWnd),
        typeof(DecomposeItemUI),
        typeof(StorageBaseWnd),
        typeof(StorageWnd),
        typeof(StorageSubWnd),
        typeof(PropertyWnd),
        typeof(IntensiveSuitUI),
        typeof(BoxShowWnd),
        typeof(ItemUI),
        typeof(ItemUIContainer),
        typeof(EquipmentTooltip),
        typeof(InventoryUtility),
        typeof(PropertyTooltip),
        typeof(BatchUseWnd),
        //装备锻造系统
        typeof(EquipmentTrainingMng),
        typeof(EquipmentTrainingWnd),
        typeof(EquipmentStrengthenWnd),
        typeof(EquipmentUpgradeWnd),
        typeof(EquipmentWashWnd),
        typeof(EquipmentOrangeRefineWnd),
        typeof(EquipmentInlayWnd),
        typeof(GemInlaySlotStateUI),
        typeof(GemInlaySlotUI),
        typeof(EquipmentExtendWnd),
        typeof(BatchWashItemUI),
        //BOSS挑战
        typeof(BossChallengeData),
        typeof(BossChallengeMng),
        typeof(BossChallengeWnd),
        typeof(BossListSingle),
        typeof(BossToggleItemUI),
        //每日必做
        typeof(DailyMustDoMng),
        typeof(DailyMustDoInfo),
        typeof(DailyMustDoWnd),
        typeof(DailyMustDoItemUI),
        typeof(LivelyRewardBoxUI),
        typeof(LivelyRewardItemUI),
        //任务系统
        typeof(TaskMng),
        typeof(TaskInfo),
        typeof(TaskPathFind),
        typeof(TaskSinglePath),
        typeof(RingTaskWnd),
        typeof(TrialTaskWnd),
        typeof(TrialTaskItemUI),
        typeof(TaskTipWnd),
        typeof(NoviceTipWnd),
        typeof(PKTipWnd),
        typeof(TaskTipWnd),
        //商城系统
        typeof(NewMallMng),
        typeof(MallWnd),
        typeof(MallItemUI),
        typeof(MallItemInfo),
        typeof(MallItemContainer),
        //商店系统
        typeof(BuyMng),
        typeof(BuyWnd),
        typeof(ShopMng),
        typeof(ShopWnd),
        typeof(ShopItemInfo),
        typeof(ShopItemContainer),
        typeof(ShopItemUI),
        typeof(BatchNumWnd),
        typeof(DrugLackWnd),
        //系统设置
        typeof(SystemSettingMng),
        typeof(SettingWnd),
        typeof(SettingRnderSubWnd),
        typeof(SystemSettingWnd),
        typeof(NoticeSubWnd),
        typeof(HangUpSubWnd),
        typeof(LittleHelperMng),
        typeof(LittleHelperItem),
        typeof(LittleHelperSubWnd),
        typeof(VoiceObjUi),
        typeof(VoiceSetSubWnd),
        typeof(VoiceData),
        // =======  唐源  ==== start
        //通用提示系统
        typeof(MessageInstanceMng),
        typeof(MessageInstanceWnd),
        typeof(MessageDialogManager),
        typeof(MessageST),
        typeof(PanelMessageBoxCS),
        typeof(ErrorMsgStr),
        typeof(FloatTipObject),
        typeof(ReconnectWnd),
        typeof(ReturnExitWnd),
        typeof(SecondConfirmWnd),
        //法宝系统
        typeof(MagicWeaponMng),
        typeof(MagicWeaponInfo),
        typeof(MagicWeaponWnd),
        typeof(MagicAttrbuteChangeUI),
        typeof(MagicAttributeUI),
        typeof(MagicToggleUI),
        typeof(RefineSubWnd),
        typeof(AddSoulSubWnd),
        //翅膀系统
        typeof(WingMng),
        typeof(WingInfo),
        typeof(WingWnd),
        typeof(TrialWingWnd),
        typeof(WingNotActiveUI),
        typeof(WingActiveUI),
        typeof(WingItemUI),
        //藏宝库系统
        typeof(TreasureHouseMng),
        typeof(TreasureHouseWnd),
        typeof(PreviewUI),
        typeof(StageLable),
        typeof(TreasureLotteryWnd),
        typeof(TemporaryWarehouse),
        typeof(Title),
        //排行榜系统
        typeof(NewRankingMng),
        typeof(NewRankingWnd),
        typeof(NewRankingInfo),
        typeof(NewRankingSubWnd),
        typeof(RankingItem),
        typeof(RankCheckOpcWnd),
        typeof(RankOtherMountUI),
        typeof(RankOtherPetUI),
        typeof(RankOtherPlayerUI),
        //成就系统
        typeof(AchievementData),
        typeof(AchievementItemUI),
        typeof(AchievementMng),
        typeof(AchievementTip),
        typeof(AchievementTogUI),
        typeof(NewAchievemnetSubWnd),
        //七天奖励
        typeof(SevenDayMng),
        typeof(SevenDayWnd),
        typeof(SevendDayData),
        typeof(SevendayItem),
        //首冲大礼
        typeof(FirstChargeBonus),
        typeof(FirstChargeBonusMng),
        //CDkey礼包
        typeof(RankRewardMng),
        typeof(EverydayRewardWnd),
        typeof(EverydayRewardUi),
        //深渊封印
        typeof(SealEquWnd),
        //皇室宝箱
        typeof(RoyalTreasureMng),
        typeof(RoyalTreasureWnd),
        typeof(RoyalTreaureData),
        typeof(RoyalRewardUI),
        typeof(TreasueItemUI),
        typeof(SetRoyalBoxBtn),
        //祝福油
        typeof(BlessWnd),
        //活动大厅系统
        typeof(ActivityMng),
        typeof(ActivityWnd),
        typeof(ActivityItemUI),
        typeof(ActivityDataInfo),
        typeof(MainMapActiveUI),
        //副本系统
        typeof(DuplicateMng),
        typeof(CopyInItemDataInfo),
        typeof(CopySceneTeamPlayerInfo),
        typeof(CopyInWnd),
        typeof(CopyInItemTeamUI),
        typeof(CopyInNumBuyUI),
        typeof(CopyInItemChildUI),
        typeof(CopyInItemUI),
        typeof(CopyMultipleUI),
        typeof(FailurePromptWnd),
        typeof(IncreaseStrengthWnd),
        typeof(InvitationPlayerWnd),
        typeof(InvitationPlayerUI),
        typeof(CopySettlementWnd),
        typeof(CopySettlementDataInfo),
        typeof(ActivityBalanceWnd),
        typeof(CopySettlementBrandUI),
        typeof(CopySettlementFlopWnd),
        typeof(SweepRewardWnd),
        typeof(XinaLvCoppyWnd),
        typeof(IceCoppyWnd),
        typeof(TowerCoppyWnd),
        typeof(HolyLandCoppyWnd),
        typeof(DesertCoppyWnd),
        typeof(PetCoppyWnd),
        typeof(MainCoppyWnd),
        typeof(MainCopyArenaUI),
        typeof(BridgeCoppyWnd),
        typeof(SealBossCoppyWnd),
        typeof(GodsWarCoppyWnd),
        typeof(RaiderArkCoppyWnd),
        typeof(RaiderArkEndUI),
        //竞技场系统
        typeof(ArenaMng),
        typeof(ArenaInWnd),
        typeof(ArenaInPlayerUI),
        typeof(ArenaPlayerSingle),
        typeof(ArenaServerDataInfo),
        typeof(ArenaSettlementWnd),
        //无尽挑战
        typeof(EndlessCoppyWnd),
        typeof(EndLessTrialsDataInfo),
        typeof(EndLessTrialsItemUI),
        typeof(EndLessTrialsMng),
        typeof(EndLessTrialsStarUI),
        typeof(EndLessTrialsWnd),
        //镇魔塔
        typeof(MagicTowerWnd),
        //VIP系统、充值系统
        typeof(VipMng),
        typeof(VIPDataInfo),
        typeof(VipItemUI),
        typeof(VipWnd),
        typeof(RechargeItemUI),
        typeof(RechargeMng),
        typeof(RechargeWnd),
        //新功能开启、引导、红点
        typeof(FunctionOpenWnd),
        typeof(FunctionDataInfo),
        typeof(FunctionButtonCenter),
        typeof(FunctionButtonUI),
        typeof(FunctionChildsButtonUI),
        typeof(FunctionWnd),
        typeof(GuideStartWnd),
        typeof(NewFunctionCoppyTip),
        //离线经验系统
        typeof(OffLineRewardMng),
        typeof(OffLineRewardWnd),
        //新手引导
        typeof(NoviceGuideMng),
        typeof(NoviceGuideWnd),
        //新功能预告
        typeof(NewReawrdWnd),
        //立即使用弹窗
        typeof(ImmediateUseWnd),
        //省电模式
        typeof(PowerSavingWnd),
        //宝藏活动
        typeof(TreasureTroveMng),
        typeof(TreasurePreviewWnd),
        typeof(TreasureRankItemUI),
        typeof(TreasureRankRewardUI),
        typeof(TreasureRankWnd),
        typeof(TreasureSuperItemUI),
        typeof(TreasureSuperWnd),
        typeof(TreasureTroveWnd),
        //改名卡
        typeof(RenameCardWnd),
        // =======  唐源  ==== end

        // =======  朱素云  ==== start
        //宠物
        typeof(MercenaryInfo),
        typeof(MercenaryMng),
        typeof(PetData),
        typeof(BookItem),
        typeof(GetBookUi),
        typeof(PetGrowUpSubWnd),
        typeof(PetGuardSubWnd),
        typeof(PetHonor),
        typeof(PetInfoSubWnd),
        typeof(PetMixSubWnd),
        typeof(PetSkill),
        typeof(PetSkillDes),
        typeof(PetSkillSubWnd),
        typeof(PetXiuLingSubWnd),
        typeof(SingleLearnedSkill),
        typeof(SingleSkill),
        typeof(SingleSpritAnimal),
        typeof(SkillComposeUi),
        typeof(SkillPicUi),
        typeof(SpriteAnimalWnd),
        //坐骑、幻化
        typeof(IllusionSubWnd),
        typeof(MountSubWnd),
        typeof(NewMountMng),
        typeof(SkinItem),
        //好友系统
        typeof(FriendsInfo),
        typeof(FriendsMng),
        typeof(FriendWnd),
        typeof(FindFriendUi),
        typeof(OperateUi),
        typeof(OthersItemUi),
        //送花
        typeof(SendFlowerShowWnd),
        typeof(SendFlowerWnd),
        typeof(Flower),
        typeof(FlowerData),
        typeof(MarriageToken),
        typeof(MarriageWnd),
        //修行、飞升
        typeof(PracticeMng),
        typeof(PracticeWnd),
        typeof(PracticeData),
        typeof(SoaringAttibuteUi),
        typeof(SoaringPromoteUi),
        typeof(SoaringWnd),
        typeof(ExchangrUi),
        typeof(PracticeEffect),
        //结义
        typeof(SwornData),
        typeof(SwornInfoUi),
        typeof(SwornMng),
        typeof(SwornWnd),
        typeof(SwornTaskUi),
        typeof(BoxOpenUi),
        typeof(FriendShipUi),
        //仙侣
        typeof(CoupleData),
        typeof(CoupleMng),
        typeof(CoupleWnd),
        //等级奖励、每日奖励
        typeof(EverydayRewardUi),
        typeof(EverydayRewardWnd),
        typeof(RankRewardMng),
        typeof(RankRewardUi),
        typeof(RankRewardWnd),
        typeof(DialogBoxWnd),
        //爱心大礼
        typeof(LovePackageMng),
        typeof(LovePackageWnd),
        //周卡
        typeof(WeekCardMng),
        typeof(WeekCardUi),
        typeof(RechargeWeekWnd),
        //火焰山
        typeof(BattleFieldCamp),
        typeof(BattleFieldRankUi),
        typeof(BattleFieldWnd),
        typeof(BattleCampInfo),
        typeof(BattleFightMng),
        //火焰山结算
        typeof(SettlementData),
        typeof(BattleFeildSettleUI),
        typeof(BattleFieldSettmentWnd),

        //火焰山评分说明
        typeof(BattleComentDesWnd),
        typeof(BattleComentUi),
        //聊天
        typeof(ChatMng),
        typeof(ChatMainUI),
        typeof(ChatInfo),
        typeof(ChatContentUI),
        typeof(ChatFirendUI),
        typeof(ChatFunction),
        typeof(ChatInput),
        typeof(ChatPlayerOperateUI),
        typeof(ChatPlayerToggle),
        typeof(ChatWnd),
        typeof(ChatToggle),
        //在线奖励
        typeof(OnlineRewardItemInfo),
        typeof(OnlineRewardMng),
        typeof(OnlineRewardWnd),
        //转生
        typeof(ReincarnationItemUI),
        typeof(ReincarnationWnd),
        typeof(ReinSkillUI),
        //邮件
        typeof(XXMailItemUI),
        typeof(XXMailMng),
        typeof(XXMailPageUI),
        typeof(XXMailWnd),
        typeof(XXMailWriteUI),
        typeof(XXSocialContactWnd),
        typeof(MailData),
        typeof(MailWriteData),
        //人物外形
        typeof(FashionMng),
        typeof(FashionInfo),
        typeof(FashionItemUI),
        typeof(FashionAttrUi),
        typeof(FashionWnd),
        typeof(FashionItemUI),
        typeof(FashionUIContainer),
        typeof(NewTitleMsgWnd),
        typeof(TitleUI),
        typeof(TitleUIContainer),
        typeof(TitleInfo),
        typeof(TitleMng),
        //人物技能
        typeof(SkillInfo),
        typeof(SkillUI),
        typeof(SkillItem),
        typeof(SkillUIContainer),
        typeof(SkillMng),
        typeof(NewSkillMsgWnd),
        typeof(SkillUpgradesWnd),
        //铸魂
        typeof(CastSoulMng),
        typeof(CastSoulWnd),
        //市场
        typeof(MarketItemContainer),
        typeof(MarketItemInfo),
        typeof(MarketItemUI),
        typeof(MarketLevUI),
        typeof(MarketMng),
        typeof(MarketMoneyTypeUI),
        typeof(MarketPriceUI),
        typeof(MarketQualityUI),
        typeof(MarketTypeUI),
        typeof(MarketPageUI),
        typeof(MarketTypeInfo),
        typeof(MarketTypeContainer),
        typeof(MarketWnd),
        typeof(PutawayWnd),
        typeof(FlipOver),
        typeof(AuctionWnd),
        //运营活动
        typeof(OpenServerRewardInfoData),
        typeof(OpenServerRewardInfoItemData),
        typeof(OpenServerRewardItemUI),
        typeof(OpenServerRewardMng),
        typeof(OpenServerRewardWnd),
        typeof(WdfActiveData),
        typeof(WdfActiveDetailsData),
        typeof(WdfActiveMng),
        typeof(WdfActiveOneItem),
        typeof(WdfActiveRewardItem),
        typeof(WdfActiveTwoItem),
        typeof(WdfActiveTypeData),
        typeof(WdfActiveTypeItem),
        typeof(WdfActiveWnd),
        //小地图
        typeof(SmartActorMapPoint),
        typeof(LittleMapWnd),
        typeof(WordMapItem),
        typeof(MapPlayerHead),
        typeof(MapItem),
        typeof(MapGo),
        typeof(LargeMapWnd),

        // =======  朱素云  ==== end

        // =======  李邵南  ==== start
        //奇缘系统

        //描述系统/公告
        typeof(DescriptionMng),
        typeof(DescriptionWnd),
        typeof(DescriptionUI),
        // =======  李邵南  ==== end

        //漏掉的
       typeof(UIMng),
       typeof(SceneMng),
       typeof(DungeonMng),
       typeof(AbilityMng),
       typeof(AbilityInstance),
       typeof(AbilityResultInfo),
       typeof(AbilityBallisticCurveInfo),
       typeof(AssetMng),
       typeof(CameraMng),
       typeof(CamController),
       typeof(ConfigMng),
       typeof(MsgLoackingMng),
       typeof(MsgLoackingWnd),
       typeof(PlayerInputListener),
       typeof(UIDragObjectRotate3D),
       typeof(UIFocus),
       typeof(UIFocusHelper),
       typeof(UIFocusItem),
       typeof(GameHelper),
       typeof(UIUtil),
       //typeof(DownloadBonusMng),
       //DownloadBonusWnd
       //1.7
       typeof(OnlineRewardUi),
       typeof(WdfActiveFourItem),
       typeof(WdfLotteryData),
       typeof(WdfLotteryReward),
       typeof(WdfLotteryRewardItem),
       typeof(WdfLotteryWnd),
       typeof(WdfRotateItemUi),
       typeof(OpenServerActiveTogType),
       typeof(TwoChargeMng),
       typeof(TwoChargeWnd),
       typeof(RechargePrivilegeWnd),
       typeof(OpenServerTarotWnd),
       typeof(DefeatRecordWnd),
       typeof(LoginBonusWnd),
       typeof(SevenChallengeMng),
       typeof(SevenChallengeSingle),
       typeof(SevenChallengeSingleUI),
       typeof(SevenChallengeUI),
       typeof(SevenChallengeWnd),
       //1.8
       typeof(HangUpCoppyWnd),
       typeof(HangUpWnd),
       typeof(DailyFirstRechargeWnd),
       typeof(GuildDonateTypeUi),
       typeof(BossBuyNumUI),
       typeof(CopyMultipleRoboteRewardUi),
       typeof(RingTypeTaskUi),
       typeof(RingTypeTaskWnd),
       typeof(BossCoppyBuyAttrUI),
       typeof(GuildActiveWnd),
       typeof(GuildLivelyRankItemUI),
       typeof(NewbieCoppyWnd),
    };
/*Stateless和Stateful
打Hotfix标签时，默认是Stateless方式，你也可以选Stateful方式，我们先说区别，再说使用场景。
Stateless方式是指用Lua对成员函数修复时，C#对象直接透传给作为Lua函数的第一个参数。
Stateful方式下你可以在Lua的构造函数返回一个table，然后后续成员函数调用会把这个table给传递过去。
Stateless比较适合无状态的类，有状态的话，你得通过反射去操作私有成员，也没法新增状态（field）。
Stateless有个好处，可以运行的任意时刻执行替换。
Stateful的代价是会在类增加一个LuaTable类型的字段（中间层面增加，不会改源代码）。
但这种方式是适用性更广，比如你不想要lua状态，可以在构造函数拦截那返回空。
而且操作状态性能比反射操作C#私有变量要好，也可以随意新增任意的状态信息。
缺点是，执行成员函数之前就new好的对象，接收到的状态会是空，所以需要重启，在一开始就执行替换。*/

/*使用建议
对所有较大可能变动的类型加上Hotfix标识；
建议用反射找出所有函数参数、字段、属性、事件涉及的delegate类型，标注CSharpCallLua；
业务代码、引擎API、系统API，需要在Lua补丁里头高性能访问的类型，加上LuaCallCSharp；
引擎API、系统API可能被代码剪裁调（C#无引用的地方都会被剪裁），如果觉得可能会新增C#代码之外的API调用，这些API所在的类型要么加LuaCallCSharp，要么加ReflectionUse  */

}
