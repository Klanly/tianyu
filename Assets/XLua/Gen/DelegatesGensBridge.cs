#if USE_UNI_LUA
using LuaAPI = UniLua.Lua;
using RealStatePtr = UniLua.ILuaState;
using LuaCSFunction = UniLua.CSharpFunctionDelegate;
#else
using LuaAPI = XLua.LuaDLL.Lua;
using RealStatePtr = System.IntPtr;
using LuaCSFunction = XLua.LuaDLL.lua_CSFunction;
#endif

using System;


namespace XLua
{
    public partial class DelegateBridge : DelegateBridgeBase
    {
		
		public void __Gen_Delegate_Imp0()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public double __Gen_Delegate_Imp1(double p0, double p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                
                
                LuaAPI.lua_getref(L, luaReference);
                
                LuaAPI.lua_pushnumber(L, p0);
                LuaAPI.lua_pushnumber(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                double __gen_ret = LuaAPI.lua_tonumber(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp2(string p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                
                
                LuaAPI.lua_getref(L, luaReference);
                
                LuaAPI.lua_pushstring(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp3(double p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                
                
                LuaAPI.lua_getref(L, luaReference);
                
                LuaAPI.lua_pushnumber(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp4(ActorBaseTag p0, ulong p1, bool p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                LuaAPI.lua_pushuint64(L, p1);
                LuaAPI.lua_pushboolean(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp5(ActorPropertyTag p0, long p1, bool p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                LuaAPI.lua_pushint64(L, p1);
                LuaAPI.lua_pushboolean(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp6(int p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                
                
                LuaAPI.lua_getref(L, luaReference);
                
                LuaAPI.xlua_pushinteger(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp7(bool p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                
                
                LuaAPI.lua_getref(L, luaReference);
                
                LuaAPI.lua_pushboolean(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp8(st.net.NetBase.Pt p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp9(UnityEngine.GameObject p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp10(UnityEngine.GameObject p0, bool p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                LuaAPI.lua_pushboolean(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp11(UnityEngine.GameObject p0, float p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                LuaAPI.lua_pushnumber(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp12(UnityEngine.GameObject p0, UnityEngine.KeyCode p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp13(UnityEngine.GameObject p0, UnityEngine.GameObject p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp14(UnityEngine.GameObject p0, UnityEngine.Vector2 p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                translator.PushUnityEngineVector2(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp15(int p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                
                
                LuaAPI.lua_getref(L, luaReference);
                
                LuaAPI.xlua_pushinteger(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp16(QuestionsReplyInfo p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp17(FunctionDataInfo p0, bool p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                LuaAPI.lua_pushboolean(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp18(FunctionDataInfo p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp19(TaskType p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp20(DescriptionRef p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp21(System.Collections.Generic.List<EquipmentInfo> p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp22(int p0, EquipmentInfo p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                LuaAPI.xlua_pushinteger(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp23(EquipmentInfo p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp24(AchievementData p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp25(WingInfo p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp26(OpenNewFunctionGuideRef p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp27(pt_ranklist_d601 p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp28(System.Collections.Generic.List<st.net.NetBase.reward_list> p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp29(LingXiuType p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp30(MercenaryInfo p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp31(UnityEngine.Color p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushUnityEngineColor(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp32(MountInfo p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp33(ChatInfo p0, UnityEngine.Vector3 p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                translator.PushUnityEngineVector3(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp34(ChatInfo p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp35(MerryGoRoundDataInfo p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp36(ShopItemUI p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp37(MallItemUI p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp38(FloatTipObject p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp39(MarketTypeUI p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp40(MarketItemUI p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp41(ServerPageData p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp42(ServerChoiceData p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp43(GuildSkillUI p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp44(GuildShopItemUI p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp45(GuildMemberData p0, bool p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                LuaAPI.lua_pushboolean(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp46(LivelyRewardRef p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp47(BossChallengeData p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp48(LockUpdateType p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp49(int p0, bool p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                
                
                LuaAPI.lua_getref(L, luaReference);
                
                LuaAPI.xlua_pushinteger(L, p0);
                LuaAPI.lua_pushboolean(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp50(TaskInfo p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp51(int p0, UnityEngine.Vector3 p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                LuaAPI.xlua_pushinteger(L, p0);
                translator.PushUnityEngineVector3(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp52(TaskDataType p0, TaskType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp53(SystemSettingMng.RendererQuality p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp54(SystemSettingType p0, bool p1, float p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                LuaAPI.lua_pushboolean(L, p1);
                LuaAPI.lua_pushnumber(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp55(ObjectType p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp56(DropItemInfo p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp57(System.Collections.Generic.List<MessageST> p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp58(ErrorMsgStr p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp59(string p0, bool p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                
                
                LuaAPI.lua_getref(L, luaReference);
                
                LuaAPI.lua_pushstring(L, p0);
                LuaAPI.lua_pushboolean(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp60(MessageST p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp61(byte p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                
                
                LuaAPI.lua_getref(L, luaReference);
                
                LuaAPI.xlua_pushinteger(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp62(LoginMng.LoginPassType p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp63(EquipSlot p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp64(int p0, int p1, int p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                
                
                LuaAPI.lua_getref(L, luaReference);
                
                LuaAPI.xlua_pushinteger(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp65(float p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                
                
                LuaAPI.lua_getref(L, luaReference);
                
                LuaAPI.lua_pushnumber(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp66(OtherPlayer p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp67(SmartActor p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp68(AbilityMoveData p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp69(bool p0, bool p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                
                
                LuaAPI.lua_getref(L, luaReference);
                
                LuaAPI.lua_pushboolean(L, p0);
                LuaAPI.lua_pushboolean(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp70(SustainRef p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp71(PlayerPlayMode p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp72(ActorBaseTag p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp73(ActorPropertyTag p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp74(ActorBaseTag p0, int p1, bool p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.lua_pushboolean(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp75(uint p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                
                
                LuaAPI.lua_getref(L, luaReference);
                
                LuaAPI.xlua_pushuint(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp76(object[] p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                if (p0 != null)  { for (int __gen_i = 0; __gen_i < p0.Length; ++__gen_i) translator.PushAny(L, p0[__gen_i]); };
                
                int __gen_error = LuaAPI.lua_pcall(L, 0 + (p0 == null ? 0 : p0.Length), 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public InvokeLua.ICalc __Gen_Delegate_Imp77(int p0, string[] p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                LuaAPI.xlua_pushinteger(L, p0);
                if (p1 != null)  { for (int __gen_i = 0; __gen_i < p1.Length; ++__gen_i) LuaAPI.lua_pushstring(L, p1[__gen_i]); };
                
                int __gen_error = LuaAPI.lua_pcall(L, 1 + (p1 == null ? 0 : p1.Length), 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                InvokeLua.ICalc __gen_ret = (InvokeLua.ICalc)translator.GetObject(L, err_func + 1, typeof(InvokeLua.ICalc));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public int __Gen_Delegate_Imp78(int p0, string p1, out CSCallLua.DClass p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                LuaAPI.xlua_pushinteger(L, p0);
                LuaAPI.lua_pushstring(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 2, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                p2 = (CSCallLua.DClass)translator.GetObject(L, err_func + 2, typeof(CSCallLua.DClass));
                
                int __gen_ret = LuaAPI.xlua_tointeger(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Action __Gen_Delegate_Imp79()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Action __gen_ret = translator.GetDelegate<System.Action>(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public int __Gen_Delegate_Imp80(int p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                
                
                LuaAPI.lua_getref(L, luaReference);
                
                LuaAPI.xlua_pushinteger(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                int __gen_ret = LuaAPI.xlua_tointeger(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UnityEngine.Vector3 __Gen_Delegate_Imp81(UnityEngine.Vector3 p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushUnityEngineVector3(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UnityEngine.Vector3 __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public XLuaTest.MyStruct __Gen_Delegate_Imp82(XLuaTest.MyStruct p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushXLuaTestMyStruct(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                XLuaTest.MyStruct __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public XLuaTest.MyEnum __Gen_Delegate_Imp83(XLuaTest.MyEnum p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushXLuaTestMyEnum(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                XLuaTest.MyEnum __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public decimal __Gen_Delegate_Imp84(decimal p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushDecimal(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                decimal __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp85(System.Array p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public int __Gen_Delegate_Imp86(HotfixCalc p0, int p1, out double p2, ref string p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.lua_pushstring(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 3, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                p2 = LuaAPI.lua_tonumber(L, err_func + 2);
                p3 = LuaAPI.lua_tostring(L, err_func + 3);
                
                int __gen_ret = LuaAPI.xlua_tointeger(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp87(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public int __Gen_Delegate_Imp88(object p0, int p1, int p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                int __gen_ret = LuaAPI.xlua_tointeger(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UnityEngine.Vector3 __Gen_Delegate_Imp89(object p0, UnityEngine.Vector3 p1, UnityEngine.Vector3 p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushUnityEngineVector3(L, p1);
                translator.PushUnityEngineVector3(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UnityEngine.Vector3 __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public int __Gen_Delegate_Imp90(object p0, int p1, out double p2, ref string p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.lua_pushstring(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 3, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                p2 = LuaAPI.lua_tonumber(L, err_func + 2);
                p3 = LuaAPI.lua_tostring(L, err_func + 3);
                
                int __gen_ret = LuaAPI.xlua_tointeger(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public int __Gen_Delegate_Imp91(object p0, int p1, out double p2, ref string p3, object p4)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.lua_pushstring(L, p3);
                translator.PushAny(L, p4);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 3, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                p2 = LuaAPI.lua_tonumber(L, err_func + 2);
                p3 = LuaAPI.lua_tostring(L, err_func + 3);
                
                int __gen_ret = LuaAPI.xlua_tointeger(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UnityEngine.GameObject __Gen_Delegate_Imp92(StructTest p0, int p1, object p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                translator.PushAny(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UnityEngine.GameObject __gen_ret = (UnityEngine.GameObject)translator.GetObject(L, err_func + 1, typeof(UnityEngine.GameObject));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp93(StructTest p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp94(XLua.LuaTable p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public int __Gen_Delegate_Imp95(XLua.LuaTable p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                int __gen_ret = LuaAPI.xlua_tointeger(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp96(XLua.LuaTable p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public int __Gen_Delegate_Imp97(XLua.LuaTable p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                int __gen_ret = LuaAPI.xlua_tointeger(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp98(XLua.LuaTable p0, object p1, int p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp99(XLua.LuaTable p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp100(object p0, int p1, int p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public XLua.LuaTable __Gen_Delegate_Imp101(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                XLua.LuaTable __gen_ret = (XLua.LuaTable)translator.GetObject(L, err_func + 1, typeof(XLua.LuaTable));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public XLua.LuaTable __Gen_Delegate_Imp102(object p0, int p1, int p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                XLua.LuaTable __gen_ret = (XLua.LuaTable)translator.GetObject(L, err_func + 1, typeof(XLua.LuaTable));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ItemUI __Gen_Delegate_Imp103(XLua.LuaTable p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ItemUI __gen_ret = (ItemUI)translator.GetObject(L, err_func + 1, typeof(ItemUI));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ItemUIContainer.FilterType __Gen_Delegate_Imp104(XLua.LuaTable p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ItemUIContainer.FilterType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp105(XLua.LuaTable p0, ItemUIContainer.FilterType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UIExGrid __Gen_Delegate_Imp106(XLua.LuaTable p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UIExGrid __gen_ret = (UIExGrid)translator.GetObject(L, err_func + 1, typeof(UIExGrid));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp107(XLua.LuaTable p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp108(XLua.LuaTable p0, UIExGrid.Arrangement p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp109(XLua.LuaTable p0, float p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                LuaAPI.lua_pushnumber(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp110(XLua.LuaTable p0, bool p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                LuaAPI.lua_pushboolean(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp111(XLua.LuaTable p0, int p1, object p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                translator.PushAny(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp112(XLua.LuaTable p0, int p1, object p2, bool p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                translator.PushAny(L, p2);
                LuaAPI.lua_pushboolean(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp113(XLua.LuaTable p0, ItemActionType p1, ItemActionType p2, ItemActionType p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                translator.Push(L, p1);
                translator.Push(L, p2);
                translator.Push(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp114(XLua.LuaTable p0, ItemActionType p1, ItemActionType p2, ItemActionType p3, ItemActionType p4)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                translator.Push(L, p1);
                translator.Push(L, p2);
                translator.Push(L, p3);
                translator.Push(L, p4);
                
                int __gen_error = LuaAPI.lua_pcall(L, 5, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp115(XLua.LuaTable p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp116(XLua.LuaTable p0, object p1, int p2, int p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                LuaAPI.xlua_pushinteger(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp117(XLua.LuaTable p0, object p1, ItemUIContainer.FilterType p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                translator.PushAny(L, p1);
                translator.Push(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp118(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp119(object p0, bool p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.lua_pushboolean(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public int __Gen_Delegate_Imp120(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                int __gen_ret = LuaAPI.xlua_tointeger(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp121(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp122(object p0, object p1, object p2, object p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.PushAny(L, p2);
                translator.PushAny(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp123(ObjectType p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.IEnumerator __Gen_Delegate_Imp124(object p0, bool p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.lua_pushboolean(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.IEnumerator __gen_ret = (System.Collections.IEnumerator)translator.GetObject(L, err_func + 1, typeof(System.Collections.IEnumerator));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.IEnumerator __Gen_Delegate_Imp125(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.IEnumerator __gen_ret = (System.Collections.IEnumerator)translator.GetObject(L, err_func + 1, typeof(System.Collections.IEnumerator));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<bool> __Gen_Delegate_Imp126(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<bool> __gen_ret = (System.Collections.Generic.List<bool>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<bool>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public long __Gen_Delegate_Imp127(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                long __gen_ret = LuaAPI.lua_toint64(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp128(object p0, long p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.lua_pushint64(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public uint __Gen_Delegate_Imp129(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                uint __gen_ret = LuaAPI.xlua_touint(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.DateTime __Gen_Delegate_Imp130(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.DateTime __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp131(object p0, System.DateTime p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SceneType __Gen_Delegate_Imp132(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SceneType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp133(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp134(object p0, object p1, object p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.PushAny(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp135(object p0, object p1, int p2, int p3, int p4)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                LuaAPI.xlua_pushinteger(L, p3);
                LuaAPI.xlua_pushinteger(L, p4);
                
                int __gen_error = LuaAPI.lua_pcall(L, 5, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp136(object p0, object p1, float p2, float p3, int p4, float p5)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.lua_pushnumber(L, p2);
                LuaAPI.lua_pushnumber(L, p3);
                LuaAPI.xlua_pushinteger(L, p4);
                LuaAPI.lua_pushnumber(L, p5);
                
                int __gen_error = LuaAPI.lua_pcall(L, 6, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp137(object p0, object p1, int p2, int p3, int p4, float p5)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                LuaAPI.xlua_pushinteger(L, p3);
                LuaAPI.xlua_pushinteger(L, p4);
                LuaAPI.lua_pushnumber(L, p5);
                
                int __gen_error = LuaAPI.lua_pcall(L, 6, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp138(object p0, int p1, int p2, int p3, int p4, int p5, int p6)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                LuaAPI.xlua_pushinteger(L, p3);
                LuaAPI.xlua_pushinteger(L, p4);
                LuaAPI.xlua_pushinteger(L, p5);
                LuaAPI.xlua_pushinteger(L, p6);
                
                int __gen_error = LuaAPI.lua_pcall(L, 7, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp139(object p0, object p1, object p2, int p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.PushAny(L, p2);
                LuaAPI.xlua_pushinteger(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public GameStage.Sector __Gen_Delegate_Imp140(object p0, int p1, int p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                GameStage.Sector __gen_ret = (GameStage.Sector)translator.GetObject(L, err_func + 1, typeof(GameStage.Sector));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public GameStage.Sector __Gen_Delegate_Imp141(object p0, UnityEngine.Vector3 p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushUnityEngineVector3(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                GameStage.Sector __gen_ret = (GameStage.Sector)translator.GetObject(L, err_func + 1, typeof(GameStage.Sector));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UnityEngine.Vector3 __Gen_Delegate_Imp142(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UnityEngine.Vector3 __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp143(object p0, object p1, out int p2, out int p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 2, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                p2 = LuaAPI.xlua_tointeger(L, err_func + 1);
                p3 = LuaAPI.xlua_tointeger(L, err_func + 2);
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp144(object p0, float p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.lua_pushnumber(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp145(object p0, object p1, float p2, int p3, int p4)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.lua_pushnumber(L, p2);
                LuaAPI.xlua_pushinteger(L, p3);
                LuaAPI.xlua_pushinteger(L, p4);
                
                int __gen_error = LuaAPI.lua_pcall(L, 5, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp146(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public InteractiveObject __Gen_Delegate_Imp147(object p0, ObjectType p1, int p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                InteractiveObject __gen_ret = (InteractiveObject)translator.GetObject(L, err_func + 1, typeof(InteractiveObject));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MainPlayer __Gen_Delegate_Imp148(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MainPlayer __gen_ret = (MainPlayer)translator.GetObject(L, err_func + 1, typeof(MainPlayer));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<string> __Gen_Delegate_Imp149(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<string> __gen_ret = (System.Collections.Generic.List<string>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<string>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp150(object p0, object p1, int p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp151(object p0, object p1, int p2, object p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                translator.PushAny(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp152(object p0, EquipSlot p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp153(object p0, TaskDataType p1, TaskType p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                translator.Push(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp154(object p0, ObjectType p1, int p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.IEnumerator __Gen_Delegate_Imp155(object p0, float p1, object p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.lua_pushnumber(L, p1);
                translator.PushAny(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.IEnumerator __gen_ret = (System.Collections.IEnumerator)translator.GetObject(L, err_func + 1, typeof(System.Collections.IEnumerator));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public float __Gen_Delegate_Imp156(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                float __gen_ret = (float)LuaAPI.lua_tonumber(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public string __Gen_Delegate_Imp157(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                string __gen_ret = LuaAPI.lua_tostring(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.IEnumerator __Gen_Delegate_Imp158(object p0, object p1, object p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.PushAny(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.IEnumerator __gen_ret = (System.Collections.IEnumerator)translator.GetObject(L, err_func + 1, typeof(System.Collections.IEnumerator));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.Dictionary<string, VersionAsset> __Gen_Delegate_Imp159(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.Dictionary<string, VersionAsset> __gen_ret = (System.Collections.Generic.Dictionary<string, VersionAsset>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.Dictionary<string, VersionAsset>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<VersionAsset> __Gen_Delegate_Imp160(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<VersionAsset> __gen_ret = (System.Collections.Generic.List<VersionAsset>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<VersionAsset>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.Dictionary<string, VersionAsset> __Gen_Delegate_Imp161(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.Dictionary<string, VersionAsset> __gen_ret = (System.Collections.Generic.Dictionary<string, VersionAsset>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.Dictionary<string, VersionAsset>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.IEnumerator __Gen_Delegate_Imp162(object p0, UpdateAssetStage.EventType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.IEnumerator __gen_ret = (System.Collections.IEnumerator)translator.GetObject(L, err_func + 1, typeof(System.Collections.IEnumerator));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public string __Gen_Delegate_Imp163(object p0, object p1, bool p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.lua_pushboolean(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                string __gen_ret = LuaAPI.lua_tostring(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp164(object p0, object p1, object p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.PushAny(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UnityEngine.Texture __Gen_Delegate_Imp165(AlertAreaType p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UnityEngine.Texture __gen_ret = (UnityEngine.Texture)translator.GetObject(L, err_func + 1, typeof(UnityEngine.Texture));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UIAtlas __Gen_Delegate_Imp166()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UIAtlas __gen_ret = (UIAtlas)translator.GetObject(L, err_func + 1, typeof(UIAtlas));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UnityEngine.Vector3[] __Gen_Delegate_Imp167(UnityEngine.Vector3 p0, UnityEngine.Vector3 p1, float p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushUnityEngineVector3(L, p0);
                translator.PushUnityEngineVector3(L, p1);
                LuaAPI.lua_pushnumber(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UnityEngine.Vector3[] __gen_ret = (UnityEngine.Vector3[])translator.GetObject(L, err_func + 1, typeof(UnityEngine.Vector3[]));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UnityEngine.Vector3[] __Gen_Delegate_Imp168(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UnityEngine.Vector3[] __gen_ret = (UnityEngine.Vector3[])translator.GetObject(L, err_func + 1, typeof(UnityEngine.Vector3[]));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp169(UnityEngine.Vector3 p0, UnityEngine.Vector3 p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushUnityEngineVector3(L, p0);
                translator.PushUnityEngineVector3(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public PlayerBase __Gen_Delegate_Imp170(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                PlayerBase __gen_ret = (PlayerBase)translator.GetObject(L, err_func + 1, typeof(PlayerBase));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public OtherPlayer __Gen_Delegate_Imp171(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                OtherPlayer __gen_ret = (OtherPlayer)translator.GetObject(L, err_func + 1, typeof(OtherPlayer));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public OtherEntourage __Gen_Delegate_Imp172(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                OtherEntourage __gen_ret = (OtherEntourage)translator.GetObject(L, err_func + 1, typeof(OtherEntourage));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public NPC __Gen_Delegate_Imp173(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                NPC __gen_ret = (NPC)translator.GetObject(L, err_func + 1, typeof(NPC));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public Monster __Gen_Delegate_Imp174(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                Monster __gen_ret = (Monster)translator.GetObject(L, err_func + 1, typeof(Monster));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public EntourageBase __Gen_Delegate_Imp175(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                EntourageBase __gen_ret = (EntourageBase)translator.GetObject(L, err_func + 1, typeof(EntourageBase));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public DropItem __Gen_Delegate_Imp176(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                DropItem __gen_ret = (DropItem)translator.GetObject(L, err_func + 1, typeof(DropItem));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public Trap __Gen_Delegate_Imp177(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                Trap __gen_ret = (Trap)translator.GetObject(L, err_func + 1, typeof(Trap));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SceneItem __Gen_Delegate_Imp178(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SceneItem __gen_ret = (SceneItem)translator.GetObject(L, err_func + 1, typeof(SceneItem));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public InteractiveObject __Gen_Delegate_Imp179(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                InteractiveObject __gen_ret = (InteractiveObject)translator.GetObject(L, err_func + 1, typeof(InteractiveObject));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<NPC> __Gen_Delegate_Imp180(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<NPC> __gen_ret = (System.Collections.Generic.List<NPC>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<NPC>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<FlyPoint> __Gen_Delegate_Imp181(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<FlyPoint> __gen_ret = (System.Collections.Generic.List<FlyPoint>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<FlyPoint>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<OtherPlayer> __Gen_Delegate_Imp182(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<OtherPlayer> __gen_ret = (System.Collections.Generic.List<OtherPlayer>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<OtherPlayer>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<OtherEntourage> __Gen_Delegate_Imp183(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<OtherEntourage> __gen_ret = (System.Collections.Generic.List<OtherEntourage>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<OtherEntourage>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<DropItem> __Gen_Delegate_Imp184(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<DropItem> __gen_ret = (System.Collections.Generic.List<DropItem>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<DropItem>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<SceneItem> __Gen_Delegate_Imp185(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<SceneItem> __gen_ret = (System.Collections.Generic.List<SceneItem>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<SceneItem>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<Model> __Gen_Delegate_Imp186(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<Model> __gen_ret = (System.Collections.Generic.List<Model>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<Model>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<Trap> __Gen_Delegate_Imp187(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<Trap> __gen_ret = (System.Collections.Generic.List<Trap>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<Trap>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<Monster> __Gen_Delegate_Imp188(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<Monster> __gen_ret = (System.Collections.Generic.List<Monster>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<Monster>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<SmartActor> __Gen_Delegate_Imp189(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<SmartActor> __gen_ret = (System.Collections.Generic.List<SmartActor>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<SmartActor>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<NPC> __Gen_Delegate_Imp190(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<NPC> __gen_ret = (System.Collections.Generic.List<NPC>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<NPC>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<FlyPoint> __Gen_Delegate_Imp191(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<FlyPoint> __gen_ret = (System.Collections.Generic.List<FlyPoint>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<FlyPoint>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SmartActor __Gen_Delegate_Imp192(object p0, int p1, UnityEngine.Vector3 p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                translator.PushUnityEngineVector3(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SmartActor __gen_ret = (SmartActor)translator.GetObject(L, err_func + 1, typeof(SmartActor));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public Monster __Gen_Delegate_Imp193(object p0, object p1, ref float p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.lua_pushnumber(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 2, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                p2 = (float)LuaAPI.lua_tonumber(L, err_func + 2);
                
                Monster __gen_ret = (Monster)translator.GetObject(L, err_func + 1, typeof(Monster));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public Monster __Gen_Delegate_Imp194(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                Monster __gen_ret = (Monster)translator.GetObject(L, err_func + 1, typeof(Monster));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public OtherPlayer __Gen_Delegate_Imp195(object p0, object p1, RelationType p2, ref float p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.Push(L, p2);
                LuaAPI.lua_pushnumber(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 2, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                p3 = (float)LuaAPI.lua_tonumber(L, err_func + 2);
                
                OtherPlayer __gen_ret = (OtherPlayer)translator.GetObject(L, err_func + 1, typeof(OtherPlayer));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public OtherEntourage __Gen_Delegate_Imp196(object p0, object p1, RelationType p2, ref float p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.Push(L, p2);
                LuaAPI.lua_pushnumber(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 2, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                p3 = (float)LuaAPI.lua_tonumber(L, err_func + 2);
                
                OtherEntourage __gen_ret = (OtherEntourage)translator.GetObject(L, err_func + 1, typeof(OtherEntourage));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SmartActor __Gen_Delegate_Imp197(object p0, object p1, RelationType p2, ref float p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.Push(L, p2);
                LuaAPI.lua_pushnumber(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 2, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                p3 = (float)LuaAPI.lua_tonumber(L, err_func + 2);
                
                SmartActor __gen_ret = (SmartActor)translator.GetObject(L, err_func + 1, typeof(SmartActor));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public NPC __Gen_Delegate_Imp198(object p0, object p1, NPCType p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.Push(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                NPC __gen_ret = (NPC)translator.GetObject(L, err_func + 1, typeof(NPC));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public float __Gen_Delegate_Imp199(object p0, object p1, NPCType p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.Push(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                float __gen_ret = (float)LuaAPI.lua_tonumber(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public NPC __Gen_Delegate_Imp200(object p0, object p1, int p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                NPC __gen_ret = (NPC)translator.GetObject(L, err_func + 1, typeof(NPC));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SceneItem __Gen_Delegate_Imp201(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SceneItem __gen_ret = (SceneItem)translator.GetObject(L, err_func + 1, typeof(SceneItem));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<DropItemInfo> __Gen_Delegate_Imp202(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<DropItemInfo> __gen_ret = (System.Collections.Generic.List<DropItemInfo>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<DropItemInfo>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public DropItemInfo __Gen_Delegate_Imp203(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                DropItemInfo __gen_ret = (DropItemInfo)translator.GetObject(L, err_func + 1, typeof(DropItemInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UnityEngine.Vector3 __Gen_Delegate_Imp204(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UnityEngine.Vector3 __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp205(object p0, UnityEngine.Vector3 p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushUnityEngineVector3(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<PostionSlot> __Gen_Delegate_Imp206(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<PostionSlot> __gen_ret = (System.Collections.Generic.List<PostionSlot>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<PostionSlot>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public PostionSlot __Gen_Delegate_Imp207(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                PostionSlot __gen_ret = (PostionSlot)translator.GetObject(L, err_func + 1, typeof(PostionSlot));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UnityEngine.Transform __Gen_Delegate_Imp208(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UnityEngine.Transform __gen_ret = (UnityEngine.Transform)translator.GetObject(L, err_func + 1, typeof(UnityEngine.Transform));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp209(object p0, UnityEngine.Color p1, bool p2, float p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushUnityEngineColor(L, p1);
                LuaAPI.lua_pushboolean(L, p2);
                LuaAPI.lua_pushnumber(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp210(object p0, float p1, float p2, float p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.lua_pushnumber(L, p1);
                LuaAPI.lua_pushnumber(L, p2);
                LuaAPI.lua_pushnumber(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UnityEngine.Texture2D[] __Gen_Delegate_Imp211(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UnityEngine.Texture2D[] __gen_ret = (UnityEngine.Texture2D[])translator.GetObject(L, err_func + 1, typeof(UnityEngine.Texture2D[]));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp212(object p0, bool p1, float p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.lua_pushboolean(L, p1);
                LuaAPI.lua_pushnumber(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp213(object p0, bool p1, UnityEngine.Vector3 p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.lua_pushboolean(L, p1);
                translator.PushUnityEngineVector3(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp214(object p0, float p1, bool p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.lua_pushnumber(L, p1);
                LuaAPI.lua_pushboolean(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ActorAnimFSM __Gen_Delegate_Imp215(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ActorAnimFSM __gen_ret = (ActorAnimFSM)translator.GetObject(L, err_func + 1, typeof(ActorAnimFSM));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ActorMoveFSM __Gen_Delegate_Imp216(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ActorMoveFSM __gen_ret = (ActorMoveFSM)translator.GetObject(L, err_func + 1, typeof(ActorMoveFSM));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp217(object p0, object p1, int p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp218(object p0, UnityEngine.Vector3 p1, float p2, bool p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushUnityEngineVector3(L, p1);
                LuaAPI.lua_pushnumber(L, p2);
                LuaAPI.lua_pushboolean(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp219(object p0, object p1, float p2, bool p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.lua_pushnumber(L, p2);
                LuaAPI.lua_pushboolean(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp220(object p0, object p1, float p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.lua_pushnumber(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp221(object p0, object p1, object p2, bool p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.PushAny(L, p2);
                LuaAPI.lua_pushboolean(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.IEnumerator __Gen_Delegate_Imp222(object p0, int p1, float p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.lua_pushnumber(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.IEnumerator __gen_ret = (System.Collections.IEnumerator)translator.GetObject(L, err_func + 1, typeof(System.Collections.IEnumerator));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp223(object p0, object p1, object p2, float p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.PushAny(L, p2);
                LuaAPI.lua_pushnumber(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UnityEngine.AnimationState __Gen_Delegate_Imp224(object p0, object p1, object p2, bool p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.PushAny(L, p2);
                LuaAPI.lua_pushboolean(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UnityEngine.AnimationState __gen_ret = (UnityEngine.AnimationState)translator.GetObject(L, err_func + 1, typeof(UnityEngine.AnimationState));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UnityEngine.AnimationState __Gen_Delegate_Imp225(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UnityEngine.AnimationState __gen_ret = (UnityEngine.AnimationState)translator.GetObject(L, err_func + 1, typeof(UnityEngine.AnimationState));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp226(object p0, bool p1, float p2, float p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.lua_pushboolean(L, p1);
                LuaAPI.lua_pushnumber(L, p2);
                LuaAPI.lua_pushnumber(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public FDictionary __Gen_Delegate_Imp227(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                FDictionary __gen_ret = (FDictionary)translator.GetObject(L, err_func + 1, typeof(FDictionary));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.Dictionary<EquipSlot, EquipmentInfo> __Gen_Delegate_Imp228(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.Dictionary<EquipSlot, EquipmentInfo> __gen_ret = (System.Collections.Generic.Dictionary<EquipSlot, EquipmentInfo>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.Dictionary<EquipSlot, EquipmentInfo>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public int __Gen_Delegate_Imp229(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                int __gen_ret = LuaAPI.xlua_tointeger(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp230(object p0, EquipSlot p1, object p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                translator.PushAny(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ulong __Gen_Delegate_Imp231(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ulong __gen_ret = LuaAPI.lua_touint64(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp232(object p0, object p1, int p2, int p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                LuaAPI.xlua_pushinteger(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public BuffInfo __Gen_Delegate_Imp233(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                BuffInfo __gen_ret = (BuffInfo)translator.GetObject(L, err_func + 1, typeof(BuffInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp234(object p0, object p1, bool p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.lua_pushboolean(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UnityEngine.Vector3 __Gen_Delegate_Imp235(UnityEngine.Vector3 p0, UnityEngine.Vector3 p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushUnityEngineVector3(L, p0);
                translator.PushUnityEngineVector3(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UnityEngine.Vector3 __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UnityEngine.Vector3 __Gen_Delegate_Imp236(UnityEngine.Vector3 p0, float p1, float p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushUnityEngineVector3(L, p0);
                LuaAPI.lua_pushnumber(L, p1);
                LuaAPI.lua_pushnumber(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UnityEngine.Vector3 __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp237(UnityEngine.Vector3 p0, float p1, float p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushUnityEngineVector3(L, p0);
                LuaAPI.lua_pushnumber(L, p1);
                LuaAPI.lua_pushnumber(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UnityEngine.Vector3 __Gen_Delegate_Imp238(UnityEngine.Vector3 p0, bool p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushUnityEngineVector3(L, p0);
                LuaAPI.lua_pushboolean(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UnityEngine.Vector3 __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UnityEngine.Vector3 __Gen_Delegate_Imp239(UnityEngine.Vector2 p0, bool p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushUnityEngineVector2(L, p0);
                LuaAPI.lua_pushboolean(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UnityEngine.Vector3 __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp240(object p0, UnityEngine.Vector3 p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushUnityEngineVector3(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UnityEngine.Vector3 __Gen_Delegate_Imp241(UnityEngine.Vector2 p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushUnityEngineVector2(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UnityEngine.Vector3 __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp242(object p0, UnityEngine.Vector3 p1, bool p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushUnityEngineVector3(L, p1);
                LuaAPI.lua_pushboolean(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp243(object p0, out UnityEngine.Bounds p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 2, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                translator.Get(L, err_func + 2, out p1);
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp244(object p0, UnityEngine.Color p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushUnityEngineColor(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ActorInfo __Gen_Delegate_Imp245(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ActorInfo __gen_ret = (ActorInfo)translator.GetObject(L, err_func + 1, typeof(ActorInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UnityEngine.Vector3 __Gen_Delegate_Imp246(UnityEngine.Vector3 p0, UnityEngine.Vector3 p1, float p2, float p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushUnityEngineVector3(L, p0);
                translator.PushUnityEngineVector3(L, p1);
                LuaAPI.lua_pushnumber(L, p2);
                LuaAPI.lua_pushnumber(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UnityEngine.Vector3 __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp247(object p0, int p1, bool p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.lua_pushboolean(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public HeadTextCtrl __Gen_Delegate_Imp248(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                HeadTextCtrl __gen_ret = (HeadTextCtrl)translator.GetObject(L, err_func + 1, typeof(HeadTextCtrl));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp249(object p0, bool p1, object p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.lua_pushboolean(L, p1);
                translator.PushAny(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp250(object p0, ActorPropertyTag p1, long p2, bool p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                LuaAPI.lua_pushint64(L, p2);
                LuaAPI.lua_pushboolean(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp251(object p0, ActorBaseTag p1, ulong p2, bool p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                LuaAPI.lua_pushuint64(L, p2);
                LuaAPI.lua_pushboolean(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp252(object p0, UnityEngine.Vector3 p1, float p2, object p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushUnityEngineVector3(L, p1);
                LuaAPI.lua_pushnumber(L, p2);
                translator.PushAny(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ActorAnimFSM.EventType __Gen_Delegate_Imp253(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ActorAnimFSM.EventType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp254(object p0, ActorAnimFSM.EventType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp255(object p0, float p1, float p2, object p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.lua_pushnumber(L, p1);
                LuaAPI.lua_pushnumber(L, p2);
                translator.PushAny(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp256(object p0, float p1, float p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.lua_pushnumber(L, p1);
                LuaAPI.lua_pushnumber(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public float __Gen_Delegate_Imp257(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                float __gen_ret = (float)LuaAPI.lua_tonumber(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp258(object p0, object p1, float p2, UnityEngine.WrapMode p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.lua_pushnumber(L, p2);
                translator.Push(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp259(object p0, bool p1, bool p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.lua_pushboolean(L, p1);
                LuaAPI.lua_pushboolean(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UnityEngine.GameObject[] __Gen_Delegate_Imp260(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UnityEngine.GameObject[] __gen_ret = (UnityEngine.GameObject[])translator.GetObject(L, err_func + 1, typeof(UnityEngine.GameObject[]));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp261(object p0, EquipSlot p1, object p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                translator.PushAny(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp262(object p0, object p1, EquipSlot p2, object p3, object p4)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.Push(L, p2);
                translator.PushAny(L, p3);
                translator.PushAny(L, p4);
                
                int __gen_error = LuaAPI.lua_pcall(L, 5, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp263(object p0, EquipSlot p1, object p2, object p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                translator.PushAny(L, p2);
                translator.PushAny(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp264(object p0, object p1, UnityEngine.Color p2, object p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.PushUnityEngineColor(L, p2);
                translator.PushAny(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MonsterInfo __Gen_Delegate_Imp265(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MonsterInfo __gen_ret = (MonsterInfo)translator.GetObject(L, err_func + 1, typeof(MonsterInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public Monster __Gen_Delegate_Imp266(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                Monster __gen_ret = (Monster)translator.GetObject(L, err_func + 1, typeof(Monster));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public AssetMng.DownloadID __Gen_Delegate_Imp267(object p0, object p1, object p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.PushAny(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                AssetMng.DownloadID __gen_ret = (AssetMng.DownloadID)translator.GetObject(L, err_func + 1, typeof(AssetMng.DownloadID));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.IEnumerator __Gen_Delegate_Imp268(object p0, float p1, float p2, float p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.lua_pushnumber(L, p1);
                LuaAPI.lua_pushnumber(L, p2);
                LuaAPI.lua_pushnumber(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.IEnumerator __gen_ret = (System.Collections.IEnumerator)translator.GetObject(L, err_func + 1, typeof(System.Collections.IEnumerator));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MonsterData __Gen_Delegate_Imp269(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MonsterData __gen_ret = (MonsterData)translator.GetObject(L, err_func + 1, typeof(MonsterData));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MonsterRef __Gen_Delegate_Imp270(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MonsterRef __gen_ret = (MonsterRef)translator.GetObject(L, err_func + 1, typeof(MonsterRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UnityEngine.Color __Gen_Delegate_Imp271(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UnityEngine.Color __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public float __Gen_Delegate_Imp272(object p0, PreviewConfigType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                float __gen_ret = (float)LuaAPI.lua_tonumber(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UnityEngine.Vector3 __Gen_Delegate_Imp273(object p0, PreviewConfigType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UnityEngine.Vector3 __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MobRankLevel __Gen_Delegate_Imp274(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MobRankLevel __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<int> __Gen_Delegate_Imp275(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<int> __gen_ret = (System.Collections.Generic.List<int>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<int>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public TouchType __Gen_Delegate_Imp276(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                TouchType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SceneFunctionType __Gen_Delegate_Imp277(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SceneFunctionType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SceneItem __Gen_Delegate_Imp278(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SceneItem __gen_ret = (SceneItem)translator.GetObject(L, err_func + 1, typeof(SceneItem));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SceneItemDisRef __Gen_Delegate_Imp279(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SceneItemDisRef __gen_ret = (SceneItemDisRef)translator.GetObject(L, err_func + 1, typeof(SceneItemDisRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SceneItemRef __Gen_Delegate_Imp280(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SceneItemRef __gen_ret = (SceneItemRef)translator.GetObject(L, err_func + 1, typeof(SceneItemRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public BubbleRef __Gen_Delegate_Imp281(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                BubbleRef __gen_ret = (BubbleRef)translator.GetObject(L, err_func + 1, typeof(BubbleRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ConnectType __Gen_Delegate_Imp282(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ConnectType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public TaskStateType __Gen_Delegate_Imp283(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                TaskStateType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<SceneItemEffect> __Gen_Delegate_Imp284(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<SceneItemEffect> __gen_ret = (System.Collections.Generic.List<SceneItemEffect>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<SceneItemEffect>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<uint> __Gen_Delegate_Imp285(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<uint> __gen_ret = (System.Collections.Generic.List<uint>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<uint>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public DropItem __Gen_Delegate_Imp286(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                DropItem __gen_ret = (DropItem)translator.GetObject(L, err_func + 1, typeof(DropItem));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public EquipmentRef __Gen_Delegate_Imp287(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                EquipmentRef __gen_ret = (EquipmentRef)translator.GetObject(L, err_func + 1, typeof(EquipmentRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UnityEngine.Vector2 __Gen_Delegate_Imp288(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UnityEngine.Vector2 __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public EquipmentFamily __Gen_Delegate_Imp289(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                EquipmentFamily __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public Trap __Gen_Delegate_Imp290(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                Trap __gen_ret = (Trap)translator.GetObject(L, err_func + 1, typeof(Trap));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public TrapRef __Gen_Delegate_Imp291(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                TrapRef __gen_ret = (TrapRef)translator.GetObject(L, err_func + 1, typeof(TrapRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public FlyPointRef __Gen_Delegate_Imp292(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                FlyPointRef __gen_ret = (FlyPointRef)translator.GetObject(L, err_func + 1, typeof(FlyPointRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public FlyPoint __Gen_Delegate_Imp293(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                FlyPoint __gen_ret = (FlyPoint)translator.GetObject(L, err_func + 1, typeof(FlyPoint));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MercenaryInfo __Gen_Delegate_Imp294(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MercenaryInfo __gen_ret = (MercenaryInfo)translator.GetObject(L, err_func + 1, typeof(MercenaryInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public PlayerBase __Gen_Delegate_Imp295(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                PlayerBase __gen_ret = (PlayerBase)translator.GetObject(L, err_func + 1, typeof(PlayerBase));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp296(object p0, EquipSlot p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp297(object p0, bool p1, int p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.lua_pushboolean(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp298(object p0, EntourageAutoFightFSM.EventType p1, EntourageAutoFightFSM.EventType p2, float p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                translator.Push(L, p2);
                LuaAPI.lua_pushnumber(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SmartActor __Gen_Delegate_Imp299(object p0, EntourageAutoFightFSM.EventType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SmartActor __gen_ret = (SmartActor)translator.GetObject(L, err_func + 1, typeof(SmartActor));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp300(object p0, EntourageTalkType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MainEntourage __Gen_Delegate_Imp301(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MainEntourage __gen_ret = (MainEntourage)translator.GetObject(L, err_func + 1, typeof(MainEntourage));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.IEnumerator __Gen_Delegate_Imp302(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.IEnumerator __gen_ret = (System.Collections.IEnumerator)translator.GetObject(L, err_func + 1, typeof(System.Collections.IEnumerator));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp303(object p0, object p1, bool p2, bool p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.lua_pushboolean(L, p2);
                LuaAPI.lua_pushboolean(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MainEntourage.EventType __Gen_Delegate_Imp304(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MainEntourage.EventType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public PoPoRef __Gen_Delegate_Imp305(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                PoPoRef __gen_ret = (PoPoRef)translator.GetObject(L, err_func + 1, typeof(PoPoRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public OtherPlayer __Gen_Delegate_Imp306(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                OtherPlayer __gen_ret = (OtherPlayer)translator.GetObject(L, err_func + 1, typeof(OtherPlayer));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public float __Gen_Delegate_Imp307(object p0, UnityEngine.Vector3 p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushUnityEngineVector3(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                float __gen_ret = (float)LuaAPI.lua_tonumber(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public OtherEntourage __Gen_Delegate_Imp308(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                OtherEntourage __gen_ret = (OtherEntourage)translator.GetObject(L, err_func + 1, typeof(OtherEntourage));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public PlayerBaseInfo __Gen_Delegate_Imp309(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                PlayerBaseInfo __gen_ret = (PlayerBaseInfo)translator.GetObject(L, err_func + 1, typeof(PlayerBaseInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public PkMode __Gen_Delegate_Imp310(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                PkMode __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp311(object p0, SystemSettingMng.RendererQuality p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp312(object p0, ActorBaseTag p1, int p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp313(object p0, bool p1, bool p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.lua_pushboolean(L, p1);
                LuaAPI.lua_pushboolean(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public PlayerBaseData __Gen_Delegate_Imp314(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                PlayerBaseData __gen_ret = (PlayerBaseData)translator.GetObject(L, err_func + 1, typeof(PlayerBaseData));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public PlayerConfig __Gen_Delegate_Imp315(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                PlayerConfig __gen_ret = (PlayerConfig)translator.GetObject(L, err_func + 1, typeof(PlayerConfig));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp316(object p0, EquipSlot p1, int p2, bool p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                LuaAPI.lua_pushboolean(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<EquipmentInfo> __Gen_Delegate_Imp317(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<EquipmentInfo> __gen_ret = (System.Collections.Generic.List<EquipmentInfo>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<EquipmentInfo>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MountInfo __Gen_Delegate_Imp318(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MountInfo __gen_ret = (MountInfo)translator.GetObject(L, err_func + 1, typeof(MountInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<SkillInfo> __Gen_Delegate_Imp319(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<SkillInfo> __gen_ret = (System.Collections.Generic.List<SkillInfo>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<SkillInfo>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp320(object p0, int p1, int p2, bool p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                LuaAPI.lua_pushboolean(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public PreviewPlayer __Gen_Delegate_Imp321(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                PreviewPlayer __gen_ret = (PreviewPlayer)translator.GetObject(L, err_func + 1, typeof(PreviewPlayer));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public OtherPlayerInfo __Gen_Delegate_Imp322(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                OtherPlayerInfo __gen_ret = (OtherPlayerInfo)translator.GetObject(L, err_func + 1, typeof(OtherPlayerInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public OtherPlayerData __Gen_Delegate_Imp323(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                OtherPlayerData __gen_ret = (OtherPlayerData)translator.GetObject(L, err_func + 1, typeof(OtherPlayerData));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public OtherPlayerListSingle __Gen_Delegate_Imp324(object p0, object p1, int p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                OtherPlayerListSingle __gen_ret = (OtherPlayerListSingle)translator.GetObject(L, err_func + 1, typeof(OtherPlayerListSingle));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public InteractiveObject __Gen_Delegate_Imp325(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                InteractiveObject __gen_ret = (InteractiveObject)translator.GetObject(L, err_func + 1, typeof(InteractiveObject));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MainPlayer.AttackType __Gen_Delegate_Imp326(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MainPlayer.AttackType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp327(object p0, MainPlayer.AttackType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MainPlayerInfo __Gen_Delegate_Imp328(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MainPlayerInfo __gen_ret = (MainPlayerInfo)translator.GetObject(L, err_func + 1, typeof(MainPlayerInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UnityEngine.Color __Gen_Delegate_Imp329(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UnityEngine.Color __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp330(object p0, int p1, int p2, bool p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                LuaAPI.lua_pushboolean(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp331(object p0, ActorBaseTag p1, int p2, bool p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                LuaAPI.lua_pushboolean(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MainPlayer.EventType __Gen_Delegate_Imp332(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MainPlayer.EventType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp333(object p0, int p1, int p2, int p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                LuaAPI.xlua_pushinteger(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp334(object p0, float p1, float p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.lua_pushnumber(L, p1);
                LuaAPI.lua_pushnumber(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp335(object p0, RelationType p1, float p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                LuaAPI.lua_pushnumber(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MainPlayerData __Gen_Delegate_Imp336(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MainPlayerData __gen_ret = (MainPlayerData)translator.GetObject(L, err_func + 1, typeof(MainPlayerData));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public int __Gen_Delegate_Imp337(object p0, ActorBaseTag p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                int __gen_ret = LuaAPI.xlua_tointeger(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SceneRef __Gen_Delegate_Imp338(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SceneRef __gen_ret = (SceneRef)translator.GetObject(L, err_func + 1, typeof(SceneRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SceneUiType __Gen_Delegate_Imp339(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SceneUiType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp340(object p0, UnityEngine.Vector3 p1, UnityEngine.Vector3 p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushUnityEngineVector3(L, p1);
                translator.PushUnityEngineVector3(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp341(object p0, object p1, object p2, object p3, object p4)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.PushAny(L, p2);
                translator.PushAny(L, p3);
                translator.PushAny(L, p4);
                
                int __gen_error = LuaAPI.lua_pcall(L, 5, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp342(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public CreatePlayer __Gen_Delegate_Imp343(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                CreatePlayer __gen_ret = (CreatePlayer)translator.GetObject(L, err_func + 1, typeof(CreatePlayer));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public LoginPlayer __Gen_Delegate_Imp344(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                LoginPlayer __gen_ret = (LoginPlayer)translator.GetObject(L, err_func + 1, typeof(LoginPlayer));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public NPCInfo __Gen_Delegate_Imp345(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                NPCInfo __gen_ret = (NPCInfo)translator.GetObject(L, err_func + 1, typeof(NPCInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UnityEngine.Animation __Gen_Delegate_Imp346(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UnityEngine.Animation __gen_ret = (UnityEngine.Animation)translator.GetObject(L, err_func + 1, typeof(UnityEngine.Animation));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public NPC __Gen_Delegate_Imp347(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                NPC __gen_ret = (NPC)translator.GetObject(L, err_func + 1, typeof(NPC));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public NPCTaskState __Gen_Delegate_Imp348(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                NPCTaskState __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UnityEngine.Vector3 __Gen_Delegate_Imp349(object p0, UnityEngine.Vector3 p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushUnityEngineVector3(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UnityEngine.Vector3 __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public NpcData __Gen_Delegate_Imp350(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                NpcData __gen_ret = (NpcData)translator.GetObject(L, err_func + 1, typeof(NpcData));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SceneNPCRef __Gen_Delegate_Imp351(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SceneNPCRef __gen_ret = (SceneNPCRef)translator.GetObject(L, err_func + 1, typeof(SceneNPCRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public NPCAIRef __Gen_Delegate_Imp352(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                NPCAIRef __gen_ret = (NPCAIRef)translator.GetObject(L, err_func + 1, typeof(NPCAIRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public NPCTypeRef __Gen_Delegate_Imp353(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                NPCTypeRef __gen_ret = (NPCTypeRef)translator.GetObject(L, err_func + 1, typeof(NPCTypeRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ActionType __Gen_Delegate_Imp354(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ActionType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public AssetPathType __Gen_Delegate_Imp355(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                AssetPathType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp356(object p0, object p1, object p2, object p3, object p4, object p5, object p6)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.PushAny(L, p2);
                translator.PushAny(L, p3);
                translator.PushAny(L, p4);
                translator.PushAny(L, p5);
                translator.PushAny(L, p6);
                
                int __gen_error = LuaAPI.lua_pcall(L, 7, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public PreviewNPC __Gen_Delegate_Imp357(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                PreviewNPC __gen_ret = (PreviewNPC)translator.GetObject(L, err_func + 1, typeof(PreviewNPC));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public string __Gen_Delegate_Imp358(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                string __gen_ret = LuaAPI.lua_tostring(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public Mount __Gen_Delegate_Imp359(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                Mount __gen_ret = (Mount)translator.GetObject(L, err_func + 1, typeof(Mount));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UnityEngine.GameObject __Gen_Delegate_Imp360(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UnityEngine.GameObject __gen_ret = (UnityEngine.GameObject)translator.GetObject(L, err_func + 1, typeof(UnityEngine.GameObject));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp361(object p0, bool p1, bool p2, bool p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.lua_pushboolean(L, p1);
                LuaAPI.lua_pushboolean(L, p2);
                LuaAPI.lua_pushboolean(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MountData __Gen_Delegate_Imp362(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MountData __gen_ret = (MountData)translator.GetObject(L, err_func + 1, typeof(MountData));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MountRef __Gen_Delegate_Imp363(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MountRef __gen_ret = (MountRef)translator.GetObject(L, err_func + 1, typeof(MountRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public RidePropertyRef __Gen_Delegate_Imp364(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                RidePropertyRef __gen_ret = (RidePropertyRef)translator.GetObject(L, err_func + 1, typeof(RidePropertyRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<MountEffect> __Gen_Delegate_Imp365(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<MountEffect> __gen_ret = (System.Collections.Generic.List<MountEffect>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<MountEffect>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<ItemValue> __Gen_Delegate_Imp366(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<ItemValue> __gen_ret = (System.Collections.Generic.List<ItemValue>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<ItemValue>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public RecastType __Gen_Delegate_Imp367(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                RecastType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<BoneEffectRef> __Gen_Delegate_Imp368(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<BoneEffectRef> __gen_ret = (System.Collections.Generic.List<BoneEffectRef>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<BoneEffectRef>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public EquipmentInfo __Gen_Delegate_Imp369(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                EquipmentInfo __gen_ret = (EquipmentInfo)translator.GetObject(L, err_func + 1, typeof(EquipmentInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MountType __Gen_Delegate_Imp370(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MountType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public PreviewMount __Gen_Delegate_Imp371(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                PreviewMount __gen_ret = (PreviewMount)translator.GetObject(L, err_func + 1, typeof(PreviewMount));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.IEnumerator __Gen_Delegate_Imp372(object p0, float p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.lua_pushnumber(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.IEnumerator __gen_ret = (System.Collections.IEnumerator)translator.GetObject(L, err_func + 1, typeof(System.Collections.IEnumerator));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp373(object p0, int p1, int p2, int p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                LuaAPI.xlua_pushinteger(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public int __Gen_Delegate_Imp374(object p0, ActorPropertyTag p1, object p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                translator.PushAny(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                int __gen_ret = LuaAPI.xlua_tointeger(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<AttributePair> __Gen_Delegate_Imp375(object p0, object p1, object p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.PushAny(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<AttributePair> __gen_ret = (System.Collections.Generic.List<AttributePair>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<AttributePair>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp376(object p0, int p1, EquipSlot p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                translator.Push(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<MountRef> __Gen_Delegate_Imp377(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<MountRef> __gen_ret = (System.Collections.Generic.List<MountRef>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<MountRef>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MountInfo __Gen_Delegate_Imp378(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MountInfo __gen_ret = (MountInfo)translator.GetObject(L, err_func + 1, typeof(MountInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public EquipmentInfo __Gen_Delegate_Imp379(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                EquipmentInfo __gen_ret = (EquipmentInfo)translator.GetObject(L, err_func + 1, typeof(EquipmentInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<MountRef> __Gen_Delegate_Imp380(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<MountRef> __gen_ret = (System.Collections.Generic.List<MountRef>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<MountRef>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public int __Gen_Delegate_Imp381(object p0, object p1, object p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.PushAny(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                int __gen_ret = LuaAPI.xlua_tointeger(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public NewMountMng __Gen_Delegate_Imp382()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                NewMountMng __gen_ret = (NewMountMng)translator.GetObject(L, err_func + 1, typeof(NewMountMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp383(object p0, MountType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp384(object p0, ChangeMount p1, int p2, MountReqRideType p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                translator.Push(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UnityEngine.GameObject __Gen_Delegate_Imp385(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UnityEngine.GameObject __gen_ret = (UnityEngine.GameObject)translator.GetObject(L, err_func + 1, typeof(UnityEngine.GameObject));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UnityEngine.Vector3 __Gen_Delegate_Imp386(object p0, FlagType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UnityEngine.Vector3 __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp387(object p0, NPCTaskState p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public HeadTextPrefab __Gen_Delegate_Imp388(object p0, FlagType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                HeadTextPrefab __gen_ret = (HeadTextPrefab)translator.GetObject(L, err_func + 1, typeof(HeadTextPrefab));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp389(object p0, HeadTextCtrl.LeaderTagType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp390(object p0, float p1, object p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.lua_pushnumber(L, p1);
                translator.PushAny(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp391(object p0, object p1, float p2, float p3, UnityEngine.Vector3 p4, object p5)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.lua_pushnumber(L, p2);
                LuaAPI.lua_pushnumber(L, p3);
                translator.PushUnityEngineVector3(L, p4);
                translator.PushAny(L, p5);
                
                int __gen_error = LuaAPI.lua_pcall(L, 6, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp392(object p0, object p1, float p2, UnityEngine.Vector3 p3, UnityEngine.Quaternion p4)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.lua_pushnumber(L, p2);
                translator.PushUnityEngineVector3(L, p3);
                translator.PushUnityEngineQuaternion(L, p4);
                
                int __gen_error = LuaAPI.lua_pcall(L, 5, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp393(object p0, object p1, float p2, UnityEngine.Vector3 p3, UnityEngine.Quaternion p4, object p5)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.lua_pushnumber(L, p2);
                translator.PushUnityEngineVector3(L, p3);
                translator.PushUnityEngineQuaternion(L, p4);
                translator.PushAny(L, p5);
                
                int __gen_error = LuaAPI.lua_pcall(L, 6, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp394(object p0, object p1, float p2, UnityEngine.Vector3 p3, object p4)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.lua_pushnumber(L, p2);
                translator.PushUnityEngineVector3(L, p3);
                translator.PushAny(L, p4);
                
                int __gen_error = LuaAPI.lua_pcall(L, 5, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp395(object p0, object p1, object p2, object p3, float p4)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.PushAny(L, p2);
                translator.PushAny(L, p3);
                LuaAPI.lua_pushnumber(L, p4);
                
                int __gen_error = LuaAPI.lua_pcall(L, 5, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SoundMng __Gen_Delegate_Imp396()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SoundMng __gen_ret = (SoundMng)translator.GetObject(L, err_func + 1, typeof(SoundMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp397(object p0, SystemSettingType p1, bool p2, float p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                LuaAPI.lua_pushboolean(L, p2);
                LuaAPI.lua_pushnumber(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public string __Gen_Delegate_Imp398(SystemSound p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                string __gen_ret = LuaAPI.lua_tostring(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp399(object p0, object p1, float p2, bool p3, bool p4, int p5)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.lua_pushnumber(L, p2);
                LuaAPI.lua_pushboolean(L, p3);
                LuaAPI.lua_pushboolean(L, p4);
                LuaAPI.xlua_pushinteger(L, p5);
                
                int __gen_error = LuaAPI.lua_pcall(L, 6, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp400(object p0, SystemSound p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp401(object p0, object p1, float p2, bool p3, bool p4)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.lua_pushnumber(L, p2);
                LuaAPI.lua_pushboolean(L, p3);
                LuaAPI.lua_pushboolean(L, p4);
                
                int __gen_error = LuaAPI.lua_pcall(L, 5, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public float __Gen_Delegate_Imp402(object p0, object p1, float p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.lua_pushnumber(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                float __gen_ret = (float)LuaAPI.lua_tonumber(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public AudioAutoPlayLoader __Gen_Delegate_Imp403(object p0, object p1, float p2, bool p3, bool p4, int p5)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.lua_pushnumber(L, p2);
                LuaAPI.lua_pushboolean(L, p3);
                LuaAPI.lua_pushboolean(L, p4);
                LuaAPI.xlua_pushinteger(L, p5);
                
                int __gen_error = LuaAPI.lua_pcall(L, 6, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                AudioAutoPlayLoader __gen_ret = (AudioAutoPlayLoader)translator.GetObject(L, err_func + 1, typeof(AudioAutoPlayLoader));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public string __Gen_Delegate_Imp404(object p0, bool p1, bool p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.lua_pushboolean(L, p1);
                LuaAPI.lua_pushboolean(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                string __gen_ret = LuaAPI.lua_tostring(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp405(object p0, object p1, ref string p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.lua_pushstring(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                p2 = LuaAPI.lua_tostring(L, err_func + 1);
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UnityEngine.Object __Gen_Delegate_Imp406(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UnityEngine.Object __gen_ret = (UnityEngine.Object)translator.GetObject(L, err_func + 1, typeof(UnityEngine.Object));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UnityEngine.AssetBundle __Gen_Delegate_Imp407(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UnityEngine.AssetBundle __gen_ret = (UnityEngine.AssetBundle)translator.GetObject(L, err_func + 1, typeof(UnityEngine.AssetBundle));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public PreviewEntourage __Gen_Delegate_Imp408(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                PreviewEntourage __gen_ret = (PreviewEntourage)translator.GetObject(L, err_func + 1, typeof(PreviewEntourage));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public PreviewEquipment __Gen_Delegate_Imp409(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                PreviewEquipment __gen_ret = (PreviewEquipment)translator.GetObject(L, err_func + 1, typeof(PreviewEquipment));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public PreviewManager __Gen_Delegate_Imp410()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                PreviewManager __gen_ret = (PreviewManager)translator.GetObject(L, err_func + 1, typeof(PreviewManager));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UnityEngine.Vector2 __Gen_Delegate_Imp411(object p0, UnityEngine.Vector2 p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushUnityEngineVector2(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UnityEngine.Vector2 __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UnityEngine.GameObject __Gen_Delegate_Imp412(object p0, UnityEngine.Vector3 p1, UnityEngine.Vector3 p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushUnityEngineVector3(L, p1);
                translator.PushUnityEngineVector3(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UnityEngine.GameObject __gen_ret = (UnityEngine.GameObject)translator.GetObject(L, err_func + 1, typeof(UnityEngine.GameObject));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp413(object p0, object p1, object p2, object p3, ActorAnimFSM.EventType p4)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.PushAny(L, p2);
                translator.PushAny(L, p3);
                translator.Push(L, p4);
                
                int __gen_error = LuaAPI.lua_pcall(L, 5, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp414(object p0, object p1, object p2, bool p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.PushAny(L, p2);
                LuaAPI.lua_pushboolean(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp415(object p0, object p1, object p2, bool p3, object p4)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.PushAny(L, p2);
                LuaAPI.lua_pushboolean(L, p3);
                translator.PushAny(L, p4);
                
                int __gen_error = LuaAPI.lua_pcall(L, 5, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp416(object p0, object p1, object p2, ActorAnimFSM.EventType p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.PushAny(L, p2);
                translator.Push(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<st.net.NetBase.lost_item_info> __Gen_Delegate_Imp417(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<st.net.NetBase.lost_item_info> __gen_ret = (System.Collections.Generic.List<st.net.NetBase.lost_item_info>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<st.net.NetBase.lost_item_info>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<st.net.NetBase.entourage_info_list> __Gen_Delegate_Imp418(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<st.net.NetBase.entourage_info_list> __gen_ret = (System.Collections.Generic.List<st.net.NetBase.entourage_info_list>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<st.net.NetBase.entourage_info_list>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp419(object p0, int p1, object p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                translator.PushAny(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp420(object p0, int p1, object p2, PreviewConfigType p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                translator.PushAny(L, p2);
                translator.Push(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp421(object p0, int p1, object p2, PreviewConfigType p3, object p4)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                translator.PushAny(L, p2);
                translator.Push(L, p3);
                translator.PushAny(L, p4);
                
                int __gen_error = LuaAPI.lua_pcall(L, 5, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp422(object p0, object p1, object p2, PreviewConfigType p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.PushAny(L, p2);
                translator.Push(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp423(object p0, int p1, object p2, object p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                translator.PushAny(L, p2);
                translator.PushAny(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public PreviewMob __Gen_Delegate_Imp424(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                PreviewMob __gen_ret = (PreviewMob)translator.GetObject(L, err_func + 1, typeof(PreviewMob));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp425(object p0, int p1, NGUI3DType p2, object p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                translator.Push(L, p2);
                translator.PushAny(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp426(object p0, int p1, NGUI3DType p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                translator.Push(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp427(object p0, SubGUIType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SubGUIType __Gen_Delegate_Imp428(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SubGUIType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public GUIZLayer __Gen_Delegate_Imp429(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                GUIZLayer __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp430(object p0, GUIZLayer p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public GUIBase __Gen_Delegate_Imp431(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                GUIBase __gen_ret = (GUIBase)translator.GetObject(L, err_func + 1, typeof(GUIBase));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public GUIBase __Gen_Delegate_Imp432(object p0, GUIType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                GUIBase __gen_ret = (GUIBase)translator.GetObject(L, err_func + 1, typeof(GUIBase));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SubGUIType __Gen_Delegate_Imp433(object p0, SubGUIType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SubGUIType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public VIPDataInfo __Gen_Delegate_Imp434(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                VIPDataInfo __gen_ret = (VIPDataInfo)translator.GetObject(L, err_func + 1, typeof(VIPDataInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp435(object p0, int p1, UnityEngine.Vector3 p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                translator.PushUnityEngineVector3(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp436(object p0, TaskType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public int __Gen_Delegate_Imp437(object p0, TaskType p1, int p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                int __gen_ret = LuaAPI.xlua_tointeger(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp438(object p0, UnityEngine.Vector2 p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushUnityEngineVector2(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public TaskInfo __Gen_Delegate_Imp439(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                TaskInfo __gen_ret = (TaskInfo)translator.GetObject(L, err_func + 1, typeof(TaskInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public TaskListSingle __Gen_Delegate_Imp440(object p0, object p1, int p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                TaskListSingle __gen_ret = (TaskListSingle)translator.GetObject(L, err_func + 1, typeof(TaskListSingle));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public TeamMemberListSingle __Gen_Delegate_Imp441(object p0, object p1, int p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                TeamMemberListSingle __gen_ret = (TeamMemberListSingle)translator.GetObject(L, err_func + 1, typeof(TeamMemberListSingle));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp442(object p0, PkMode p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp443(object p0, UnityEngine.Vector3 p1, float p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushUnityEngineVector3(L, p1);
                LuaAPI.lua_pushnumber(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public string __Gen_Delegate_Imp444(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                string __gen_ret = LuaAPI.lua_tostring(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp445(object p0, uint p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushuint(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public PlayerBaseInfo __Gen_Delegate_Imp446(object p0, uint p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushuint(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                PlayerBaseInfo __gen_ret = (PlayerBaseInfo)translator.GetObject(L, err_func + 1, typeof(PlayerBaseInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public LoginMng.ConnectServerType __Gen_Delegate_Imp447(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                LoginMng.ConnectServerType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public int __Gen_Delegate_Imp448(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                int __gen_ret = LuaAPI.xlua_tointeger(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public LoginMng __Gen_Delegate_Imp449()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                LoginMng __gen_ret = (LoginMng)translator.GetObject(L, err_func + 1, typeof(LoginMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp450(object p0, int p1, object p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                translator.PushAny(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public string __Gen_Delegate_Imp451(object p0, object p1, object p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.PushAny(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                string __gen_ret = LuaAPI.lua_tostring(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp452(object p0, LoginStage.EventType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public LoginStage.EventType __Gen_Delegate_Imp453(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                LoginStage.EventType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.IEnumerator __Gen_Delegate_Imp454(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.IEnumerator __gen_ret = (System.Collections.IEnumerator)translator.GetObject(L, err_func + 1, typeof(System.Collections.IEnumerator));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp455(object p0, LoginMng.LoginPassType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ServerPageItem __Gen_Delegate_Imp456(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ServerPageItem __gen_ret = (ServerPageItem)translator.GetObject(L, err_func + 1, typeof(ServerPageItem));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ServerChoiceItem __Gen_Delegate_Imp457(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ServerChoiceItem __gen_ret = (ServerChoiceItem)translator.GetObject(L, err_func + 1, typeof(ServerChoiceItem));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.Dictionary<int, GuildData> __Gen_Delegate_Imp458(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.Dictionary<int, GuildData> __gen_ret = (System.Collections.Generic.Dictionary<int, GuildData>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.Dictionary<int, GuildData>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<GuildMemberData> __Gen_Delegate_Imp459(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<GuildMemberData> __gen_ret = (System.Collections.Generic.List<GuildMemberData>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<GuildMemberData>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.Dictionary<int, EquipmentInfo> __Gen_Delegate_Imp460(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.Dictionary<int, EquipmentInfo> __gen_ret = (System.Collections.Generic.Dictionary<int, EquipmentInfo>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.Dictionary<int, EquipmentInfo>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public GuildInfo __Gen_Delegate_Imp461(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                GuildInfo __gen_ret = (GuildInfo)translator.GetObject(L, err_func + 1, typeof(GuildInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public GuildMng __Gen_Delegate_Imp462(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                GuildMng __gen_ret = (GuildMng)translator.GetObject(L, err_func + 1, typeof(GuildMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp463(object p0, object p1, object p2, int p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.PushAny(L, p2);
                LuaAPI.xlua_pushinteger(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public GuildItem __Gen_Delegate_Imp464(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                GuildItem __gen_ret = (GuildItem)translator.GetObject(L, err_func + 1, typeof(GuildItem));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public GuildRef __Gen_Delegate_Imp465(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                GuildRef __gen_ret = (GuildRef)translator.GetObject(L, err_func + 1, typeof(GuildRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public GuildMemPosition __Gen_Delegate_Imp466(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                GuildMemPosition __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public GuildFightMng __Gen_Delegate_Imp467(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                GuildFightMng __gen_ret = (GuildFightMng)translator.GetObject(L, err_func + 1, typeof(GuildFightMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp468(object p0, int p1, object p2, int p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                translator.PushAny(L, p2);
                LuaAPI.xlua_pushinteger(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public GuildProtectRankUI __Gen_Delegate_Imp469(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                GuildProtectRankUI __gen_ret = (GuildProtectRankUI)translator.GetObject(L, err_func + 1, typeof(GuildProtectRankUI));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public RankItemUI __Gen_Delegate_Imp470(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                RankItemUI __gen_ret = (RankItemUI)translator.GetObject(L, err_func + 1, typeof(RankItemUI));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ApplyListItemUI __Gen_Delegate_Imp471(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ApplyListItemUI __gen_ret = (ApplyListItemUI)translator.GetObject(L, err_func + 1, typeof(ApplyListItemUI));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public GuildSkillInfo __Gen_Delegate_Imp472(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                GuildSkillInfo __gen_ret = (GuildSkillInfo)translator.GetObject(L, err_func + 1, typeof(GuildSkillInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public GuildSkillMng __Gen_Delegate_Imp473(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                GuildSkillMng __gen_ret = (GuildSkillMng)translator.GetObject(L, err_func + 1, typeof(GuildSkillMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public GuildSkillRef __Gen_Delegate_Imp474(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                GuildSkillRef __gen_ret = (GuildSkillRef)translator.GetObject(L, err_func + 1, typeof(GuildSkillRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<AttributePair> __Gen_Delegate_Imp475(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<AttributePair> __gen_ret = (System.Collections.Generic.List<AttributePair>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<AttributePair>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public GuildShopRef __Gen_Delegate_Imp476(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                GuildShopRef __gen_ret = (GuildShopRef)translator.GetObject(L, err_func + 1, typeof(GuildShopRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public GuildShopMng __Gen_Delegate_Imp477(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                GuildShopMng __gen_ret = (GuildShopMng)translator.GetObject(L, err_func + 1, typeof(GuildShopMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public InventoryMng __Gen_Delegate_Imp478(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                InventoryMng __gen_ret = (InventoryMng)translator.GetObject(L, err_func + 1, typeof(InventoryMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp479(object p0, ItemShowUIType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public EquipmentInfo __Gen_Delegate_Imp480(object p0, EquipSlot p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                EquipmentInfo __gen_ret = (EquipmentInfo)translator.GetObject(L, err_func + 1, typeof(EquipmentInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp481(object p0, EquipmentBelongTo p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp482(object p0, object p1, EquipmentBelongTo p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.Push(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp483(object p0, object p1, EquipmentInfo.EmptyType p2, EquipmentBelongTo p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.Push(L, p2);
                translator.Push(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.Dictionary<int, st.net.NetBase.pos_des> __Gen_Delegate_Imp484(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.Dictionary<int, st.net.NetBase.pos_des> __gen_ret = (System.Collections.Generic.Dictionary<int, st.net.NetBase.pos_des>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.Dictionary<int, st.net.NetBase.pos_des>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public EquipSlot __Gen_Delegate_Imp485(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                EquipSlot __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ShowType __Gen_Delegate_Imp486(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ShowType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public EquipmentBelongTo __Gen_Delegate_Imp487(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                EquipmentBelongTo __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public GoodsRecycleType __Gen_Delegate_Imp488(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                GoodsRecycleType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public GoodsAttentionType __Gen_Delegate_Imp489(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                GoodsAttentionType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public EquipmentBindType __Gen_Delegate_Imp490(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                EquipmentBindType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public int __Gen_Delegate_Imp491(object p0, ActorPropertyTag p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                int __gen_ret = LuaAPI.xlua_tointeger(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<AttributePair> __Gen_Delegate_Imp492(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<AttributePair> __gen_ret = (System.Collections.Generic.List<AttributePair>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<AttributePair>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public CDValue __Gen_Delegate_Imp493(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                CDValue __gen_ret = (CDValue)translator.GetObject(L, err_func + 1, typeof(CDValue));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public EquipActionType __Gen_Delegate_Imp494(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                EquipActionType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public string __Gen_Delegate_Imp495(int p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                
                
                LuaAPI.lua_getref(L, luaReference);
                
                LuaAPI.xlua_pushinteger(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                string __gen_ret = LuaAPI.lua_tostring(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UnityEngine.Color __Gen_Delegate_Imp496(int p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                LuaAPI.xlua_pushinteger(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UnityEngine.Color __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp497(object p0, int p1, EquipmentBelongTo p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                translator.Push(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp498(object p0, int p1, int p2, EquipmentBelongTo p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                translator.Push(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp499(object p0, object p1, int p2, EquipmentBelongTo p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                translator.Push(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp500(object p0, int p1, int p2, int p3, EquipmentBelongTo p4)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                LuaAPI.xlua_pushinteger(L, p3);
                translator.Push(L, p4);
                
                int __gen_error = LuaAPI.lua_pcall(L, 5, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp501(object p0, int p1, int p2, bool p3, EquipmentBelongTo p4)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                LuaAPI.lua_pushboolean(L, p3);
                translator.Push(L, p4);
                
                int __gen_error = LuaAPI.lua_pcall(L, 5, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp502(object p0, int p1, EquipmentInfo.EmptyType p2, EquipmentBelongTo p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                translator.Push(L, p2);
                translator.Push(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp503(object p0, LockUpdateType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public BlendRef __Gen_Delegate_Imp504(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                BlendRef __gen_ret = (BlendRef)translator.GetObject(L, err_func + 1, typeof(BlendRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp505(object p0, object p1, object p2, SubGUIType p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.PushAny(L, p2);
                translator.Push(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public DecomposeItemUI __Gen_Delegate_Imp506(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                DecomposeItemUI __gen_ret = (DecomposeItemUI)translator.GetObject(L, err_func + 1, typeof(DecomposeItemUI));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<StrengthenSuitRef> __Gen_Delegate_Imp507(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<StrengthenSuitRef> __gen_ret = (System.Collections.Generic.List<StrengthenSuitRef>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<StrengthenSuitRef>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp508(object p0, ActorPropertyTag p1, int p2, bool p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                LuaAPI.lua_pushboolean(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public StrengthenSuitRef __Gen_Delegate_Imp509(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                StrengthenSuitRef __gen_ret = (StrengthenSuitRef)translator.GetObject(L, err_func + 1, typeof(StrengthenSuitRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp510(object p0, ItemActionType p1, ItemActionType p2, ItemActionType p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                translator.Push(L, p2);
                translator.Push(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp511(object p0, ItemActionType p1, ItemActionType p2, ItemActionType p3, ItemActionType p4)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                translator.Push(L, p2);
                translator.Push(L, p3);
                translator.Push(L, p4);
                
                int __gen_error = LuaAPI.lua_pcall(L, 5, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ItemUI __Gen_Delegate_Imp512(object p0, int p1, object p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                translator.PushAny(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ItemUI __gen_ret = (ItemUI)translator.GetObject(L, err_func + 1, typeof(ItemUI));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ItemUI __Gen_Delegate_Imp513(object p0, UnityEngine.Vector3 p1, UnityEngine.Vector3 p2, bool p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushUnityEngineVector3(L, p1);
                translator.PushUnityEngineVector3(L, p2);
                LuaAPI.lua_pushboolean(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ItemUI __gen_ret = (ItemUI)translator.GetObject(L, err_func + 1, typeof(ItemUI));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public EquipmentInfo __Gen_Delegate_Imp514(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                EquipmentInfo __gen_ret = (EquipmentInfo)translator.GetObject(L, err_func + 1, typeof(EquipmentInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Text.StringBuilder __Gen_Delegate_Imp515(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Text.StringBuilder __gen_ret = (System.Text.StringBuilder)translator.GetObject(L, err_func + 1, typeof(System.Text.StringBuilder));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public string __Gen_Delegate_Imp516(object p0, ItemActionType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                string __gen_ret = LuaAPI.lua_tostring(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp517(object p0, ItemActionType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp518(object p0, ActorPropertyTag p1, int p2, object p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                translator.PushAny(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public EquipmentTrainingMng __Gen_Delegate_Imp519()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                EquipmentTrainingMng __gen_ret = (EquipmentTrainingMng)translator.GetObject(L, err_func + 1, typeof(EquipmentTrainingMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp520(object p0, int p1, object p2, bool p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                translator.PushAny(L, p2);
                LuaAPI.lua_pushboolean(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp521(object p0, int p1, int p2, object p3, bool p4)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                translator.PushAny(L, p3);
                LuaAPI.lua_pushboolean(L, p4);
                
                int __gen_error = LuaAPI.lua_pcall(L, 5, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp522(object p0, object p1, object p2, out bool p3, out bool p4)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.PushAny(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 2, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                p3 = LuaAPI.lua_toboolean(L, err_func + 1);
                p4 = LuaAPI.lua_toboolean(L, err_func + 2);
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public BossRef __Gen_Delegate_Imp523(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                BossRef __gen_ret = (BossRef)translator.GetObject(L, err_func + 1, typeof(BossRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<BossChallengeData> __Gen_Delegate_Imp524(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<BossChallengeData> __gen_ret = (System.Collections.Generic.List<BossChallengeData>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<BossChallengeData>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public BossChallengeMng __Gen_Delegate_Imp525()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                BossChallengeMng __gen_ret = (BossChallengeMng)translator.GetObject(L, err_func + 1, typeof(BossChallengeMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp526(BossChallengeWnd.ToggleType p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp527(object p0, BossChallengeWnd.ToggleType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public BossListSingle __Gen_Delegate_Imp528(object p0, object p1, int p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                BossListSingle __gen_ret = (BossListSingle)translator.GetObject(L, err_func + 1, typeof(BossListSingle));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public DailyMustDoMng __Gen_Delegate_Imp529()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                DailyMustDoMng __gen_ret = (DailyMustDoMng)translator.GetObject(L, err_func + 1, typeof(DailyMustDoMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<DailyMustDoInfo> __Gen_Delegate_Imp530(object p0, MustDoType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<DailyMustDoInfo> __gen_ret = (System.Collections.Generic.List<DailyMustDoInfo>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<DailyMustDoInfo>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public LivelyRef __Gen_Delegate_Imp531(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                LivelyRef __gen_ret = (LivelyRef)translator.GetObject(L, err_func + 1, typeof(LivelyRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public DailyMustDoInfo.RewardState __Gen_Delegate_Imp532(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                DailyMustDoInfo.RewardState __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MustDoType __Gen_Delegate_Imp533(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MustDoType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public DailyMustDoItemUI __Gen_Delegate_Imp534(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                DailyMustDoItemUI __gen_ret = (DailyMustDoItemUI)translator.GetObject(L, err_func + 1, typeof(DailyMustDoItemUI));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public TaskMng __Gen_Delegate_Imp535(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                TaskMng __gen_ret = (TaskMng)translator.GetObject(L, err_func + 1, typeof(TaskMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public TaskTeamWnd.ToggleType __Gen_Delegate_Imp536(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                TaskTeamWnd.ToggleType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp537(object p0, TaskTeamWnd.ToggleType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.Dictionary<int, TaskInfo> __Gen_Delegate_Imp538(object p0, TaskType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.Dictionary<int, TaskInfo> __gen_ret = (System.Collections.Generic.Dictionary<int, TaskInfo>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.Dictionary<int, TaskInfo>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<TaskInfo> __Gen_Delegate_Imp539(object p0, TaskType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<TaskInfo> __gen_ret = (System.Collections.Generic.List<TaskInfo>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<TaskInfo>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public TaskInfo __Gen_Delegate_Imp540(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                TaskInfo __gen_ret = (TaskInfo)translator.GetObject(L, err_func + 1, typeof(TaskInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp541(object p0, int p1, int p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp542(object p0, int p1, TaskType p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                translator.Push(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp543(object p0, int p1, int p2, TaskType p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                translator.Push(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<TaskInfo> __Gen_Delegate_Imp544(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<TaskInfo> __gen_ret = (System.Collections.Generic.List<TaskInfo>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<TaskInfo>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.Dictionary<int, TaskInfo> __Gen_Delegate_Imp545(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.Dictionary<int, TaskInfo> __gen_ret = (System.Collections.Generic.Dictionary<int, TaskInfo>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.Dictionary<int, TaskInfo>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public TaskSinglePath __Gen_Delegate_Imp546(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                TaskSinglePath __gen_ret = (TaskSinglePath)translator.GetObject(L, err_func + 1, typeof(TaskSinglePath));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp547(object p0, int p1, int p2, ref System.Collections.Generic.List<int> p3, ref System.Collections.Generic.List<int> p4)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                translator.Push(L, p3);
                translator.Push(L, p4);
                
                int __gen_error = LuaAPI.lua_pcall(L, 5, 3, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                p3 = (System.Collections.Generic.List<int>)translator.GetObject(L, err_func + 2, typeof(System.Collections.Generic.List<int>));
                p4 = (System.Collections.Generic.List<int>)translator.GetObject(L, err_func + 3, typeof(System.Collections.Generic.List<int>));
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public TaskStepRef __Gen_Delegate_Imp548(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                TaskStepRef __gen_ret = (TaskStepRef)translator.GetObject(L, err_func + 1, typeof(TaskStepRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public TaskType __Gen_Delegate_Imp549(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                TaskType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public GUIType __Gen_Delegate_Imp550(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                GUIType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public GuideType __Gen_Delegate_Imp551(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                GuideType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public TaskContentType __Gen_Delegate_Imp552(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                TaskContentType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<TaskConditionRef> __Gen_Delegate_Imp553(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<TaskConditionRef> __gen_ret = (System.Collections.Generic.List<TaskConditionRef>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<TaskConditionRef>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public CampType __Gen_Delegate_Imp554(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                CampType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp555(object p0, int p1, int p2, TaskStateType p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                translator.Push(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public NewMallMng __Gen_Delegate_Imp556(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                NewMallMng __gen_ret = (NewMallMng)translator.GetObject(L, err_func + 1, typeof(NewMallMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp557(object p0, MallItemType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MallRef __Gen_Delegate_Imp558(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MallRef __gen_ret = (MallRef)translator.GetObject(L, err_func + 1, typeof(MallRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public BuyMng __Gen_Delegate_Imp559(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                BuyMng __gen_ret = (BuyMng)translator.GetObject(L, err_func + 1, typeof(BuyMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp560(object p0, object p1, BuyType p2, int p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.Push(L, p2);
                LuaAPI.xlua_pushinteger(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp561(object p0, object p1, GUIType p2, BuyType p3, int p4)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.Push(L, p2);
                translator.Push(L, p3);
                LuaAPI.xlua_pushinteger(L, p4);
                
                int __gen_error = LuaAPI.lua_pcall(L, 5, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ShopMng __Gen_Delegate_Imp562(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ShopMng __gen_ret = (ShopMng)translator.GetObject(L, err_func + 1, typeof(ShopMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp563(object p0, ShopItemType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ShopRef __Gen_Delegate_Imp564(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ShopRef __gen_ret = (ShopRef)translator.GetObject(L, err_func + 1, typeof(ShopRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SystemSettingMng __Gen_Delegate_Imp565()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SystemSettingMng __gen_ret = (SystemSettingMng)translator.GetObject(L, err_func + 1, typeof(SystemSettingMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp566()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SystemSettingMng.RendererQuality __Gen_Delegate_Imp567(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SystemSettingMng.RendererQuality __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp568(object p0, object p1, UnityEngine.Vector2 p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.PushUnityEngineVector2(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public LittleHelperMng __Gen_Delegate_Imp569(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                LittleHelperMng __gen_ret = (LittleHelperMng)translator.GetObject(L, err_func + 1, typeof(LittleHelperMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp570(object p0, LittleHelpType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp571(object p0, ChatInfo.Type p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MessageInstanceMng __Gen_Delegate_Imp572()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MessageInstanceMng __gen_ret = (MessageInstanceMng)translator.GetObject(L, err_func + 1, typeof(MessageInstanceMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<MessageST> __Gen_Delegate_Imp573(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<MessageST> __gen_ret = (System.Collections.Generic.List<MessageST>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<MessageST>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public int __Gen_Delegate_Imp574(object p0, int p1, object p2, object p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                translator.PushAny(L, p2);
                translator.PushAny(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                int __gen_ret = LuaAPI.xlua_tointeger(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public int __Gen_Delegate_Imp575(object p0, int p1, object p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                translator.PushAny(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                int __gen_ret = LuaAPI.xlua_tointeger(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public int __Gen_Delegate_Imp576(object p0, int p1, object p2, object p3, object p4)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                translator.PushAny(L, p2);
                translator.PushAny(L, p3);
                translator.PushAny(L, p4);
                
                int __gen_error = LuaAPI.lua_pcall(L, 5, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                int __gen_ret = LuaAPI.xlua_tointeger(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<ErrorMsgStr> __Gen_Delegate_Imp577(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<ErrorMsgStr> __gen_ret = (System.Collections.Generic.List<ErrorMsgStr>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<ErrorMsgStr>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp578(object p0, int p1, int p2, object p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                translator.PushAny(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp579(object p0, object p1, object p2, bool p3, bool p4)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.PushAny(L, p2);
                LuaAPI.lua_pushboolean(L, p3);
                LuaAPI.lua_pushboolean(L, p4);
                
                int __gen_error = LuaAPI.lua_pcall(L, 5, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ServerMSGRef __Gen_Delegate_Imp580(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ServerMSGRef __gen_ret = (ServerMSGRef)translator.GetObject(L, err_func + 1, typeof(ServerMSGRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MsgRefData __Gen_Delegate_Imp581(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MsgRefData __gen_ret = (MsgRefData)translator.GetObject(L, err_func + 1, typeof(MsgRefData));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp582(object p0, GUIType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public object[] __Gen_Delegate_Imp583(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                object[] __gen_ret = (object[])translator.GetObject(L, err_func + 1, typeof(object[]));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.IEnumerator __Gen_Delegate_Imp584(object p0, object p1, bool p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.lua_pushboolean(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.IEnumerator __gen_ret = (System.Collections.IEnumerator)translator.GetObject(L, err_func + 1, typeof(System.Collections.IEnumerator));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MagicWeaponInfo __Gen_Delegate_Imp585(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MagicWeaponInfo __gen_ret = (MagicWeaponInfo)translator.GetObject(L, err_func + 1, typeof(MagicWeaponInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MagicWeaponMng __Gen_Delegate_Imp586(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MagicWeaponMng __gen_ret = (MagicWeaponMng)translator.GetObject(L, err_func + 1, typeof(MagicWeaponMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MagicWeaponRef __Gen_Delegate_Imp587(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MagicWeaponRef __gen_ret = (MagicWeaponRef)translator.GetObject(L, err_func + 1, typeof(MagicWeaponRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public RefineRef __Gen_Delegate_Imp588(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                RefineRef __gen_ret = (RefineRef)translator.GetObject(L, err_func + 1, typeof(RefineRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public AddSoulRef __Gen_Delegate_Imp589(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                AddSoulRef __gen_ret = (AddSoulRef)translator.GetObject(L, err_func + 1, typeof(AddSoulRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public WingInfo __Gen_Delegate_Imp590(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                WingInfo __gen_ret = (WingInfo)translator.GetObject(L, err_func + 1, typeof(WingInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public WingMng __Gen_Delegate_Imp591(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                WingMng __gen_ret = (WingMng)translator.GetObject(L, err_func + 1, typeof(WingMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp592(object p0, WingState p1, int p2, bool p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                LuaAPI.lua_pushboolean(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public WingRef __Gen_Delegate_Imp593(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                WingRef __gen_ret = (WingRef)translator.GetObject(L, err_func + 1, typeof(WingRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.Dictionary<int, WingRef> __Gen_Delegate_Imp594(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.Dictionary<int, WingRef> __gen_ret = (System.Collections.Generic.Dictionary<int, WingRef>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.Dictionary<int, WingRef>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public TreasureHouseMng __Gen_Delegate_Imp595()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                TreasureHouseMng __gen_ret = (TreasureHouseMng)translator.GetObject(L, err_func + 1, typeof(TreasureHouseMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp596(object p0, GetTreasureType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UnityEngine.GameObject __Gen_Delegate_Imp597(object p0, object p1, int p2, int p3, int p4)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                LuaAPI.xlua_pushinteger(L, p3);
                LuaAPI.xlua_pushinteger(L, p4);
                
                int __gen_error = LuaAPI.lua_pcall(L, 5, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UnityEngine.GameObject __gen_ret = (UnityEngine.GameObject)translator.GetObject(L, err_func + 1, typeof(UnityEngine.GameObject));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.Dictionary<int, NewRankingInfo> __Gen_Delegate_Imp598(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.Dictionary<int, NewRankingInfo> __gen_ret = (System.Collections.Generic.Dictionary<int, NewRankingInfo>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.Dictionary<int, NewRankingInfo>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public NewRankingMng __Gen_Delegate_Imp599()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                NewRankingMng __gen_ret = (NewRankingMng)translator.GetObject(L, err_func + 1, typeof(NewRankingMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public AchievementRewardState __Gen_Delegate_Imp600(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                AchievementRewardState __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public AchievementMng __Gen_Delegate_Imp601(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                AchievementMng __gen_ret = (AchievementMng)translator.GetObject(L, err_func + 1, typeof(AchievementMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<AchievementData> __Gen_Delegate_Imp602(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<AchievementData> __gen_ret = (System.Collections.Generic.List<AchievementData>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<AchievementData>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SevenDayMng __Gen_Delegate_Imp603()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SevenDayMng __gen_ret = (SevenDayMng)translator.GetObject(L, err_func + 1, typeof(SevenDayMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.Dictionary<int, SevendDayData> __Gen_Delegate_Imp604(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.Dictionary<int, SevendDayData> __gen_ret = (System.Collections.Generic.Dictionary<int, SevendDayData>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.Dictionary<int, SevendDayData>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public FirstChargeBonusMng __Gen_Delegate_Imp605()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                FirstChargeBonusMng __gen_ret = (FirstChargeBonusMng)translator.GetObject(L, err_func + 1, typeof(FirstChargeBonusMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public RankRewardMng __Gen_Delegate_Imp606()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                RankRewardMng __gen_ret = (RankRewardMng)translator.GetObject(L, err_func + 1, typeof(RankRewardMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp607(object p0, RewardType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.Dictionary<int, int> __Gen_Delegate_Imp608(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.Dictionary<int, int> __gen_ret = (System.Collections.Generic.Dictionary<int, int>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.Dictionary<int, int>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public EverydayRewardRef __Gen_Delegate_Imp609(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                EverydayRewardRef __gen_ret = (EverydayRewardRef)translator.GetObject(L, err_func + 1, typeof(EverydayRewardRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public EverydayRewardUi __Gen_Delegate_Imp610(object p0, object p1, int p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                EverydayRewardUi __gen_ret = (EverydayRewardUi)translator.GetObject(L, err_func + 1, typeof(EverydayRewardUi));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public RoyalTreasureMng __Gen_Delegate_Imp611()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                RoyalTreasureMng __gen_ret = (RoyalTreasureMng)translator.GetObject(L, err_func + 1, typeof(RoyalTreasureMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ActivityDataInfo __Gen_Delegate_Imp612(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ActivityDataInfo __gen_ret = (ActivityDataInfo)translator.GetObject(L, err_func + 1, typeof(ActivityDataInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ActivityState __Gen_Delegate_Imp613(object p0, ActivityType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ActivityState __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public int __Gen_Delegate_Imp614(object p0, ActivityType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                int __gen_ret = LuaAPI.xlua_tointeger(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp615(object p0, ActivityType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ActivityMng __Gen_Delegate_Imp616()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ActivityMng __gen_ret = (ActivityMng)translator.GetObject(L, err_func + 1, typeof(ActivityMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp617(object p0, int p1, DartType p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                translator.Push(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp618(object p0, DartType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ActivityListRef __Gen_Delegate_Imp619(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ActivityListRef __gen_ret = (ActivityListRef)translator.GetObject(L, err_func + 1, typeof(ActivityListRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ActivityDataInfo __Gen_Delegate_Imp620(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ActivityDataInfo __gen_ret = (ActivityDataInfo)translator.GetObject(L, err_func + 1, typeof(ActivityDataInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ActivityType __Gen_Delegate_Imp621(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ActivityType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ActivityState __Gen_Delegate_Imp622(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ActivityState __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp623(object p0, ActivityState p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ActivityState __Gen_Delegate_Imp624(object p0, bool p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.lua_pushboolean(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ActivityState __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ActivityState __Gen_Delegate_Imp625(object p0, object p1, bool p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.lua_pushboolean(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ActivityState __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public DuplicateMng __Gen_Delegate_Imp626()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                DuplicateMng __gen_ret = (DuplicateMng)translator.GetObject(L, err_func + 1, typeof(DuplicateMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp627(object p0, SubGUIType p1, OneCopySType p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                translator.Push(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp628(object p0, DuplicateMng.CopysType p1, OneCopySType p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                translator.Push(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.Dictionary<int, CopyInItemDataInfo> __Gen_Delegate_Imp629(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.Dictionary<int, CopyInItemDataInfo> __gen_ret = (System.Collections.Generic.Dictionary<int, CopyInItemDataInfo>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.Dictionary<int, CopyInItemDataInfo>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.Dictionary<int, CopySceneTeamPlayerInfo> __Gen_Delegate_Imp630(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.Dictionary<int, CopySceneTeamPlayerInfo> __gen_ret = (System.Collections.Generic.Dictionary<int, CopySceneTeamPlayerInfo>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.Dictionary<int, CopySceneTeamPlayerInfo>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public DuplicateMng.CopysType __Gen_Delegate_Imp631(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                DuplicateMng.CopysType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp632(object p0, DuplicateMng.CopysType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<OtherPlayerInfo> __Gen_Delegate_Imp633(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<OtherPlayerInfo> __gen_ret = (System.Collections.Generic.List<OtherPlayerInfo>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<OtherPlayerInfo>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public OtherPlayerInfo __Gen_Delegate_Imp634(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                OtherPlayerInfo __gen_ret = (OtherPlayerInfo)translator.GetObject(L, err_func + 1, typeof(OtherPlayerInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp635(object p0, object p1, object p2, int p3, bool p4, bool p5)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.PushAny(L, p2);
                LuaAPI.xlua_pushinteger(L, p3);
                LuaAPI.lua_pushboolean(L, p4);
                LuaAPI.lua_pushboolean(L, p5);
                
                int __gen_error = LuaAPI.lua_pcall(L, 6, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public string __Gen_Delegate_Imp636(object p0, int p1, bool p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.lua_pushboolean(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                string __gen_ret = LuaAPI.lua_tostring(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp637(object p0, byte p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public CopyGroupRef __Gen_Delegate_Imp638(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                CopyGroupRef __gen_ret = (CopyGroupRef)translator.GetObject(L, err_func + 1, typeof(CopyGroupRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp639(object p0, uint p1, uint p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushuint(L, p1);
                LuaAPI.xlua_pushuint(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp640(object p0, int p1, uint p2, bool p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushuint(L, p2);
                LuaAPI.lua_pushboolean(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public TeamMenberInfo __Gen_Delegate_Imp641(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                TeamMenberInfo __gen_ret = (TeamMenberInfo)translator.GetObject(L, err_func + 1, typeof(TeamMenberInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public CopyInItemDataInfo __Gen_Delegate_Imp642(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                CopyInItemDataInfo __gen_ret = (CopyInItemDataInfo)translator.GetObject(L, err_func + 1, typeof(CopyInItemDataInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public CopySettlementDataInfo __Gen_Delegate_Imp643(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                CopySettlementDataInfo __gen_ret = (CopySettlementDataInfo)translator.GetObject(L, err_func + 1, typeof(CopySettlementDataInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ArenaMng __Gen_Delegate_Imp644()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ArenaMng __gen_ret = (ArenaMng)translator.GetObject(L, err_func + 1, typeof(ArenaMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public CheckPointRef __Gen_Delegate_Imp645(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                CheckPointRef __gen_ret = (CheckPointRef)translator.GetObject(L, err_func + 1, typeof(CheckPointRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public EndLessTrialsMng __Gen_Delegate_Imp646()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                EndLessTrialsMng __gen_ret = (EndLessTrialsMng)translator.GetObject(L, err_func + 1, typeof(EndLessTrialsMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public EndLessTrialsDataInfo.EndLessTrialsItemData __Gen_Delegate_Imp647(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                EndLessTrialsDataInfo.EndLessTrialsItemData __gen_ret = (EndLessTrialsDataInfo.EndLessTrialsItemData)translator.GetObject(L, err_func + 1, typeof(EndLessTrialsDataInfo.EndLessTrialsItemData));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ChapterReward __Gen_Delegate_Imp648(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ChapterReward __gen_ret = (ChapterReward)translator.GetObject(L, err_func + 1, typeof(ChapterReward));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public EndLessTrialsMng __Gen_Delegate_Imp649(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                EndLessTrialsMng __gen_ret = (EndLessTrialsMng)translator.GetObject(L, err_func + 1, typeof(EndLessTrialsMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ChapterReward __Gen_Delegate_Imp650(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ChapterReward __gen_ret = (ChapterReward)translator.GetObject(L, err_func + 1, typeof(ChapterReward));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public VipMng __Gen_Delegate_Imp651()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                VipMng __gen_ret = (VipMng)translator.GetObject(L, err_func + 1, typeof(VipMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public VIPRef __Gen_Delegate_Imp652(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                VIPRef __gen_ret = (VIPRef)translator.GetObject(L, err_func + 1, typeof(VIPRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<RechargeRef> __Gen_Delegate_Imp653(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<RechargeRef> __gen_ret = (System.Collections.Generic.List<RechargeRef>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<RechargeRef>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public RechargeMng __Gen_Delegate_Imp654(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                RechargeMng __gen_ret = (RechargeMng)translator.GetObject(L, err_func + 1, typeof(RechargeMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public FunctionType __Gen_Delegate_Imp655(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                FunctionType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public OpenNewFunctionGuideRef __Gen_Delegate_Imp656(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                OpenNewFunctionGuideRef __gen_ret = (OpenNewFunctionGuideRef)translator.GetObject(L, err_func + 1, typeof(OpenNewFunctionGuideRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp657(object p0, FunctionType p1, bool p2, FunctionDataInfo.FunctionControlType p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                LuaAPI.lua_pushboolean(L, p2);
                translator.Push(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp658(object p0, FunctionType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp659(object p0, object p1, ModelType p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.Push(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UnityEngine.Vector3 __Gen_Delegate_Imp660(object p0, UnityEngine.Vector2 p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushUnityEngineVector2(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UnityEngine.Vector3 __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public OffLineRewardMng __Gen_Delegate_Imp661()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                OffLineRewardMng __gen_ret = (OffLineRewardMng)translator.GetObject(L, err_func + 1, typeof(OffLineRewardMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public OffLineRewardRef __Gen_Delegate_Imp662(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                OffLineRewardRef __gen_ret = (OffLineRewardRef)translator.GetObject(L, err_func + 1, typeof(OffLineRewardRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public NoviceGuideMng __Gen_Delegate_Imp663()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                NoviceGuideMng __gen_ret = (NoviceGuideMng)translator.GetObject(L, err_func + 1, typeof(NoviceGuideMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UnityEngine.Vector3 __Gen_Delegate_Imp664(object p0, UnityEngine.Vector2 p1, int p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushUnityEngineVector2(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UnityEngine.Vector3 __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public TreasureTroveMng __Gen_Delegate_Imp665()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                TreasureTroveMng __gen_ret = (TreasureTroveMng)translator.GetObject(L, err_func + 1, typeof(TreasureTroveMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ItemValue __Gen_Delegate_Imp666(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ItemValue __gen_ret = (ItemValue)translator.GetObject(L, err_func + 1, typeof(ItemValue));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<st.net.NetBase.treasure_times_reward> __Gen_Delegate_Imp667(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<st.net.NetBase.treasure_times_reward> __gen_ret = (System.Collections.Generic.List<st.net.NetBase.treasure_times_reward>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<st.net.NetBase.treasure_times_reward>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<System.Collections.Generic.List<ItemValue>> __Gen_Delegate_Imp668(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<System.Collections.Generic.List<ItemValue>> __gen_ret = (System.Collections.Generic.List<System.Collections.Generic.List<ItemValue>>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<System.Collections.Generic.List<ItemValue>>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<st.net.NetBase.rank_info_base> __Gen_Delegate_Imp669(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<st.net.NetBase.rank_info_base> __gen_ret = (System.Collections.Generic.List<st.net.NetBase.rank_info_base>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<st.net.NetBase.rank_info_base>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public TreasureRankItemUI __Gen_Delegate_Imp670(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                TreasureRankItemUI __gen_ret = (TreasureRankItemUI)translator.GetObject(L, err_func + 1, typeof(TreasureRankItemUI));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public TreasureRankItemUI __Gen_Delegate_Imp671(object p0, object p1, UnityEngine.Color p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.PushUnityEngineColor(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                TreasureRankItemUI __gen_ret = (TreasureRankItemUI)translator.GetObject(L, err_func + 1, typeof(TreasureRankItemUI));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public TreasureSuperItemUI __Gen_Delegate_Imp672(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                TreasureSuperItemUI __gen_ret = (TreasureSuperItemUI)translator.GetObject(L, err_func + 1, typeof(TreasureSuperItemUI));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp673(object p0, int p1, int p2, int p3, uint p4, object p5, object p6)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                LuaAPI.xlua_pushinteger(L, p3);
                LuaAPI.xlua_pushuint(L, p4);
                translator.PushAny(L, p5);
                translator.PushAny(L, p6);
                
                int __gen_error = LuaAPI.lua_pcall(L, 7, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public PetData __Gen_Delegate_Imp674(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                PetData __gen_ret = (PetData)translator.GetObject(L, err_func + 1, typeof(PetData));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public NewPetRef __Gen_Delegate_Imp675(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                NewPetRef __gen_ret = (NewPetRef)translator.GetObject(L, err_func + 1, typeof(NewPetRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<st.net.NetBase.pet_property_list> __Gen_Delegate_Imp676(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<st.net.NetBase.pet_property_list> __gen_ret = (System.Collections.Generic.List<st.net.NetBase.pet_property_list>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<st.net.NetBase.pet_property_list>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<uint> __Gen_Delegate_Imp677(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<uint> __gen_ret = (System.Collections.Generic.List<uint>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<uint>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MercenaryInfo __Gen_Delegate_Imp678(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MercenaryInfo __gen_ret = (MercenaryInfo)translator.GetObject(L, err_func + 1, typeof(MercenaryInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<TitleRef> __Gen_Delegate_Imp679(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<TitleRef> __gen_ret = (System.Collections.Generic.List<TitleRef>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<TitleRef>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MercenaryMng __Gen_Delegate_Imp680()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MercenaryMng __gen_ret = (MercenaryMng)translator.GetObject(L, err_func + 1, typeof(MercenaryMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public int __Gen_Delegate_Imp681(object p0, PetPropertyType p1, int p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                int __gen_ret = LuaAPI.xlua_tointeger(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp682(object p0, PetChange p1, int p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp683(object p0, PetChange p1, int p2, int p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                LuaAPI.xlua_pushinteger(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<int> __Gen_Delegate_Imp684(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<int> __gen_ret = (System.Collections.Generic.List<int>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<int>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public NewPetSkillRef __Gen_Delegate_Imp685(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                NewPetSkillRef __gen_ret = (NewPetSkillRef)translator.GetObject(L, err_func + 1, typeof(NewPetSkillRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public BookItem __Gen_Delegate_Imp686(int p0, object p1, bool p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                LuaAPI.xlua_pushinteger(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.lua_pushboolean(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                BookItem __gen_ret = (BookItem)translator.GetObject(L, err_func + 1, typeof(BookItem));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public TitleRef __Gen_Delegate_Imp687(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                TitleRef __gen_ret = (TitleRef)translator.GetObject(L, err_func + 1, typeof(TitleRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public PetHonor __Gen_Delegate_Imp688(int p0, int p1, object p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                LuaAPI.xlua_pushinteger(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                translator.PushAny(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                PetHonor __gen_ret = (PetHonor)translator.GetObject(L, err_func + 1, typeof(PetHonor));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp689(object p0, int p1, PetChange p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                translator.Push(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public NewPetSkillNumRef __Gen_Delegate_Imp690(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                NewPetSkillNumRef __gen_ret = (NewPetSkillNumRef)translator.GetObject(L, err_func + 1, typeof(NewPetSkillNumRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp691(object p0, LingXiuType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp692(object p0, PetChange p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SingleLearnedSkill __Gen_Delegate_Imp693(int p0, int p1, object p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                LuaAPI.xlua_pushinteger(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                translator.PushAny(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SingleLearnedSkill __gen_ret = (SingleLearnedSkill)translator.GetObject(L, err_func + 1, typeof(SingleLearnedSkill));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SingleSkill __Gen_Delegate_Imp694(int p0, int p1, object p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                LuaAPI.xlua_pushinteger(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                translator.PushAny(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SingleSkill __gen_ret = (SingleSkill)translator.GetObject(L, err_func + 1, typeof(SingleSkill));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SingleSpritAnimal __Gen_Delegate_Imp695(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SingleSpritAnimal __gen_ret = (SingleSpritAnimal)translator.GetObject(L, err_func + 1, typeof(SingleSpritAnimal));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SkinItem __Gen_Delegate_Imp696(int p0, int p1, object p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                LuaAPI.xlua_pushinteger(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                translator.PushAny(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SkinItem __gen_ret = (SkinItem)translator.GetObject(L, err_func + 1, typeof(SkinItem));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public FriendsInfo __Gen_Delegate_Imp697(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                FriendsInfo __gen_ret = (FriendsInfo)translator.GetObject(L, err_func + 1, typeof(FriendsInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<FriendsInfo> __Gen_Delegate_Imp698(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<FriendsInfo> __gen_ret = (System.Collections.Generic.List<FriendsInfo>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<FriendsInfo>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public FriendsMng __Gen_Delegate_Imp699()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                FriendsMng __gen_ret = (FriendsMng)translator.GetObject(L, err_func + 1, typeof(FriendsMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp700(object p0, FriendOperation p1, object p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                translator.PushAny(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp701(object p0, FriendOperation p1, int p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public FriendsInfo __Gen_Delegate_Imp702(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                FriendsInfo __gen_ret = (FriendsInfo)translator.GetObject(L, err_func + 1, typeof(FriendsInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public FlowerData __Gen_Delegate_Imp703(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                FlowerData __gen_ret = (FlowerData)translator.GetObject(L, err_func + 1, typeof(FlowerData));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public WeddingRef __Gen_Delegate_Imp704(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                WeddingRef __gen_ret = (WeddingRef)translator.GetObject(L, err_func + 1, typeof(WeddingRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public PracticeMng __Gen_Delegate_Imp705()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                PracticeMng __gen_ret = (PracticeMng)translator.GetObject(L, err_func + 1, typeof(PracticeMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp706(object p0, int p1, object p2, object p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                translator.PushAny(L, p2);
                translator.PushAny(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp707(object p0, practiceType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp708(object p0, ExcerciseType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp709(object p0, int p1, bool p2, int p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.lua_pushboolean(L, p2);
                LuaAPI.xlua_pushinteger(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp710(object p0, UnityEngine.Vector3 p1, LingXiuType p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushUnityEngineVector3(L, p1);
                translator.Push(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SwornRef __Gen_Delegate_Imp711(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SwornRef __gen_ret = (SwornRef)translator.GetObject(L, err_func + 1, typeof(SwornRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp712(object p0, ActorPropertyTag p1, object p2, object p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                translator.PushAny(L, p2);
                translator.PushAny(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<float> __Gen_Delegate_Imp713(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<float> __gen_ret = (System.Collections.Generic.List<float>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<float>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<ItemValue> __Gen_Delegate_Imp714(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<ItemValue> __gen_ret = (System.Collections.Generic.List<ItemValue>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<ItemValue>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public st.net.NetBase.brothers_list __Gen_Delegate_Imp715(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                st.net.NetBase.brothers_list __gen_ret = (st.net.NetBase.brothers_list)translator.GetObject(L, err_func + 1, typeof(st.net.NetBase.brothers_list));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public OpenType __Gen_Delegate_Imp716(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                OpenType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp717(object p0, OpenType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<TaskInfo> __Gen_Delegate_Imp718(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<TaskInfo> __gen_ret = (System.Collections.Generic.List<TaskInfo>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<TaskInfo>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SwornMng __Gen_Delegate_Imp719()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SwornMng __gen_ret = (SwornMng)translator.GetObject(L, err_func + 1, typeof(SwornMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<st.net.NetBase.brother_reward_info> __Gen_Delegate_Imp720(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<st.net.NetBase.brother_reward_info> __gen_ret = (System.Collections.Generic.List<st.net.NetBase.brother_reward_info>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<st.net.NetBase.brother_reward_info>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<int, int>> __Gen_Delegate_Imp721(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<int, int>> __gen_ret = (System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<int, int>>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<int, int>>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SwornData __Gen_Delegate_Imp722(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SwornData __gen_ret = (SwornData)translator.GetObject(L, err_func + 1, typeof(SwornData));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public TokenLevRef __Gen_Delegate_Imp723(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                TokenLevRef __gen_ret = (TokenLevRef)translator.GetObject(L, err_func + 1, typeof(TokenLevRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public CoupleMng __Gen_Delegate_Imp724()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                CoupleMng __gen_ret = (CoupleMng)translator.GetObject(L, err_func + 1, typeof(CoupleMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public RankRewardUi __Gen_Delegate_Imp725(object p0, object p1, int p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                RankRewardUi __gen_ret = (RankRewardUi)translator.GetObject(L, err_func + 1, typeof(RankRewardUi));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<DialogueRef> __Gen_Delegate_Imp726(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<DialogueRef> __gen_ret = (System.Collections.Generic.List<DialogueRef>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<DialogueRef>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public LovePackageMng __Gen_Delegate_Imp727()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                LovePackageMng __gen_ret = (LovePackageMng)translator.GetObject(L, err_func + 1, typeof(LovePackageMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public WeekCardMng __Gen_Delegate_Imp728()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                WeekCardMng __gen_ret = (WeekCardMng)translator.GetObject(L, err_func + 1, typeof(WeekCardMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp729(object p0, object p1, int p2, bool p3, int p4)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                LuaAPI.lua_pushboolean(L, p3);
                LuaAPI.xlua_pushinteger(L, p4);
                
                int __gen_error = LuaAPI.lua_pcall(L, 5, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public BattleFieldRankUi __Gen_Delegate_Imp730(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                BattleFieldRankUi __gen_ret = (BattleFieldRankUi)translator.GetObject(L, err_func + 1, typeof(BattleFieldRankUi));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public BattleFightMng __Gen_Delegate_Imp731()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                BattleFightMng __gen_ret = (BattleFightMng)translator.GetObject(L, err_func + 1, typeof(BattleFightMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public BattleFieldRef __Gen_Delegate_Imp732(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                BattleFieldRef __gen_ret = (BattleFieldRef)translator.GetObject(L, err_func + 1, typeof(BattleFieldRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public BattleComentUi __Gen_Delegate_Imp733(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                BattleComentUi __gen_ret = (BattleComentUi)translator.GetObject(L, err_func + 1, typeof(BattleComentUi));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ChatInfo.Type __Gen_Delegate_Imp734(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ChatInfo.Type __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<VoiceData> __Gen_Delegate_Imp735(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<VoiceData> __gen_ret = (System.Collections.Generic.List<VoiceData>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<VoiceData>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ChatMng __Gen_Delegate_Imp736()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ChatMng __gen_ret = (ChatMng)translator.GetObject(L, err_func + 1, typeof(ChatMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp737(object p0, object p1, int p2, object p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                translator.PushAny(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp738(object p0, ChatInfo.Type p1, object p2, object p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                translator.PushAny(L, p2);
                translator.PushAny(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<ChatInfo> __Gen_Delegate_Imp739(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<ChatInfo> __gen_ret = (System.Collections.Generic.List<ChatInfo>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<ChatInfo>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<ChatInfo> __Gen_Delegate_Imp740(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<ChatInfo> __gen_ret = (System.Collections.Generic.List<ChatInfo>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<ChatInfo>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public int __Gen_Delegate_Imp741(object p0, ChatInfo.Type p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                int __gen_ret = LuaAPI.xlua_tointeger(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp742(object p0, ChatInfo.Type p1, int p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp743(object p0, bool p1, ChatInfo.Type p2, object p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.lua_pushboolean(L, p1);
                translator.Push(L, p2);
                translator.PushAny(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ChatInfo __Gen_Delegate_Imp744(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ChatInfo __gen_ret = (ChatInfo)translator.GetObject(L, err_func + 1, typeof(ChatInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public CurAutoPlayVoiceType __Gen_Delegate_Imp745(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                CurAutoPlayVoiceType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public string __Gen_Delegate_Imp746(object p0, ChatInfo.Type p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                string __gen_ret = LuaAPI.lua_tostring(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp747(object p0, UnityEngine.Vector3 p1, int p2, int p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushUnityEngineVector3(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                LuaAPI.xlua_pushinteger(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ChatContentUI __Gen_Delegate_Imp748(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ChatContentUI __gen_ret = (ChatContentUI)translator.GetObject(L, err_func + 1, typeof(ChatContentUI));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp749(object p0, object p1, UnityEngine.Vector3 p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.PushUnityEngineVector3(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public OnlineRewardRef __Gen_Delegate_Imp750(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                OnlineRewardRef __gen_ret = (OnlineRewardRef)translator.GetObject(L, err_func + 1, typeof(OnlineRewardRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public OnlineRewardMng __Gen_Delegate_Imp751(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                OnlineRewardMng __gen_ret = (OnlineRewardMng)translator.GetObject(L, err_func + 1, typeof(OnlineRewardMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp752(object p0, object p1, int p2, int p3, object p4)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                LuaAPI.xlua_pushinteger(L, p3);
                translator.PushAny(L, p4);
                
                int __gen_error = LuaAPI.lua_pcall(L, 5, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp753(object p0, object p1, int p2, object p3, object p4)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                translator.PushAny(L, p3);
                translator.PushAny(L, p4);
                
                int __gen_error = LuaAPI.lua_pcall(L, 5, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SkillInfo __Gen_Delegate_Imp754(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SkillInfo __gen_ret = (SkillInfo)translator.GetObject(L, err_func + 1, typeof(SkillInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MailData __Gen_Delegate_Imp755(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MailData __gen_ret = (MailData)translator.GetObject(L, err_func + 1, typeof(MailData));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<MailData> __Gen_Delegate_Imp756(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<MailData> __gen_ret = (System.Collections.Generic.List<MailData>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<MailData>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.Dictionary<int, MailData> __Gen_Delegate_Imp757(object p0, XXMailMng.MailState p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.Dictionary<int, MailData> __gen_ret = (System.Collections.Generic.Dictionary<int, MailData>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.Dictionary<int, MailData>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public XXMailMng __Gen_Delegate_Imp758()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                XXMailMng __gen_ret = (XXMailMng)translator.GetObject(L, err_func + 1, typeof(XXMailMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public FashionInfo __Gen_Delegate_Imp759(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                FashionInfo __gen_ret = (FashionInfo)translator.GetObject(L, err_func + 1, typeof(FashionInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public FashionMng __Gen_Delegate_Imp760(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                FashionMng __gen_ret = (FashionMng)translator.GetObject(L, err_func + 1, typeof(FashionMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public FashionRef __Gen_Delegate_Imp761(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                FashionRef __gen_ret = (FashionRef)translator.GetObject(L, err_func + 1, typeof(FashionRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public RemainTime __Gen_Delegate_Imp762(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                RemainTime __gen_ret = (RemainTime)translator.GetObject(L, err_func + 1, typeof(RemainTime));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp763(object p0, int p1, int p2, int p3, object p4)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                LuaAPI.xlua_pushinteger(L, p3);
                translator.PushAny(L, p4);
                
                int __gen_error = LuaAPI.lua_pcall(L, 5, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp764(object p0, FashionWndType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public TitleMng __Gen_Delegate_Imp765(ref TitleMng p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 2, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                p0 = (TitleMng)translator.GetObject(L, err_func + 2, typeof(TitleMng));
                
                TitleMng __gen_ret = (TitleMng)translator.GetObject(L, err_func + 1, typeof(TitleMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public TitleInfo __Gen_Delegate_Imp766(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                TitleInfo __gen_ret = (TitleInfo)translator.GetObject(L, err_func + 1, typeof(TitleInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SkillMainConfigRef __Gen_Delegate_Imp767(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SkillMainConfigRef __gen_ret = (SkillMainConfigRef)translator.GetObject(L, err_func + 1, typeof(SkillMainConfigRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SkillMainLvRef __Gen_Delegate_Imp768(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SkillMainLvRef __gen_ret = (SkillMainLvRef)translator.GetObject(L, err_func + 1, typeof(SkillMainLvRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SkillLvDataRef __Gen_Delegate_Imp769(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SkillLvDataRef __gen_ret = (SkillLvDataRef)translator.GetObject(L, err_func + 1, typeof(SkillLvDataRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SkillMode __Gen_Delegate_Imp770(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SkillMode __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public AbilityInstance __Gen_Delegate_Imp771(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                AbilityInstance __gen_ret = (AbilityInstance)translator.GetObject(L, err_func + 1, typeof(AbilityInstance));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SkillMng __Gen_Delegate_Imp772(ref SkillMng p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 2, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                p0 = (SkillMng)translator.GetObject(L, err_func + 2, typeof(SkillMng));
                
                SkillMng __gen_ret = (SkillMng)translator.GetObject(L, err_func + 1, typeof(SkillMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<SkillInfo> __Gen_Delegate_Imp773(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<SkillInfo> __gen_ret = (System.Collections.Generic.List<SkillInfo>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<SkillInfo>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public CastSoulMng __Gen_Delegate_Imp774(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                CastSoulMng __gen_ret = (CastSoulMng)translator.GetObject(L, err_func + 1, typeof(CastSoulMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MarketRef __Gen_Delegate_Imp775(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MarketRef __gen_ret = (MarketRef)translator.GetObject(L, err_func + 1, typeof(MarketRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MarketMng __Gen_Delegate_Imp776(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MarketMng __gen_ret = (MarketMng)translator.GetObject(L, err_func + 1, typeof(MarketMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp777(object p0, int p1, int p2, int p3, int p4, int p5)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                LuaAPI.xlua_pushinteger(L, p3);
                LuaAPI.xlua_pushinteger(L, p4);
                LuaAPI.xlua_pushinteger(L, p5);
                
                int __gen_error = LuaAPI.lua_pcall(L, 6, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public OpenServerRewardInfoData __Gen_Delegate_Imp778(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                OpenServerRewardInfoData __gen_ret = (OpenServerRewardInfoData)translator.GetObject(L, err_func + 1, typeof(OpenServerRewardInfoData));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public OpenServerType __Gen_Delegate_Imp779(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                OpenServerType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp780(object p0, OpenServerType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public OpenServerRewardMng __Gen_Delegate_Imp781(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                OpenServerRewardMng __gen_ret = (OpenServerRewardMng)translator.GetObject(L, err_func + 1, typeof(OpenServerRewardMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<WdfActiveData> __Gen_Delegate_Imp782(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<WdfActiveData> __gen_ret = (System.Collections.Generic.List<WdfActiveData>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<WdfActiveData>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public WdfActiveMng __Gen_Delegate_Imp783()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                WdfActiveMng __gen_ret = (WdfActiveMng)translator.GetObject(L, err_func + 1, typeof(WdfActiveMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp784(object p0, WdfType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp785(object p0, object p1, UnityEngine.Vector3 p2, int p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.PushUnityEngineVector3(L, p2);
                LuaAPI.xlua_pushinteger(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp786(object p0, UnityEngine.Vector3 p1, int p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushUnityEngineVector3(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public DescriptionMng __Gen_Delegate_Imp787()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                DescriptionMng __gen_ret = (DescriptionMng)translator.GetObject(L, err_func + 1, typeof(DescriptionMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp788(object p0, SubGUIType p1, GUIType p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                translator.Push(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp789(object p0, GUIType p1, SubGUIType p2, GUIType p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                translator.Push(L, p2);
                translator.Push(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp790(object p0, GUIType p1, GUIType p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                translator.Push(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp791(object p0, GUIType p1, bool p2, SubGUIType p3, GUIType p4, object p5)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                LuaAPI.lua_pushboolean(L, p2);
                translator.Push(L, p3);
                translator.Push(L, p4);
                translator.PushAny(L, p5);
                
                int __gen_error = LuaAPI.lua_pcall(L, 6, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public GUIBase __Gen_Delegate_Imp792(object p0, object p1, bool p2, SubGUIType p3, GUIType p4, object p5)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.lua_pushboolean(L, p2);
                translator.Push(L, p3);
                translator.Push(L, p4);
                translator.PushAny(L, p5);
                
                int __gen_error = LuaAPI.lua_pcall(L, 6, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                GUIBase __gen_ret = (GUIBase)translator.GetObject(L, err_func + 1, typeof(GUIBase));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<string> __Gen_Delegate_Imp793(object p0, GUIType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<string> __gen_ret = (System.Collections.Generic.List<string>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<string>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp794(object p0, GUIType p1, SubGUIType p2, out bool p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                translator.Push(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 2, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                p3 = LuaAPI.lua_toboolean(L, err_func + 2);
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp795(object p0, GUIType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<AreaBuffRef> __Gen_Delegate_Imp796(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<AreaBuffRef> __gen_ret = (System.Collections.Generic.List<AreaBuffRef>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<AreaBuffRef>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SceneMng __Gen_Delegate_Imp797()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SceneMng __gen_ret = (SceneMng)translator.GetObject(L, err_func + 1, typeof(SceneMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public OtherPlayerInfo __Gen_Delegate_Imp798(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                OtherPlayerInfo __gen_ret = (OtherPlayerInfo)translator.GetObject(L, err_func + 1, typeof(OtherPlayerInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public NPCInfo __Gen_Delegate_Imp799(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                NPCInfo __gen_ret = (NPCInfo)translator.GetObject(L, err_func + 1, typeof(NPCInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MonsterInfo __Gen_Delegate_Imp800(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MonsterInfo __gen_ret = (MonsterInfo)translator.GetObject(L, err_func + 1, typeof(MonsterInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SceneItemInfo __Gen_Delegate_Imp801(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SceneItemInfo __gen_ret = (SceneItemInfo)translator.GetObject(L, err_func + 1, typeof(SceneItemInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public AbilityBallisticCurveInfo __Gen_Delegate_Imp802(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                AbilityBallisticCurveInfo __gen_ret = (AbilityBallisticCurveInfo)translator.GetObject(L, err_func + 1, typeof(AbilityBallisticCurveInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public TrapInfo __Gen_Delegate_Imp803(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                TrapInfo __gen_ret = (TrapInfo)translator.GetObject(L, err_func + 1, typeof(TrapInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public DropItemInfo __Gen_Delegate_Imp804(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                DropItemInfo __gen_ret = (DropItemInfo)translator.GetObject(L, err_func + 1, typeof(DropItemInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<DropItemInfo> __Gen_Delegate_Imp805(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<DropItemInfo> __gen_ret = (System.Collections.Generic.List<DropItemInfo>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<DropItemInfo>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<DropItemInfo> __Gen_Delegate_Imp806(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<DropItemInfo> __gen_ret = (System.Collections.Generic.List<DropItemInfo>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<DropItemInfo>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp807(object p0, bool p1, object p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.lua_pushboolean(L, p1);
                translator.PushAny(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp808(object p0, bool p1, TaskStateType p2, TaskStateType p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.lua_pushboolean(L, p1);
                translator.Push(L, p2);
                translator.Push(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<st.net.NetBase.call_boss_list> __Gen_Delegate_Imp809(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<st.net.NetBase.call_boss_list> __gen_ret = (System.Collections.Generic.List<st.net.NetBase.call_boss_list>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<st.net.NetBase.call_boss_list>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public DungeonMng __Gen_Delegate_Imp810()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                DungeonMng __gen_ret = (DungeonMng)translator.GetObject(L, err_func + 1, typeof(DungeonMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public AbilityMng __Gen_Delegate_Imp811()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                AbilityMng __gen_ret = (AbilityMng)translator.GetObject(L, err_func + 1, typeof(AbilityMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public AbilityInstance __Gen_Delegate_Imp812(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                AbilityInstance __gen_ret = (AbilityInstance)translator.GetObject(L, err_func + 1, typeof(AbilityInstance));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<st.net.NetBase.skill_effect> __Gen_Delegate_Imp813(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<st.net.NetBase.skill_effect> __gen_ret = (System.Collections.Generic.List<st.net.NetBase.skill_effect>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<st.net.NetBase.skill_effect>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SkillPerformanceRef __Gen_Delegate_Imp814(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SkillPerformanceRef __gen_ret = (SkillPerformanceRef)translator.GetObject(L, err_func + 1, typeof(SkillPerformanceRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SkillRuneRef __Gen_Delegate_Imp815(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SkillRuneRef __gen_ret = (SkillRuneRef)translator.GetObject(L, err_func + 1, typeof(SkillRuneRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SkillTargetType __Gen_Delegate_Imp816(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SkillTargetType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public AlertAreaType __Gen_Delegate_Imp817(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                AlertAreaType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ClientShowType __Gen_Delegate_Imp818(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ClientShowType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public TurnType __Gen_Delegate_Imp819(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                TurnType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SmartActor __Gen_Delegate_Imp820(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SmartActor __gen_ret = (SmartActor)translator.GetObject(L, err_func + 1, typeof(SmartActor));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<AbilityDelayEffectRefData> __Gen_Delegate_Imp821(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<AbilityDelayEffectRefData> __gen_ret = (System.Collections.Generic.List<AbilityDelayEffectRefData>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<AbilityDelayEffectRefData>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<SkillSoundPair> __Gen_Delegate_Imp822(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<SkillSoundPair> __gen_ret = (System.Collections.Generic.List<SkillSoundPair>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<SkillSoundPair>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SelfShiftType __Gen_Delegate_Imp823(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SelfShiftType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<UnityEngine.Transform> __Gen_Delegate_Imp824(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<UnityEngine.Transform> __gen_ret = (System.Collections.Generic.List<UnityEngine.Transform>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<UnityEngine.Transform>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp825(object p0, int p1, int p2, object p3, object p4)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                translator.PushAny(L, p3);
                translator.PushAny(L, p4);
                
                int __gen_error = LuaAPI.lua_pcall(L, 5, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp826(object p0, int p1, int p2, int p3, object p4, object p5)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                LuaAPI.xlua_pushinteger(L, p3);
                translator.PushAny(L, p4);
                translator.PushAny(L, p5);
                
                int __gen_error = LuaAPI.lua_pcall(L, 6, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public AttackResultType __Gen_Delegate_Imp827(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                AttackResultType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public DefResultType __Gen_Delegate_Imp828(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                DefResultType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public Actor __Gen_Delegate_Imp829(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                Actor __gen_ret = (Actor)translator.GetObject(L, err_func + 1, typeof(Actor));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ArrowRef __Gen_Delegate_Imp830(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ArrowRef __gen_ret = (ArrowRef)translator.GetObject(L, err_func + 1, typeof(ArrowRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public int __Gen_Delegate_Imp831()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                int __gen_ret = LuaAPI.xlua_tointeger(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public string __Gen_Delegate_Imp832(object p0, AssetPathType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                string __gen_ret = LuaAPI.lua_tostring(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public AssetMng.DownloadID __Gen_Delegate_Imp833(object p0, object p1, object p2, object p3, bool p4)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.PushAny(L, p2);
                translator.PushAny(L, p3);
                LuaAPI.lua_pushboolean(L, p4);
                
                int __gen_error = LuaAPI.lua_pcall(L, 5, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                AssetMng.DownloadID __gen_ret = (AssetMng.DownloadID)translator.GetObject(L, err_func + 1, typeof(AssetMng.DownloadID));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public AssetMng.DownloadID __Gen_Delegate_Imp834(object p0, object p1, float p2, object p3, object p4, bool p5)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.lua_pushnumber(L, p2);
                translator.PushAny(L, p3);
                translator.PushAny(L, p4);
                LuaAPI.lua_pushboolean(L, p5);
                
                int __gen_error = LuaAPI.lua_pcall(L, 6, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                AssetMng.DownloadID __gen_ret = (AssetMng.DownloadID)translator.GetObject(L, err_func + 1, typeof(AssetMng.DownloadID));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<string> __Gen_Delegate_Imp835(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<string> __gen_ret = (System.Collections.Generic.List<string>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<string>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public float __Gen_Delegate_Imp836(object p0, UnityEngine.Vector2 p1, UnityEngine.Vector2 p2, UnityEngine.Vector2 p3, UnityEngine.Vector2 p4)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushUnityEngineVector2(L, p1);
                translator.PushUnityEngineVector2(L, p2);
                translator.PushUnityEngineVector2(L, p3);
                translator.PushUnityEngineVector2(L, p4);
                
                int __gen_error = LuaAPI.lua_pcall(L, 5, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                float __gen_ret = (float)LuaAPI.lua_tonumber(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp837(object p0, CameraHigh p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp838(object p0, object p1, float p2, float p3, float p4, float p5)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                LuaAPI.lua_pushnumber(L, p2);
                LuaAPI.lua_pushnumber(L, p3);
                LuaAPI.lua_pushnumber(L, p4);
                LuaAPI.lua_pushnumber(L, p5);
                
                int __gen_error = LuaAPI.lua_pcall(L, 6, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp839(object p0, UnityEngine.Vector3 p1, float p2, float p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushUnityEngineVector3(L, p1);
                LuaAPI.lua_pushnumber(L, p2);
                LuaAPI.lua_pushnumber(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp840(object p0, UnityEngine.Vector3 p1, UnityEngine.Vector3 p2, float p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushUnityEngineVector3(L, p1);
                translator.PushUnityEngineVector3(L, p2);
                LuaAPI.lua_pushnumber(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.IEnumerator __Gen_Delegate_Imp841(object p0, object p1, UnityEngine.Rect p2, object p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.Push(L, p2);
                translator.PushAny(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.IEnumerator __gen_ret = (System.Collections.IEnumerator)translator.GetObject(L, err_func + 1, typeof(System.Collections.IEnumerator));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public float __Gen_Delegate_Imp842(float p0, float p1, float p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                
                
                LuaAPI.lua_getref(L, luaReference);
                
                LuaAPI.lua_pushnumber(L, p0);
                LuaAPI.lua_pushnumber(L, p1);
                LuaAPI.lua_pushnumber(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                float __gen_ret = (float)LuaAPI.lua_tonumber(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp843(object p0, CamController.FollowMode p1, UnityEngine.Vector3 p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                translator.PushUnityEngineVector3(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp844(object p0, UnityEngine.Vector3 p1, int p2, float p3, bool p4)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushUnityEngineVector3(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                LuaAPI.lua_pushnumber(L, p3);
                LuaAPI.lua_pushboolean(L, p4);
                
                int __gen_error = LuaAPI.lua_pcall(L, 5, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ConfigMng __Gen_Delegate_Imp845()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ConfigMng __gen_ret = (ConfigMng)translator.GetObject(L, err_func + 1, typeof(ConfigMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<int> __Gen_Delegate_Imp846(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<int> __gen_ret = (System.Collections.Generic.List<int>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<int>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public EquipmentInfo __Gen_Delegate_Imp847(object p0, int p1, int p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                EquipmentInfo __gen_ret = (EquipmentInfo)translator.GetObject(L, err_func + 1, typeof(EquipmentInfo));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ArrowRef __Gen_Delegate_Imp848(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ArrowRef __gen_ret = (ArrowRef)translator.GetObject(L, err_func + 1, typeof(ArrowRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public AttributeRef __Gen_Delegate_Imp849(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                AttributeRef __gen_ret = (AttributeRef)translator.GetObject(L, err_func + 1, typeof(AttributeRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ActivityListRef __Gen_Delegate_Imp850(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ActivityListRef __gen_ret = (ActivityListRef)translator.GetObject(L, err_func + 1, typeof(ActivityListRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ActivityButtonRef __Gen_Delegate_Imp851(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ActivityButtonRef __gen_ret = (ActivityButtonRef)translator.GetObject(L, err_func + 1, typeof(ActivityButtonRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public AttributeTypeRef __Gen_Delegate_Imp852(object p0, ActorPropertyTag p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                AttributeTypeRef __gen_ret = (AttributeTypeRef)translator.GetObject(L, err_func + 1, typeof(AttributeTypeRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public string __Gen_Delegate_Imp853(object p0, ActorPropertyTag p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                string __gen_ret = LuaAPI.lua_tostring(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public LivelyRef __Gen_Delegate_Imp854(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                LivelyRef __gen_ret = (LivelyRef)translator.GetObject(L, err_func + 1, typeof(LivelyRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public LivelyRewardRef __Gen_Delegate_Imp855(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                LivelyRewardRef __gen_ret = (LivelyRewardRef)translator.GetObject(L, err_func + 1, typeof(LivelyRewardRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public TowerRef __Gen_Delegate_Imp856(object p0, int p1, int p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                TowerRef __gen_ret = (TowerRef)translator.GetObject(L, err_func + 1, typeof(TowerRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public AddSoulRef __Gen_Delegate_Imp857(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                AddSoulRef __gen_ret = (AddSoulRef)translator.GetObject(L, err_func + 1, typeof(AddSoulRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public AddSoulRef __Gen_Delegate_Imp858(object p0, int p1, int p2, int p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                LuaAPI.xlua_pushinteger(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                AddSoulRef __gen_ret = (AddSoulRef)translator.GetObject(L, err_func + 1, typeof(AddSoulRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public AchieveTypeRef __Gen_Delegate_Imp859(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                AchieveTypeRef __gen_ret = (AchieveTypeRef)translator.GetObject(L, err_func + 1, typeof(AchieveTypeRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public AchievementRef __Gen_Delegate_Imp860(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                AchievementRef __gen_ret = (AchievementRef)translator.GetObject(L, err_func + 1, typeof(AchievementRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ArenaRankRef __Gen_Delegate_Imp861(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ArenaRankRef __gen_ret = (ArenaRankRef)translator.GetObject(L, err_func + 1, typeof(ArenaRankRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<AreaBuffRef> __Gen_Delegate_Imp862(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<AreaBuffRef> __gen_ret = (System.Collections.Generic.List<AreaBuffRef>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<AreaBuffRef>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public BattleFieldRef __Gen_Delegate_Imp863(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                BattleFieldRef __gen_ret = (BattleFieldRef)translator.GetObject(L, err_func + 1, typeof(BattleFieldRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public BattleSettlementBonusRef __Gen_Delegate_Imp864(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                BattleSettlementBonusRef __gen_ret = (BattleSettlementBonusRef)translator.GetObject(L, err_func + 1, typeof(BattleSettlementBonusRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<CopyGroupRef> __Gen_Delegate_Imp865(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<CopyGroupRef> __gen_ret = (System.Collections.Generic.List<CopyGroupRef>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<CopyGroupRef>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public CopyGroupRef __Gen_Delegate_Imp866(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                CopyGroupRef __gen_ret = (CopyGroupRef)translator.GetObject(L, err_func + 1, typeof(CopyGroupRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public CopyRef __Gen_Delegate_Imp867(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                CopyRef __gen_ret = (CopyRef)translator.GetObject(L, err_func + 1, typeof(CopyRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ChapterRef __Gen_Delegate_Imp868(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ChapterRef __gen_ret = (ChapterRef)translator.GetObject(L, err_func + 1, typeof(ChapterRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<ChapterReward> __Gen_Delegate_Imp869(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<ChapterReward> __gen_ret = (System.Collections.Generic.List<ChapterReward>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<ChapterReward>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public CheckPointRef __Gen_Delegate_Imp870(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                CheckPointRef __gen_ret = (CheckPointRef)translator.GetObject(L, err_func + 1, typeof(CheckPointRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public LineRef __Gen_Delegate_Imp871(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                LineRef __gen_ret = (LineRef)translator.GetObject(L, err_func + 1, typeof(LineRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public CastSoulRef __Gen_Delegate_Imp872(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                CastSoulRef __gen_ret = (CastSoulRef)translator.GetObject(L, err_func + 1, typeof(CastSoulRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public CastSoulTimeRef __Gen_Delegate_Imp873(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                CastSoulTimeRef __gen_ret = (CastSoulTimeRef)translator.GetObject(L, err_func + 1, typeof(CastSoulTimeRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public CastsoulRewardRef __Gen_Delegate_Imp874(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                CastsoulRewardRef __gen_ret = (CastsoulRewardRef)translator.GetObject(L, err_func + 1, typeof(CastsoulRewardRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SevenDaysRef __Gen_Delegate_Imp875(object p0, int p1, int p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SevenDaysRef __gen_ret = (SevenDaysRef)translator.GetObject(L, err_func + 1, typeof(SevenDaysRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<SevenDaysRef> __Gen_Delegate_Imp876(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<SevenDaysRef> __gen_ret = (System.Collections.Generic.List<SevenDaysRef>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<SevenDaysRef>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public TwoChargeRef __Gen_Delegate_Imp877(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                TwoChargeRef __gen_ret = (TwoChargeRef)translator.GetObject(L, err_func + 1, typeof(TwoChargeRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public DescriptionRef __Gen_Delegate_Imp878(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                DescriptionRef __gen_ret = (DescriptionRef)translator.GetObject(L, err_func + 1, typeof(DescriptionRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public DownloadBonusRef __Gen_Delegate_Imp879(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                DownloadBonusRef __gen_ret = (DownloadBonusRef)translator.GetObject(L, err_func + 1, typeof(DownloadBonusRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<DialogueRef> __Gen_Delegate_Imp880(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<DialogueRef> __gen_ret = (System.Collections.Generic.List<DialogueRef>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<DialogueRef>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public DividendRef __Gen_Delegate_Imp881(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                DividendRef __gen_ret = (DividendRef)translator.GetObject(L, err_func + 1, typeof(DividendRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public GuildDonateRef __Gen_Delegate_Imp882(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                GuildDonateRef __gen_ret = (GuildDonateRef)translator.GetObject(L, err_func + 1, typeof(GuildDonateRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public EquipmentRef __Gen_Delegate_Imp883(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                EquipmentRef __gen_ret = (EquipmentRef)translator.GetObject(L, err_func + 1, typeof(EquipmentRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public EverydayRewardRef __Gen_Delegate_Imp884(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                EverydayRewardRef __gen_ret = (EverydayRewardRef)translator.GetObject(L, err_func + 1, typeof(EverydayRewardRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<FlyExRef> __Gen_Delegate_Imp885(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<FlyExRef> __gen_ret = (System.Collections.Generic.List<FlyExRef>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<FlyExRef>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public FlyPointRef __Gen_Delegate_Imp886(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                FlyPointRef __gen_ret = (FlyPointRef)translator.GetObject(L, err_func + 1, typeof(FlyPointRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public FlyPointRef __Gen_Delegate_Imp887(object p0, int p1, int p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                FlyPointRef __gen_ret = (FlyPointRef)translator.GetObject(L, err_func + 1, typeof(FlyPointRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<FlyPointRef> __Gen_Delegate_Imp888(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<FlyPointRef> __gen_ret = (System.Collections.Generic.List<FlyPointRef>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<FlyPointRef>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public FirstChargeRef __Gen_Delegate_Imp889(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                FirstChargeRef __gen_ret = (FirstChargeRef)translator.GetObject(L, err_func + 1, typeof(FirstChargeRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public CDKeyRef __Gen_Delegate_Imp890(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                CDKeyRef __gen_ret = (CDKeyRef)translator.GetObject(L, err_func + 1, typeof(CDKeyRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public FashionRef __Gen_Delegate_Imp891(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                FashionRef __gen_ret = (FashionRef)translator.GetObject(L, err_func + 1, typeof(FashionRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<FashionRef> __Gen_Delegate_Imp892(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<FashionRef> __gen_ret = (System.Collections.Generic.List<FashionRef>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<FashionRef>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public GuildLivelyRef __Gen_Delegate_Imp893(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                GuildLivelyRef __gen_ret = (GuildLivelyRef)translator.GetObject(L, err_func + 1, typeof(GuildLivelyRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public GuildLivelyRewardRef __Gen_Delegate_Imp894(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                GuildLivelyRewardRef __gen_ret = (GuildLivelyRewardRef)translator.GetObject(L, err_func + 1, typeof(GuildLivelyRewardRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<StrengthenSuitRef> __Gen_Delegate_Imp895(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<StrengthenSuitRef> __gen_ret = (System.Collections.Generic.List<StrengthenSuitRef>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<StrengthenSuitRef>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public CornucopiaRef __Gen_Delegate_Imp896(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                CornucopiaRef __gen_ret = (CornucopiaRef)translator.GetObject(L, err_func + 1, typeof(CornucopiaRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<LevelRewardLevelRef> __Gen_Delegate_Imp897(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<LevelRewardLevelRef> __gen_ret = (System.Collections.Generic.List<LevelRewardLevelRef>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<LevelRewardLevelRef>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public LoveSpreeRef __Gen_Delegate_Imp898(object p0, int p1, int p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                LoveSpreeRef __gen_ret = (LoveSpreeRef)translator.GetObject(L, err_func + 1, typeof(LoveSpreeRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MonsterRef __Gen_Delegate_Imp899(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MonsterRef __gen_ret = (MonsterRef)translator.GetObject(L, err_func + 1, typeof(MonsterRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MonsterDistributionRef __Gen_Delegate_Imp900(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MonsterDistributionRef __gen_ret = (MonsterDistributionRef)translator.GetObject(L, err_func + 1, typeof(MonsterDistributionRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<MonsterDistributionRef> __Gen_Delegate_Imp901(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<MonsterDistributionRef> __gen_ret = (System.Collections.Generic.List<MonsterDistributionRef>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<MonsterDistributionRef>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MountRef __Gen_Delegate_Imp902(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MountRef __gen_ret = (MountRef)translator.GetObject(L, err_func + 1, typeof(MountRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public RidePropertyRef __Gen_Delegate_Imp903(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                RidePropertyRef __gen_ret = (RidePropertyRef)translator.GetObject(L, err_func + 1, typeof(RidePropertyRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SkinPropertyRef __Gen_Delegate_Imp904(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SkinPropertyRef __gen_ret = (SkinPropertyRef)translator.GetObject(L, err_func + 1, typeof(SkinPropertyRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MagicWeaponRef __Gen_Delegate_Imp905(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MagicWeaponRef __gen_ret = (MagicWeaponRef)translator.GetObject(L, err_func + 1, typeof(MagicWeaponRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MountEquQuailtRef __Gen_Delegate_Imp906(object p0, int p1, EquipSlot p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                translator.Push(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MountEquQuailtRef __gen_ret = (MountEquQuailtRef)translator.GetObject(L, err_func + 1, typeof(MountEquQuailtRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MountEquQualityAttributeRef __Gen_Delegate_Imp907(object p0, int p1, EquipSlot p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                translator.Push(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MountEquQualityAttributeRef __gen_ret = (MountEquQualityAttributeRef)translator.GetObject(L, err_func + 1, typeof(MountEquQualityAttributeRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MountStrenLevRef __Gen_Delegate_Imp908(object p0, int p1, EquipSlot p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                translator.Push(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MountStrenLevRef __gen_ret = (MountStrenLevRef)translator.GetObject(L, err_func + 1, typeof(MountStrenLevRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MountStrenConsumeRef __Gen_Delegate_Imp909(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MountStrenConsumeRef __gen_ret = (MountStrenConsumeRef)translator.GetObject(L, err_func + 1, typeof(MountStrenConsumeRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MountSuitRef __Gen_Delegate_Imp910(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MountSuitRef __gen_ret = (MountSuitRef)translator.GetObject(L, err_func + 1, typeof(MountSuitRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public NewFunctionHintsRef __Gen_Delegate_Imp911(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                NewFunctionHintsRef __gen_ret = (NewFunctionHintsRef)translator.GetObject(L, err_func + 1, typeof(NewFunctionHintsRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public NameRef __Gen_Delegate_Imp912(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                NameRef __gen_ret = (NameRef)translator.GetObject(L, err_func + 1, typeof(NameRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SceneNPCRef __Gen_Delegate_Imp913(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SceneNPCRef __gen_ret = (SceneNPCRef)translator.GetObject(L, err_func + 1, typeof(SceneNPCRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public NPCTypeRef __Gen_Delegate_Imp914(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                NPCTypeRef __gen_ret = (NPCTypeRef)translator.GetObject(L, err_func + 1, typeof(NPCTypeRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public NPCActionRef __Gen_Delegate_Imp915(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                NPCActionRef __gen_ret = (NPCActionRef)translator.GetObject(L, err_func + 1, typeof(NPCActionRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public NPCAIRef __Gen_Delegate_Imp916(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                NPCAIRef __gen_ret = (NPCAIRef)translator.GetObject(L, err_func + 1, typeof(NPCAIRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<NPCAIRef> __Gen_Delegate_Imp917(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<NPCAIRef> __gen_ret = (System.Collections.Generic.List<NPCAIRef>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<NPCAIRef>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public NewFunctionRef __Gen_Delegate_Imp918(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                NewFunctionRef __gen_ret = (NewFunctionRef)translator.GetObject(L, err_func + 1, typeof(NewFunctionRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public PlayerConfig __Gen_Delegate_Imp919(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                PlayerConfig __gen_ret = (PlayerConfig)translator.GetObject(L, err_func + 1, typeof(PlayerConfig));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public BlendRef __Gen_Delegate_Imp920(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                BlendRef __gen_ret = (BlendRef)translator.GetObject(L, err_func + 1, typeof(BlendRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<BlendRef> __Gen_Delegate_Imp921(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<BlendRef> __gen_ret = (System.Collections.Generic.List<BlendRef>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<BlendRef>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public PassiveSkillRef __Gen_Delegate_Imp922(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                PassiveSkillRef __gen_ret = (PassiveSkillRef)translator.GetObject(L, err_func + 1, typeof(PassiveSkillRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public PoPoRef __Gen_Delegate_Imp923(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                PoPoRef __gen_ret = (PoPoRef)translator.GetObject(L, err_func + 1, typeof(PoPoRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public PoPoPetRef __Gen_Delegate_Imp924(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                PoPoPetRef __gen_ret = (PoPoPetRef)translator.GetObject(L, err_func + 1, typeof(PoPoPetRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public PoPoPetRef __Gen_Delegate_Imp925(object p0, int p1, EntourageTalkType p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                translator.Push(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                PoPoPetRef __gen_ret = (PoPoPetRef)translator.GetObject(L, err_func + 1, typeof(PoPoPetRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public PushedRef __Gen_Delegate_Imp926(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                PushedRef __gen_ret = (PushedRef)translator.GetObject(L, err_func + 1, typeof(PushedRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public RebornRef __Gen_Delegate_Imp927(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                RebornRef __gen_ret = (RebornRef)translator.GetObject(L, err_func + 1, typeof(RebornRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public RechargeRef __Gen_Delegate_Imp928(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                RechargeRef __gen_ret = (RechargeRef)translator.GetObject(L, err_func + 1, typeof(RechargeRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public RelationCompareRef __Gen_Delegate_Imp929(object p0, int p1, int p2, SceneType p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                translator.Push(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                RelationCompareRef __gen_ret = (RelationCompareRef)translator.GetObject(L, err_func + 1, typeof(RelationCompareRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public RelationType __Gen_Delegate_Imp930(object p0, int p1, int p2, SceneType p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                translator.Push(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                RelationType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UnityEngine.Color __Gen_Delegate_Imp931(object p0, int p1, int p2, SceneType p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                translator.Push(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UnityEngine.Color __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public RefineRef __Gen_Delegate_Imp932(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                RefineRef __gen_ret = (RefineRef)translator.GetObject(L, err_func + 1, typeof(RefineRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public RefineRef __Gen_Delegate_Imp933(object p0, int p1, int p2, int p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                LuaAPI.xlua_pushinteger(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                RefineRef __gen_ret = (RefineRef)translator.GetObject(L, err_func + 1, typeof(RefineRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public RoyalBoxRef __Gen_Delegate_Imp934(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                RoyalBoxRef __gen_ret = (RoyalBoxRef)translator.GetObject(L, err_func + 1, typeof(RoyalBoxRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public NewPetDataRef __Gen_Delegate_Imp935(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                NewPetDataRef __gen_ret = (NewPetDataRef)translator.GetObject(L, err_func + 1, typeof(NewPetDataRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public NewPetRef __Gen_Delegate_Imp936(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                NewPetRef __gen_ret = (NewPetRef)translator.GetObject(L, err_func + 1, typeof(NewPetRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public NewPetSkillComposeRef __Gen_Delegate_Imp937(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                NewPetSkillComposeRef __gen_ret = (NewPetSkillComposeRef)translator.GetObject(L, err_func + 1, typeof(NewPetSkillComposeRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public NewPetSkillNumRef __Gen_Delegate_Imp938(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                NewPetSkillNumRef __gen_ret = (NewPetSkillNumRef)translator.GetObject(L, err_func + 1, typeof(NewPetSkillNumRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<NewPetSkillRef> __Gen_Delegate_Imp939(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<NewPetSkillRef> __gen_ret = (System.Collections.Generic.List<NewPetSkillRef>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<NewPetSkillRef>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public NewPetSkillRef __Gen_Delegate_Imp940(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                NewPetSkillRef __gen_ret = (NewPetSkillRef)translator.GetObject(L, err_func + 1, typeof(NewPetSkillRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public FashionLevelRef __Gen_Delegate_Imp941(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                FashionLevelRef __gen_ret = (FashionLevelRef)translator.GetObject(L, err_func + 1, typeof(FashionLevelRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SystemMailRef __Gen_Delegate_Imp942(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SystemMailRef __gen_ret = (SystemMailRef)translator.GetObject(L, err_func + 1, typeof(SystemMailRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SceneRef __Gen_Delegate_Imp943(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SceneRef __gen_ret = (SceneRef)translator.GetObject(L, err_func + 1, typeof(SceneRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public StepConsumptionRef __Gen_Delegate_Imp944(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                StepConsumptionRef __gen_ret = (StepConsumptionRef)translator.GetObject(L, err_func + 1, typeof(StepConsumptionRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SceneItemRef __Gen_Delegate_Imp945(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SceneItemRef __gen_ret = (SceneItemRef)translator.GetObject(L, err_func + 1, typeof(SceneItemRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SceneItemDisRef __Gen_Delegate_Imp946(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SceneItemDisRef __gen_ret = (SceneItemDisRef)translator.GetObject(L, err_func + 1, typeof(SceneItemDisRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SkillMainConfigRef __Gen_Delegate_Imp947(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SkillMainConfigRef __gen_ret = (SkillMainConfigRef)translator.GetObject(L, err_func + 1, typeof(SkillMainConfigRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<SkillMainConfigRef> __Gen_Delegate_Imp948(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<SkillMainConfigRef> __gen_ret = (System.Collections.Generic.List<SkillMainConfigRef>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<SkillMainConfigRef>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SkillPerformanceRef __Gen_Delegate_Imp949(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SkillPerformanceRef __gen_ret = (SkillPerformanceRef)translator.GetObject(L, err_func + 1, typeof(SkillPerformanceRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SkillRuneRef __Gen_Delegate_Imp950(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SkillRuneRef __gen_ret = (SkillRuneRef)translator.GetObject(L, err_func + 1, typeof(SkillRuneRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SkillMainLvRef __Gen_Delegate_Imp951(object p0, int p1, int p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SkillMainLvRef __gen_ret = (SkillMainLvRef)translator.GetObject(L, err_func + 1, typeof(SkillMainLvRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SuperLifeRef __Gen_Delegate_Imp952(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SuperLifeRef __gen_ret = (SuperLifeRef)translator.GetObject(L, err_func + 1, typeof(SuperLifeRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public FlyUpRef __Gen_Delegate_Imp953(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                FlyUpRef __gen_ret = (FlyUpRef)translator.GetObject(L, err_func + 1, typeof(FlyUpRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public StyliteRef __Gen_Delegate_Imp954(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                StyliteRef __gen_ret = (StyliteRef)translator.GetObject(L, err_func + 1, typeof(StyliteRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public StyliteMoneyRef __Gen_Delegate_Imp955(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                StyliteMoneyRef __gen_ret = (StyliteMoneyRef)translator.GetObject(L, err_func + 1, typeof(StyliteMoneyRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SkillBuffRef __Gen_Delegate_Imp956(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SkillBuffRef __gen_ret = (SkillBuffRef)translator.GetObject(L, err_func + 1, typeof(SkillBuffRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SkillLvDataRef __Gen_Delegate_Imp957(object p0, int p1, int p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SkillLvDataRef __gen_ret = (SkillLvDataRef)translator.GetObject(L, err_func + 1, typeof(SkillLvDataRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public GuildSkillRef __Gen_Delegate_Imp958(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                GuildSkillRef __gen_ret = (GuildSkillRef)translator.GetObject(L, err_func + 1, typeof(GuildSkillRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public GuildShopRef __Gen_Delegate_Imp959(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                GuildShopRef __gen_ret = (GuildShopRef)translator.GetObject(L, err_func + 1, typeof(GuildShopRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ShopRef __Gen_Delegate_Imp960(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ShopRef __gen_ret = (ShopRef)translator.GetObject(L, err_func + 1, typeof(ShopRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MarketRef __Gen_Delegate_Imp961(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MarketRef __gen_ret = (MarketRef)translator.GetObject(L, err_func + 1, typeof(MarketRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public OnlineRewardRef __Gen_Delegate_Imp962(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                OnlineRewardRef __gen_ret = (OnlineRewardRef)translator.GetObject(L, err_func + 1, typeof(OnlineRewardRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<OnlineRewardRef> __Gen_Delegate_Imp963(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<OnlineRewardRef> __gen_ret = (System.Collections.Generic.List<OnlineRewardRef>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<OnlineRewardRef>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<LittleHelperRef>> __Gen_Delegate_Imp964(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<LittleHelperRef>> __gen_ret = (System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<LittleHelperRef>>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<LittleHelperRef>>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.Dictionary<int, LittleHelperTypeRef> __Gen_Delegate_Imp965(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.Dictionary<int, LittleHelperTypeRef> __gen_ret = (System.Collections.Generic.Dictionary<int, LittleHelperTypeRef>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.Dictionary<int, LittleHelperTypeRef>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SustainRef __Gen_Delegate_Imp966(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SustainRef __gen_ret = (SustainRef)translator.GetObject(L, err_func + 1, typeof(SustainRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MallRef __Gen_Delegate_Imp967(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MallRef __gen_ret = (MallRef)translator.GetObject(L, err_func + 1, typeof(MallRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ServerMSGRef __Gen_Delegate_Imp968(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ServerMSGRef __gen_ret = (ServerMSGRef)translator.GetObject(L, err_func + 1, typeof(ServerMSGRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public OpenNewFunctionRef __Gen_Delegate_Imp969(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                OpenNewFunctionRef __gen_ret = (OpenNewFunctionRef)translator.GetObject(L, err_func + 1, typeof(OpenNewFunctionRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public OpenNewFunctionRef __Gen_Delegate_Imp970(object p0, int p1, int p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                OpenNewFunctionRef __gen_ret = (OpenNewFunctionRef)translator.GetObject(L, err_func + 1, typeof(OpenNewFunctionRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public OpenNewFunctionGuideRef __Gen_Delegate_Imp971(object p0, int p1, int p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                OpenNewFunctionGuideRef __gen_ret = (OpenNewFunctionGuideRef)translator.GetObject(L, err_func + 1, typeof(OpenNewFunctionGuideRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public OpenNewFunctionGuideRef __Gen_Delegate_Imp972(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                OpenNewFunctionGuideRef __gen_ret = (OpenNewFunctionGuideRef)translator.GetObject(L, err_func + 1, typeof(OpenNewFunctionGuideRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ChatTemplatesRef __Gen_Delegate_Imp973(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ChatTemplatesRef __gen_ret = (ChatTemplatesRef)translator.GetObject(L, err_func + 1, typeof(ChatTemplatesRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SpecialRef __Gen_Delegate_Imp974(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SpecialRef __gen_ret = (SpecialRef)translator.GetObject(L, err_func + 1, typeof(SpecialRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SwornRef __Gen_Delegate_Imp975(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SwornRef __gen_ret = (SwornRef)translator.GetObject(L, err_func + 1, typeof(SwornRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public StarTypeRef __Gen_Delegate_Imp976(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                StarTypeRef __gen_ret = (StarTypeRef)translator.GetObject(L, err_func + 1, typeof(StarTypeRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public TaskConfigRef __Gen_Delegate_Imp977(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                TaskConfigRef __gen_ret = (TaskConfigRef)translator.GetObject(L, err_func + 1, typeof(TaskConfigRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public TaskStepRef __Gen_Delegate_Imp978(object p0, int p1, int p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                TaskStepRef __gen_ret = (TaskStepRef)translator.GetObject(L, err_func + 1, typeof(TaskStepRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<TaskStepRef> __Gen_Delegate_Imp979(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<TaskStepRef> __gen_ret = (System.Collections.Generic.List<TaskStepRef>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<TaskStepRef>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public TaskRingRewardRef __Gen_Delegate_Imp980(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                TaskRingRewardRef __gen_ret = (TaskRingRewardRef)translator.GetObject(L, err_func + 1, typeof(TaskRingRewardRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public TrapRef __Gen_Delegate_Imp981(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                TrapRef __gen_ret = (TrapRef)translator.GetObject(L, err_func + 1, typeof(TrapRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public TitleRef __Gen_Delegate_Imp982(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                TitleRef __gen_ret = (TitleRef)translator.GetObject(L, err_func + 1, typeof(TitleRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public TokenLevRef __Gen_Delegate_Imp983(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                TokenLevRef __gen_ret = (TokenLevRef)translator.GetObject(L, err_func + 1, typeof(TokenLevRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public TreasureHouseRef __Gen_Delegate_Imp984(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                TreasureHouseRef __gen_ret = (TreasureHouseRef)translator.GetObject(L, err_func + 1, typeof(TreasureHouseRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public RewardGroupRef __Gen_Delegate_Imp985(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                RewardGroupRef __gen_ret = (RewardGroupRef)translator.GetObject(L, err_func + 1, typeof(RewardGroupRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public RewardGroupMemberRef __Gen_Delegate_Imp986(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                RewardGroupMemberRef __gen_ret = (RewardGroupMemberRef)translator.GetObject(L, err_func + 1, typeof(RewardGroupMemberRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UILevelConfigRef __Gen_Delegate_Imp987(object p0, GUIType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UILevelConfigRef __gen_ret = (UILevelConfigRef)translator.GetObject(L, err_func + 1, typeof(UILevelConfigRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public GUIType __Gen_Delegate_Imp988(object p0, SubGUIType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                GUIType __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UISkipRef __Gen_Delegate_Imp989(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UISkipRef __gen_ret = (UISkipRef)translator.GetObject(L, err_func + 1, typeof(UISkipRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public VIPRef __Gen_Delegate_Imp990(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                VIPRef __gen_ret = (VIPRef)translator.GetObject(L, err_func + 1, typeof(VIPRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UIwenbenRef __Gen_Delegate_Imp991(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UIwenbenRef __gen_ret = (UIwenbenRef)translator.GetObject(L, err_func + 1, typeof(UIwenbenRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public string __Gen_Delegate_Imp992(object p0, int p1, object p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                translator.PushAny(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                string __gen_ret = LuaAPI.lua_tostring(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public WingRefEty __Gen_Delegate_Imp993(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                WingRefEty __gen_ret = (WingRefEty)translator.GetObject(L, err_func + 1, typeof(WingRefEty));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public WingRef __Gen_Delegate_Imp994(object p0, int p1, int p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                WingRef __gen_ret = (WingRef)translator.GetObject(L, err_func + 1, typeof(WingRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public WeddingRef __Gen_Delegate_Imp995(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                WeddingRef __gen_ret = (WeddingRef)translator.GetObject(L, err_func + 1, typeof(WeddingRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public WeekCardRef __Gen_Delegate_Imp996(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                WeekCardRef __gen_ret = (WeekCardRef)translator.GetObject(L, err_func + 1, typeof(WeekCardRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public WeddingCoppyRef __Gen_Delegate_Imp997(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                WeddingCoppyRef __gen_ret = (WeddingCoppyRef)translator.GetObject(L, err_func + 1, typeof(WeddingCoppyRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UILabelTranslationProp __Gen_Delegate_Imp998(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UILabelTranslationProp __gen_ret = (UILabelTranslationProp)translator.GetObject(L, err_func + 1, typeof(UILabelTranslationProp));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public bool __Gen_Delegate_Imp999(object p0, char p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                bool __gen_ret = LuaAPI.lua_toboolean(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public StrengthenAttrRef __Gen_Delegate_Imp1000(object p0, int p1, EquipSlot p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                translator.Push(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                StrengthenAttrRef __gen_ret = (StrengthenAttrRef)translator.GetObject(L, err_func + 1, typeof(StrengthenAttrRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public StrengthenRef __Gen_Delegate_Imp1001(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                StrengthenRef __gen_ret = (StrengthenRef)translator.GetObject(L, err_func + 1, typeof(StrengthenRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<InsetRef> __Gen_Delegate_Imp1002(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<InsetRef> __gen_ret = (System.Collections.Generic.List<InsetRef>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<InsetRef>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public OrangeRefineRef __Gen_Delegate_Imp1003(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                OrangeRefineRef __gen_ret = (OrangeRefineRef)translator.GetObject(L, err_func + 1, typeof(OrangeRefineRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public PromoteRef __Gen_Delegate_Imp1004(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                PromoteRef __gen_ret = (PromoteRef)translator.GetObject(L, err_func + 1, typeof(PromoteRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ItemValue __Gen_Delegate_Imp1005(object p0, int p1, int p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                
                int __gen_error = LuaAPI.lua_pcall(L, 3, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ItemValue __gen_ret = (ItemValue)translator.GetObject(L, err_func + 1, typeof(ItemValue));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public InheritLuckyRef __Gen_Delegate_Imp1006(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                InheritLuckyRef __gen_ret = (InheritLuckyRef)translator.GetObject(L, err_func + 1, typeof(InheritLuckyRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public EquipmentWashConsumeRef __Gen_Delegate_Imp1007(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                EquipmentWashConsumeRef __gen_ret = (EquipmentWashConsumeRef)translator.GetObject(L, err_func + 1, typeof(EquipmentWashConsumeRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public EquipmentWashValueRef __Gen_Delegate_Imp1008(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                EquipmentWashValueRef __gen_ret = (EquipmentWashValueRef)translator.GetObject(L, err_func + 1, typeof(EquipmentWashValueRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public TaskSurroundRewardRef __Gen_Delegate_Imp1009(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                TaskSurroundRewardRef __gen_ret = (TaskSurroundRewardRef)translator.GetObject(L, err_func + 1, typeof(TaskSurroundRewardRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public ResolveLevelRef __Gen_Delegate_Imp1010(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                ResolveLevelRef __gen_ret = (ResolveLevelRef)translator.GetObject(L, err_func + 1, typeof(ResolveLevelRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<ItemValue> __Gen_Delegate_Imp1011(object p0, int p1, int p2, int p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                LuaAPI.xlua_pushinteger(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<ItemValue> __gen_ret = (System.Collections.Generic.List<ItemValue>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<ItemValue>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public EquipmentSetRef __Gen_Delegate_Imp1012(object p0, int p1, int p2, int p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.xlua_pushinteger(L, p2);
                LuaAPI.xlua_pushinteger(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                EquipmentSetRef __gen_ret = (EquipmentSetRef)translator.GetObject(L, err_func + 1, typeof(EquipmentSetRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public GuildRef __Gen_Delegate_Imp1013(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                GuildRef __gen_ret = (GuildRef)translator.GetObject(L, err_func + 1, typeof(GuildRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<CityShopRef> __Gen_Delegate_Imp1014(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<CityShopRef> __gen_ret = (System.Collections.Generic.List<CityShopRef>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<CityShopRef>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public CityShopRef __Gen_Delegate_Imp1015(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                CityShopRef __gen_ret = (CityShopRef)translator.GetObject(L, err_func + 1, typeof(CityShopRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<BossRef> __Gen_Delegate_Imp1016(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<BossRef> __gen_ret = (System.Collections.Generic.List<BossRef>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<BossRef>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public BossRef __Gen_Delegate_Imp1017(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                BossRef __gen_ret = (BossRef)translator.GetObject(L, err_func + 1, typeof(BossRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public OffLineRewardRef __Gen_Delegate_Imp1018(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                OffLineRewardRef __gen_ret = (OffLineRewardRef)translator.GetObject(L, err_func + 1, typeof(OffLineRewardRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SevenDaysTaskRef __Gen_Delegate_Imp1019(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SevenDaysTaskRef __gen_ret = (SevenDaysTaskRef)translator.GetObject(L, err_func + 1, typeof(SevenDaysTaskRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.Collections.Generic.List<SevenDaysTaskRef> __Gen_Delegate_Imp1020(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.Collections.Generic.List<SevenDaysTaskRef> __gen_ret = (System.Collections.Generic.List<SevenDaysTaskRef>)translator.GetObject(L, err_func + 1, typeof(System.Collections.Generic.List<SevenDaysTaskRef>));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SevenDaysTaskRewardRef __Gen_Delegate_Imp1021(object p0, int p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SevenDaysTaskRewardRef __gen_ret = (SevenDaysTaskRewardRef)translator.GetObject(L, err_func + 1, typeof(SevenDaysTaskRewardRef));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public MsgLoackingMng __Gen_Delegate_Imp1022()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                MsgLoackingMng __gen_ret = (MsgLoackingMng)translator.GetObject(L, err_func + 1, typeof(MsgLoackingMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp1023(object p0, int p1, bool p2, bool p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.xlua_pushinteger(L, p1);
                LuaAPI.lua_pushboolean(L, p2);
                LuaAPI.lua_pushboolean(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public LoginStage __Gen_Delegate_Imp1024(object p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                LoginStage __gen_ret = (LoginStage)translator.GetObject(L, err_func + 1, typeof(LoginStage));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp1025(object p0, PlayerInputListener.LockType p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.Push(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public string __Gen_Delegate_Imp1026(int p0, ulong p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                
                
                LuaAPI.lua_getref(L, luaReference);
                
                LuaAPI.xlua_pushinteger(L, p0);
                LuaAPI.lua_pushuint64(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                string __gen_ret = LuaAPI.lua_tostring(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public string __Gen_Delegate_Imp1027(object p0, out bool p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 2, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                p1 = LuaAPI.lua_toboolean(L, err_func + 2);
                
                string __gen_ret = LuaAPI.lua_tostring(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public string __Gen_Delegate_Imp1028(object p0, out bool p1, out EquipmentInfo p2)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 3, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                p1 = LuaAPI.lua_toboolean(L, err_func + 2);
                p2 = (EquipmentInfo)translator.GetObject(L, err_func + 3, typeof(EquipmentInfo));
                
                string __gen_ret = LuaAPI.lua_tostring(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public System.DateTime __Gen_Delegate_Imp1029(System.DateTime p0)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.Push(L, p0);
                
                int __gen_error = LuaAPI.lua_pcall(L, 1, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                System.DateTime __gen_ret;translator.Get(L, err_func + 1, out __gen_ret);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UILabel __Gen_Delegate_Imp1030(object p0, object p1, object p2, object p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.PushAny(L, p2);
                translator.PushAny(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UILabel __gen_ret = (UILabel)translator.GetObject(L, err_func + 1, typeof(UILabel));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public float __Gen_Delegate_Imp1031(object p0, float p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                LuaAPI.lua_pushnumber(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                float __gen_ret = (float)LuaAPI.lua_tonumber(L, err_func + 1);
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UILabel __Gen_Delegate_Imp1032(object p0, object p1, object p2, UnityEngine.Color p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.PushAny(L, p2);
                translator.PushUnityEngineColor(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UILabel __gen_ret = (UILabel)translator.GetObject(L, err_func + 1, typeof(UILabel));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public UnityEngine.GameObject __Gen_Delegate_Imp1033(object p0, object p1, object p2, float p3, object p4, int p5)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.PushAny(L, p2);
                LuaAPI.lua_pushnumber(L, p3);
                translator.PushAny(L, p4);
                LuaAPI.xlua_pushinteger(L, p5);
                
                int __gen_error = LuaAPI.lua_pcall(L, 6, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                UnityEngine.GameObject __gen_ret = (UnityEngine.GameObject)translator.GetObject(L, err_func + 1, typeof(UnityEngine.GameObject));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public void __Gen_Delegate_Imp1034(object p0, object p1, OpenServerType p2, bool p3)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                translator.Push(L, p2);
                LuaAPI.lua_pushboolean(L, p3);
                
                int __gen_error = LuaAPI.lua_pcall(L, 4, 0, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                
                LuaAPI.lua_settop(L, err_func - 1);
                
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public OpenServerActiveTogType __Gen_Delegate_Imp1035(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                OpenServerActiveTogType __gen_ret = (OpenServerActiveTogType)translator.GetObject(L, err_func + 1, typeof(OpenServerActiveTogType));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public TwoChargeMng __Gen_Delegate_Imp1036()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                TwoChargeMng __gen_ret = (TwoChargeMng)translator.GetObject(L, err_func + 1, typeof(TwoChargeMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SevenChallengeMng __Gen_Delegate_Imp1037()
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                
                int __gen_error = LuaAPI.lua_pcall(L, 0, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SevenChallengeMng __gen_ret = (SevenChallengeMng)translator.GetObject(L, err_func + 1, typeof(SevenChallengeMng));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public SevenChallengeSingleUI __Gen_Delegate_Imp1038(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                SevenChallengeSingleUI __gen_ret = (SevenChallengeSingleUI)translator.GetObject(L, err_func + 1, typeof(SevenChallengeSingleUI));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
		public GuildLivelyRankItemUI __Gen_Delegate_Imp1039(object p0, object p1)
		{
#if THREAD_SAFT || HOTFIX_ENABLE
            lock (luaEnv.luaEnvLock)
            {
#endif
                RealStatePtr L = luaEnv.rawL;
                int err_func =LuaAPI.load_error_func(L, errorFuncRef);
                ObjectTranslator translator = luaEnv.translator;
                
                LuaAPI.lua_getref(L, luaReference);
                
                translator.PushAny(L, p0);
                translator.PushAny(L, p1);
                
                int __gen_error = LuaAPI.lua_pcall(L, 2, 1, err_func);
                if (__gen_error != 0)
                    luaEnv.ThrowExceptionFromError(err_func - 1);
                
                
                GuildLivelyRankItemUI __gen_ret = (GuildLivelyRankItemUI)translator.GetObject(L, err_func + 1, typeof(GuildLivelyRankItemUI));
                LuaAPI.lua_settop(L, err_func - 1);
                return  __gen_ret;
#if THREAD_SAFT || HOTFIX_ENABLE
            }
#endif
		}
        
        
		static DelegateBridge()
		{
		    Gen_Flag = true;
		}
		
		public override Delegate GetDelegateByType(Type type)
		{
		
		    if (type == typeof(System.Action))
			{
			    return new System.Action(__Gen_Delegate_Imp0);
			}
		
		    if (type == typeof(EventDelegate.Callback))
			{
			    return new EventDelegate.Callback(__Gen_Delegate_Imp0);
			}
		
		    if (type == typeof(UIScrollView.OnDragNotification))
			{
			    return new UIScrollView.OnDragNotification(__Gen_Delegate_Imp0);
			}
		
		    if (type == typeof(UnityEngine.Events.UnityAction))
			{
			    return new UnityEngine.Events.UnityAction(__Gen_Delegate_Imp0);
			}
		
		    if (type == typeof(System.Func<double, double, double>))
			{
			    return new System.Func<double, double, double>(__Gen_Delegate_Imp1);
			}
		
		    if (type == typeof(System.Action<string>))
			{
			    return new System.Action<string>(__Gen_Delegate_Imp2);
			}
		
		    if (type == typeof(System.Action<double>))
			{
			    return new System.Action<double>(__Gen_Delegate_Imp3);
			}
		
		    if (type == typeof(System.Action<ActorBaseTag, ulong, bool>))
			{
			    return new System.Action<ActorBaseTag, ulong, bool>(__Gen_Delegate_Imp4);
			}
		
		    if (type == typeof(System.Action<ActorPropertyTag, long, bool>))
			{
			    return new System.Action<ActorPropertyTag, long, bool>(__Gen_Delegate_Imp5);
			}
		
		    if (type == typeof(System.Action<int, int>))
			{
			    return new System.Action<int, int>(__Gen_Delegate_Imp6);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate13))
			{
			    return new __Gen_Hotfix_Delegate13(__Gen_Delegate_Imp6);
			}
		
		    if (type == typeof(System.Action<bool>))
			{
			    return new System.Action<bool>(__Gen_Delegate_Imp7);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate482))
			{
			    return new __Gen_Hotfix_Delegate482(__Gen_Delegate_Imp7);
			}
		
		    if (type == typeof(System.Action<st.net.NetBase.Pt>))
			{
			    return new System.Action<st.net.NetBase.Pt>(__Gen_Delegate_Imp8);
			}
		
		    if (type == typeof(UIEventListener.VoidDelegate))
			{
			    return new UIEventListener.VoidDelegate(__Gen_Delegate_Imp9);
			}
		
		    if (type == typeof(UITimer.VoidDelegate))
			{
			    return new UITimer.VoidDelegate(__Gen_Delegate_Imp9);
			}
		
		    if (type == typeof(System.Action<UnityEngine.GameObject>))
			{
			    return new System.Action<UnityEngine.GameObject>(__Gen_Delegate_Imp9);
			}
		
		    if (type == typeof(UIEventListener.BoolDelegate))
			{
			    return new UIEventListener.BoolDelegate(__Gen_Delegate_Imp10);
			}
		
		    if (type == typeof(UIEventListener.FloatDelegate))
			{
			    return new UIEventListener.FloatDelegate(__Gen_Delegate_Imp11);
			}
		
		    if (type == typeof(UIEventListener.KeyCodeDelegate))
			{
			    return new UIEventListener.KeyCodeDelegate(__Gen_Delegate_Imp12);
			}
		
		    if (type == typeof(UIEventListener.ObjectDelegate))
			{
			    return new UIEventListener.ObjectDelegate(__Gen_Delegate_Imp13);
			}
		
		    if (type == typeof(UIEventListener.VectorDelegate))
			{
			    return new UIEventListener.VectorDelegate(__Gen_Delegate_Imp14);
			}
		
		    if (type == typeof(System.Action<int>))
			{
			    return new System.Action<int>(__Gen_Delegate_Imp15);
			}
		
		    if (type == typeof(System.Action<QuestionsReplyInfo>))
			{
			    return new System.Action<QuestionsReplyInfo>(__Gen_Delegate_Imp16);
			}
		
		    if (type == typeof(System.Action<FunctionDataInfo, bool>))
			{
			    return new System.Action<FunctionDataInfo, bool>(__Gen_Delegate_Imp17);
			}
		
		    if (type == typeof(System.Action<FunctionDataInfo>))
			{
			    return new System.Action<FunctionDataInfo>(__Gen_Delegate_Imp18);
			}
		
		    if (type == typeof(System.Action<TaskType>))
			{
			    return new System.Action<TaskType>(__Gen_Delegate_Imp19);
			}
		
		    if (type == typeof(System.Action<DescriptionRef>))
			{
			    return new System.Action<DescriptionRef>(__Gen_Delegate_Imp20);
			}
		
		    if (type == typeof(System.Action<System.Collections.Generic.List<EquipmentInfo>>))
			{
			    return new System.Action<System.Collections.Generic.List<EquipmentInfo>>(__Gen_Delegate_Imp21);
			}
		
		    if (type == typeof(System.Action<int, EquipmentInfo>))
			{
			    return new System.Action<int, EquipmentInfo>(__Gen_Delegate_Imp22);
			}
		
		    if (type == typeof(System.Action<EquipmentInfo>))
			{
			    return new System.Action<EquipmentInfo>(__Gen_Delegate_Imp23);
			}
		
		    if (type == typeof(System.Action<AchievementData>))
			{
			    return new System.Action<AchievementData>(__Gen_Delegate_Imp24);
			}
		
		    if (type == typeof(System.Action<WingInfo>))
			{
			    return new System.Action<WingInfo>(__Gen_Delegate_Imp25);
			}
		
		    if (type == typeof(System.Action<OpenNewFunctionGuideRef>))
			{
			    return new System.Action<OpenNewFunctionGuideRef>(__Gen_Delegate_Imp26);
			}
		
		    if (type == typeof(System.Action<pt_ranklist_d601>))
			{
			    return new System.Action<pt_ranklist_d601>(__Gen_Delegate_Imp27);
			}
		
		    if (type == typeof(System.Action<System.Collections.Generic.List<st.net.NetBase.reward_list>>))
			{
			    return new System.Action<System.Collections.Generic.List<st.net.NetBase.reward_list>>(__Gen_Delegate_Imp28);
			}
		
		    if (type == typeof(System.Action<LingXiuType>))
			{
			    return new System.Action<LingXiuType>(__Gen_Delegate_Imp29);
			}
		
		    if (type == typeof(System.Action<MercenaryInfo>))
			{
			    return new System.Action<MercenaryInfo>(__Gen_Delegate_Imp30);
			}
		
		    if (type == typeof(System.Action<UnityEngine.Color>))
			{
			    return new System.Action<UnityEngine.Color>(__Gen_Delegate_Imp31);
			}
		
		    if (type == typeof(System.Action<MountInfo>))
			{
			    return new System.Action<MountInfo>(__Gen_Delegate_Imp32);
			}
		
		    if (type == typeof(System.Action<ChatInfo, UnityEngine.Vector3>))
			{
			    return new System.Action<ChatInfo, UnityEngine.Vector3>(__Gen_Delegate_Imp33);
			}
		
		    if (type == typeof(System.Action<ChatInfo>))
			{
			    return new System.Action<ChatInfo>(__Gen_Delegate_Imp34);
			}
		
		    if (type == typeof(System.Action<MerryGoRoundDataInfo>))
			{
			    return new System.Action<MerryGoRoundDataInfo>(__Gen_Delegate_Imp35);
			}
		
		    if (type == typeof(System.Action<ShopItemUI>))
			{
			    return new System.Action<ShopItemUI>(__Gen_Delegate_Imp36);
			}
		
		    if (type == typeof(System.Action<MallItemUI>))
			{
			    return new System.Action<MallItemUI>(__Gen_Delegate_Imp37);
			}
		
		    if (type == typeof(System.Action<FloatTipObject>))
			{
			    return new System.Action<FloatTipObject>(__Gen_Delegate_Imp38);
			}
		
		    if (type == typeof(System.Action<MarketTypeUI>))
			{
			    return new System.Action<MarketTypeUI>(__Gen_Delegate_Imp39);
			}
		
		    if (type == typeof(System.Action<MarketItemUI>))
			{
			    return new System.Action<MarketItemUI>(__Gen_Delegate_Imp40);
			}
		
		    if (type == typeof(System.Action<ServerPageData>))
			{
			    return new System.Action<ServerPageData>(__Gen_Delegate_Imp41);
			}
		
		    if (type == typeof(System.Action<ServerChoiceData>))
			{
			    return new System.Action<ServerChoiceData>(__Gen_Delegate_Imp42);
			}
		
		    if (type == typeof(System.Action<GuildSkillUI>))
			{
			    return new System.Action<GuildSkillUI>(__Gen_Delegate_Imp43);
			}
		
		    if (type == typeof(System.Action<GuildShopItemUI>))
			{
			    return new System.Action<GuildShopItemUI>(__Gen_Delegate_Imp44);
			}
		
		    if (type == typeof(System.Action<GuildMemberData, bool>))
			{
			    return new System.Action<GuildMemberData, bool>(__Gen_Delegate_Imp45);
			}
		
		    if (type == typeof(System.Action<LivelyRewardRef>))
			{
			    return new System.Action<LivelyRewardRef>(__Gen_Delegate_Imp46);
			}
		
		    if (type == typeof(System.Action<BossChallengeData>))
			{
			    return new System.Action<BossChallengeData>(__Gen_Delegate_Imp47);
			}
		
		    if (type == typeof(System.Action<LockUpdateType>))
			{
			    return new System.Action<LockUpdateType>(__Gen_Delegate_Imp48);
			}
		
		    if (type == typeof(System.Action<int, bool>))
			{
			    return new System.Action<int, bool>(__Gen_Delegate_Imp49);
			}
		
		    if (type == typeof(System.Action<TaskInfo>))
			{
			    return new System.Action<TaskInfo>(__Gen_Delegate_Imp50);
			}
		
		    if (type == typeof(System.Action<int, UnityEngine.Vector3>))
			{
			    return new System.Action<int, UnityEngine.Vector3>(__Gen_Delegate_Imp51);
			}
		
		    if (type == typeof(System.Action<TaskDataType, TaskType>))
			{
			    return new System.Action<TaskDataType, TaskType>(__Gen_Delegate_Imp52);
			}
		
		    if (type == typeof(System.Action<SystemSettingMng.RendererQuality>))
			{
			    return new System.Action<SystemSettingMng.RendererQuality>(__Gen_Delegate_Imp53);
			}
		
		    if (type == typeof(System.Action<SystemSettingType, bool, float>))
			{
			    return new System.Action<SystemSettingType, bool, float>(__Gen_Delegate_Imp54);
			}
		
		    if (type == typeof(System.Action<ObjectType, int>))
			{
			    return new System.Action<ObjectType, int>(__Gen_Delegate_Imp55);
			}
		
		    if (type == typeof(System.Action<DropItemInfo>))
			{
			    return new System.Action<DropItemInfo>(__Gen_Delegate_Imp56);
			}
		
		    if (type == typeof(System.Action<System.Collections.Generic.List<MessageST>>))
			{
			    return new System.Action<System.Collections.Generic.List<MessageST>>(__Gen_Delegate_Imp57);
			}
		
		    if (type == typeof(System.Action<ErrorMsgStr>))
			{
			    return new System.Action<ErrorMsgStr>(__Gen_Delegate_Imp58);
			}
		
		    if (type == typeof(System.Action<string, bool>))
			{
			    return new System.Action<string, bool>(__Gen_Delegate_Imp59);
			}
		
		    if (type == typeof(System.Action<MessageST>))
			{
			    return new System.Action<MessageST>(__Gen_Delegate_Imp60);
			}
		
		    if (type == typeof(System.Action<byte>))
			{
			    return new System.Action<byte>(__Gen_Delegate_Imp61);
			}
		
		    if (type == typeof(System.Action<LoginMng.LoginPassType>))
			{
			    return new System.Action<LoginMng.LoginPassType>(__Gen_Delegate_Imp62);
			}
		
		    if (type == typeof(System.Action<EquipSlot>))
			{
			    return new System.Action<EquipSlot>(__Gen_Delegate_Imp63);
			}
		
		    if (type == typeof(System.Action<int, int, int>))
			{
			    return new System.Action<int, int, int>(__Gen_Delegate_Imp64);
			}
		
		    if (type == typeof(System.Action<float>))
			{
			    return new System.Action<float>(__Gen_Delegate_Imp65);
			}
		
		    if (type == typeof(System.Action<OtherPlayer>))
			{
			    return new System.Action<OtherPlayer>(__Gen_Delegate_Imp66);
			}
		
		    if (type == typeof(System.Action<SmartActor>))
			{
			    return new System.Action<SmartActor>(__Gen_Delegate_Imp67);
			}
		
		    if (type == typeof(System.Action<AbilityMoveData>))
			{
			    return new System.Action<AbilityMoveData>(__Gen_Delegate_Imp68);
			}
		
		    if (type == typeof(System.Action<bool, bool>))
			{
			    return new System.Action<bool, bool>(__Gen_Delegate_Imp69);
			}
		
		    if (type == typeof(System.Action<SustainRef>))
			{
			    return new System.Action<SustainRef>(__Gen_Delegate_Imp70);
			}
		
		    if (type == typeof(System.Action<PlayerPlayMode>))
			{
			    return new System.Action<PlayerPlayMode>(__Gen_Delegate_Imp71);
			}
		
		    if (type == typeof(System.Action<ActorBaseTag, int>))
			{
			    return new System.Action<ActorBaseTag, int>(__Gen_Delegate_Imp72);
			}
		
		    if (type == typeof(System.Action<ActorPropertyTag, int>))
			{
			    return new System.Action<ActorPropertyTag, int>(__Gen_Delegate_Imp73);
			}
		
		    if (type == typeof(System.Action<ActorBaseTag, int, bool>))
			{
			    return new System.Action<ActorBaseTag, int, bool>(__Gen_Delegate_Imp74);
			}
		
		    if (type == typeof(System.Action<uint>))
			{
			    return new System.Action<uint>(__Gen_Delegate_Imp75);
			}
		
		    if (type == typeof(MessageST.MessDel))
			{
			    return new MessageST.MessDel(__Gen_Delegate_Imp76);
			}
		
		    if (type == typeof(InvokeLua.CalcNew))
			{
			    return new InvokeLua.CalcNew(__Gen_Delegate_Imp77);
			}
		
		    if (type == typeof(CSCallLua.FDelegate))
			{
			    return new CSCallLua.FDelegate(__Gen_Delegate_Imp78);
			}
		
		    if (type == typeof(CSCallLua.GetE))
			{
			    return new CSCallLua.GetE(__Gen_Delegate_Imp79);
			}
		
		    if (type == typeof(XLuaTest.IntParam))
			{
			    return new XLuaTest.IntParam(__Gen_Delegate_Imp80);
			}
		
		    if (type == typeof(XLuaTest.Vector3Param))
			{
			    return new XLuaTest.Vector3Param(__Gen_Delegate_Imp81);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate154))
			{
			    return new __Gen_Hotfix_Delegate154(__Gen_Delegate_Imp81);
			}
		
		    if (type == typeof(XLuaTest.CustomValueTypeParam))
			{
			    return new XLuaTest.CustomValueTypeParam(__Gen_Delegate_Imp82);
			}
		
		    if (type == typeof(XLuaTest.EnumParam))
			{
			    return new XLuaTest.EnumParam(__Gen_Delegate_Imp83);
			}
		
		    if (type == typeof(XLuaTest.DecimalParam))
			{
			    return new XLuaTest.DecimalParam(__Gen_Delegate_Imp84);
			}
		
		    if (type == typeof(XLuaTest.ArrayAccess))
			{
			    return new XLuaTest.ArrayAccess(__Gen_Delegate_Imp85);
			}
		
		    if (type == typeof(TestOutDelegate))
			{
			    return new TestOutDelegate(__Gen_Delegate_Imp86);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate0))
			{
			    return new __Gen_Hotfix_Delegate0(__Gen_Delegate_Imp87);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate1))
			{
			    return new __Gen_Hotfix_Delegate1(__Gen_Delegate_Imp88);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate2))
			{
			    return new __Gen_Hotfix_Delegate2(__Gen_Delegate_Imp89);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate3))
			{
			    return new __Gen_Hotfix_Delegate3(__Gen_Delegate_Imp90);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate4))
			{
			    return new __Gen_Hotfix_Delegate4(__Gen_Delegate_Imp91);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate5))
			{
			    return new __Gen_Hotfix_Delegate5(__Gen_Delegate_Imp92);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate6))
			{
			    return new __Gen_Hotfix_Delegate6(__Gen_Delegate_Imp93);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate7))
			{
			    return new __Gen_Hotfix_Delegate7(__Gen_Delegate_Imp94);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate8))
			{
			    return new __Gen_Hotfix_Delegate8(__Gen_Delegate_Imp95);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate9))
			{
			    return new __Gen_Hotfix_Delegate9(__Gen_Delegate_Imp96);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate10))
			{
			    return new __Gen_Hotfix_Delegate10(__Gen_Delegate_Imp97);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate11))
			{
			    return new __Gen_Hotfix_Delegate11(__Gen_Delegate_Imp98);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate12))
			{
			    return new __Gen_Hotfix_Delegate12(__Gen_Delegate_Imp99);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate14))
			{
			    return new __Gen_Hotfix_Delegate14(__Gen_Delegate_Imp100);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate15))
			{
			    return new __Gen_Hotfix_Delegate15(__Gen_Delegate_Imp101);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate16))
			{
			    return new __Gen_Hotfix_Delegate16(__Gen_Delegate_Imp102);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate17))
			{
			    return new __Gen_Hotfix_Delegate17(__Gen_Delegate_Imp103);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate18))
			{
			    return new __Gen_Hotfix_Delegate18(__Gen_Delegate_Imp104);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate19))
			{
			    return new __Gen_Hotfix_Delegate19(__Gen_Delegate_Imp105);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate20))
			{
			    return new __Gen_Hotfix_Delegate20(__Gen_Delegate_Imp106);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate21))
			{
			    return new __Gen_Hotfix_Delegate21(__Gen_Delegate_Imp107);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate22))
			{
			    return new __Gen_Hotfix_Delegate22(__Gen_Delegate_Imp108);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate23))
			{
			    return new __Gen_Hotfix_Delegate23(__Gen_Delegate_Imp109);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate24))
			{
			    return new __Gen_Hotfix_Delegate24(__Gen_Delegate_Imp110);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate25))
			{
			    return new __Gen_Hotfix_Delegate25(__Gen_Delegate_Imp111);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate26))
			{
			    return new __Gen_Hotfix_Delegate26(__Gen_Delegate_Imp112);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate27))
			{
			    return new __Gen_Hotfix_Delegate27(__Gen_Delegate_Imp113);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate28))
			{
			    return new __Gen_Hotfix_Delegate28(__Gen_Delegate_Imp114);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate29))
			{
			    return new __Gen_Hotfix_Delegate29(__Gen_Delegate_Imp115);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate30))
			{
			    return new __Gen_Hotfix_Delegate30(__Gen_Delegate_Imp116);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate31))
			{
			    return new __Gen_Hotfix_Delegate31(__Gen_Delegate_Imp117);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate32))
			{
			    return new __Gen_Hotfix_Delegate32(__Gen_Delegate_Imp118);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate33))
			{
			    return new __Gen_Hotfix_Delegate33(__Gen_Delegate_Imp119);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate34))
			{
			    return new __Gen_Hotfix_Delegate34(__Gen_Delegate_Imp120);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate35))
			{
			    return new __Gen_Hotfix_Delegate35(__Gen_Delegate_Imp121);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate36))
			{
			    return new __Gen_Hotfix_Delegate36(__Gen_Delegate_Imp122);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate37))
			{
			    return new __Gen_Hotfix_Delegate37(__Gen_Delegate_Imp123);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate38))
			{
			    return new __Gen_Hotfix_Delegate38(__Gen_Delegate_Imp124);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate39))
			{
			    return new __Gen_Hotfix_Delegate39(__Gen_Delegate_Imp125);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate40))
			{
			    return new __Gen_Hotfix_Delegate40(__Gen_Delegate_Imp126);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate41))
			{
			    return new __Gen_Hotfix_Delegate41(__Gen_Delegate_Imp127);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate42))
			{
			    return new __Gen_Hotfix_Delegate42(__Gen_Delegate_Imp128);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate43))
			{
			    return new __Gen_Hotfix_Delegate43(__Gen_Delegate_Imp129);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate44))
			{
			    return new __Gen_Hotfix_Delegate44(__Gen_Delegate_Imp130);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate45))
			{
			    return new __Gen_Hotfix_Delegate45(__Gen_Delegate_Imp131);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate46))
			{
			    return new __Gen_Hotfix_Delegate46(__Gen_Delegate_Imp132);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate47))
			{
			    return new __Gen_Hotfix_Delegate47(__Gen_Delegate_Imp133);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate48))
			{
			    return new __Gen_Hotfix_Delegate48(__Gen_Delegate_Imp134);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate49))
			{
			    return new __Gen_Hotfix_Delegate49(__Gen_Delegate_Imp135);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate50))
			{
			    return new __Gen_Hotfix_Delegate50(__Gen_Delegate_Imp136);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate51))
			{
			    return new __Gen_Hotfix_Delegate51(__Gen_Delegate_Imp137);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate52))
			{
			    return new __Gen_Hotfix_Delegate52(__Gen_Delegate_Imp138);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate53))
			{
			    return new __Gen_Hotfix_Delegate53(__Gen_Delegate_Imp139);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate54))
			{
			    return new __Gen_Hotfix_Delegate54(__Gen_Delegate_Imp140);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate55))
			{
			    return new __Gen_Hotfix_Delegate55(__Gen_Delegate_Imp141);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate56))
			{
			    return new __Gen_Hotfix_Delegate56(__Gen_Delegate_Imp142);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate57))
			{
			    return new __Gen_Hotfix_Delegate57(__Gen_Delegate_Imp143);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate58))
			{
			    return new __Gen_Hotfix_Delegate58(__Gen_Delegate_Imp144);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate59))
			{
			    return new __Gen_Hotfix_Delegate59(__Gen_Delegate_Imp145);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate60))
			{
			    return new __Gen_Hotfix_Delegate60(__Gen_Delegate_Imp146);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate61))
			{
			    return new __Gen_Hotfix_Delegate61(__Gen_Delegate_Imp147);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate62))
			{
			    return new __Gen_Hotfix_Delegate62(__Gen_Delegate_Imp148);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate63))
			{
			    return new __Gen_Hotfix_Delegate63(__Gen_Delegate_Imp149);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate64))
			{
			    return new __Gen_Hotfix_Delegate64(__Gen_Delegate_Imp150);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate65))
			{
			    return new __Gen_Hotfix_Delegate65(__Gen_Delegate_Imp151);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate66))
			{
			    return new __Gen_Hotfix_Delegate66(__Gen_Delegate_Imp152);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate67))
			{
			    return new __Gen_Hotfix_Delegate67(__Gen_Delegate_Imp153);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate68))
			{
			    return new __Gen_Hotfix_Delegate68(__Gen_Delegate_Imp154);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate69))
			{
			    return new __Gen_Hotfix_Delegate69(__Gen_Delegate_Imp155);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate70))
			{
			    return new __Gen_Hotfix_Delegate70(__Gen_Delegate_Imp156);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate71))
			{
			    return new __Gen_Hotfix_Delegate71(__Gen_Delegate_Imp157);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate72))
			{
			    return new __Gen_Hotfix_Delegate72(__Gen_Delegate_Imp158);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate73))
			{
			    return new __Gen_Hotfix_Delegate73(__Gen_Delegate_Imp159);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate74))
			{
			    return new __Gen_Hotfix_Delegate74(__Gen_Delegate_Imp160);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate75))
			{
			    return new __Gen_Hotfix_Delegate75(__Gen_Delegate_Imp161);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate76))
			{
			    return new __Gen_Hotfix_Delegate76(__Gen_Delegate_Imp162);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate77))
			{
			    return new __Gen_Hotfix_Delegate77(__Gen_Delegate_Imp163);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate78))
			{
			    return new __Gen_Hotfix_Delegate78(__Gen_Delegate_Imp164);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate79))
			{
			    return new __Gen_Hotfix_Delegate79(__Gen_Delegate_Imp165);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate80))
			{
			    return new __Gen_Hotfix_Delegate80(__Gen_Delegate_Imp166);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate81))
			{
			    return new __Gen_Hotfix_Delegate81(__Gen_Delegate_Imp167);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate82))
			{
			    return new __Gen_Hotfix_Delegate82(__Gen_Delegate_Imp168);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate83))
			{
			    return new __Gen_Hotfix_Delegate83(__Gen_Delegate_Imp169);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate84))
			{
			    return new __Gen_Hotfix_Delegate84(__Gen_Delegate_Imp170);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate85))
			{
			    return new __Gen_Hotfix_Delegate85(__Gen_Delegate_Imp171);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate86))
			{
			    return new __Gen_Hotfix_Delegate86(__Gen_Delegate_Imp172);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate87))
			{
			    return new __Gen_Hotfix_Delegate87(__Gen_Delegate_Imp173);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate88))
			{
			    return new __Gen_Hotfix_Delegate88(__Gen_Delegate_Imp174);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate89))
			{
			    return new __Gen_Hotfix_Delegate89(__Gen_Delegate_Imp175);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate90))
			{
			    return new __Gen_Hotfix_Delegate90(__Gen_Delegate_Imp176);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate91))
			{
			    return new __Gen_Hotfix_Delegate91(__Gen_Delegate_Imp177);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate92))
			{
			    return new __Gen_Hotfix_Delegate92(__Gen_Delegate_Imp178);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate93))
			{
			    return new __Gen_Hotfix_Delegate93(__Gen_Delegate_Imp179);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate94))
			{
			    return new __Gen_Hotfix_Delegate94(__Gen_Delegate_Imp180);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate95))
			{
			    return new __Gen_Hotfix_Delegate95(__Gen_Delegate_Imp181);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate96))
			{
			    return new __Gen_Hotfix_Delegate96(__Gen_Delegate_Imp182);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate97))
			{
			    return new __Gen_Hotfix_Delegate97(__Gen_Delegate_Imp183);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate98))
			{
			    return new __Gen_Hotfix_Delegate98(__Gen_Delegate_Imp184);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate99))
			{
			    return new __Gen_Hotfix_Delegate99(__Gen_Delegate_Imp185);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate100))
			{
			    return new __Gen_Hotfix_Delegate100(__Gen_Delegate_Imp186);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate101))
			{
			    return new __Gen_Hotfix_Delegate101(__Gen_Delegate_Imp187);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate102))
			{
			    return new __Gen_Hotfix_Delegate102(__Gen_Delegate_Imp188);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate103))
			{
			    return new __Gen_Hotfix_Delegate103(__Gen_Delegate_Imp189);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate104))
			{
			    return new __Gen_Hotfix_Delegate104(__Gen_Delegate_Imp190);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate105))
			{
			    return new __Gen_Hotfix_Delegate105(__Gen_Delegate_Imp191);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate106))
			{
			    return new __Gen_Hotfix_Delegate106(__Gen_Delegate_Imp192);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate107))
			{
			    return new __Gen_Hotfix_Delegate107(__Gen_Delegate_Imp193);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate108))
			{
			    return new __Gen_Hotfix_Delegate108(__Gen_Delegate_Imp194);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate109))
			{
			    return new __Gen_Hotfix_Delegate109(__Gen_Delegate_Imp195);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate110))
			{
			    return new __Gen_Hotfix_Delegate110(__Gen_Delegate_Imp196);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate111))
			{
			    return new __Gen_Hotfix_Delegate111(__Gen_Delegate_Imp197);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate112))
			{
			    return new __Gen_Hotfix_Delegate112(__Gen_Delegate_Imp198);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate113))
			{
			    return new __Gen_Hotfix_Delegate113(__Gen_Delegate_Imp199);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate114))
			{
			    return new __Gen_Hotfix_Delegate114(__Gen_Delegate_Imp200);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate115))
			{
			    return new __Gen_Hotfix_Delegate115(__Gen_Delegate_Imp201);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate116))
			{
			    return new __Gen_Hotfix_Delegate116(__Gen_Delegate_Imp202);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate117))
			{
			    return new __Gen_Hotfix_Delegate117(__Gen_Delegate_Imp203);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate118))
			{
			    return new __Gen_Hotfix_Delegate118(__Gen_Delegate_Imp204);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate119))
			{
			    return new __Gen_Hotfix_Delegate119(__Gen_Delegate_Imp205);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate120))
			{
			    return new __Gen_Hotfix_Delegate120(__Gen_Delegate_Imp206);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate121))
			{
			    return new __Gen_Hotfix_Delegate121(__Gen_Delegate_Imp207);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate122))
			{
			    return new __Gen_Hotfix_Delegate122(__Gen_Delegate_Imp208);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate123))
			{
			    return new __Gen_Hotfix_Delegate123(__Gen_Delegate_Imp209);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate124))
			{
			    return new __Gen_Hotfix_Delegate124(__Gen_Delegate_Imp210);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate125))
			{
			    return new __Gen_Hotfix_Delegate125(__Gen_Delegate_Imp211);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate126))
			{
			    return new __Gen_Hotfix_Delegate126(__Gen_Delegate_Imp212);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate127))
			{
			    return new __Gen_Hotfix_Delegate127(__Gen_Delegate_Imp213);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate128))
			{
			    return new __Gen_Hotfix_Delegate128(__Gen_Delegate_Imp214);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate129))
			{
			    return new __Gen_Hotfix_Delegate129(__Gen_Delegate_Imp215);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate130))
			{
			    return new __Gen_Hotfix_Delegate130(__Gen_Delegate_Imp216);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate131))
			{
			    return new __Gen_Hotfix_Delegate131(__Gen_Delegate_Imp217);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate132))
			{
			    return new __Gen_Hotfix_Delegate132(__Gen_Delegate_Imp218);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate133))
			{
			    return new __Gen_Hotfix_Delegate133(__Gen_Delegate_Imp219);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate134))
			{
			    return new __Gen_Hotfix_Delegate134(__Gen_Delegate_Imp220);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate135))
			{
			    return new __Gen_Hotfix_Delegate135(__Gen_Delegate_Imp221);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate136))
			{
			    return new __Gen_Hotfix_Delegate136(__Gen_Delegate_Imp222);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate137))
			{
			    return new __Gen_Hotfix_Delegate137(__Gen_Delegate_Imp223);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate138))
			{
			    return new __Gen_Hotfix_Delegate138(__Gen_Delegate_Imp224);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate139))
			{
			    return new __Gen_Hotfix_Delegate139(__Gen_Delegate_Imp225);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate140))
			{
			    return new __Gen_Hotfix_Delegate140(__Gen_Delegate_Imp226);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate141))
			{
			    return new __Gen_Hotfix_Delegate141(__Gen_Delegate_Imp227);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate142))
			{
			    return new __Gen_Hotfix_Delegate142(__Gen_Delegate_Imp228);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate143))
			{
			    return new __Gen_Hotfix_Delegate143(__Gen_Delegate_Imp229);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate144))
			{
			    return new __Gen_Hotfix_Delegate144(__Gen_Delegate_Imp230);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate145))
			{
			    return new __Gen_Hotfix_Delegate145(__Gen_Delegate_Imp231);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate146))
			{
			    return new __Gen_Hotfix_Delegate146(__Gen_Delegate_Imp232);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate147))
			{
			    return new __Gen_Hotfix_Delegate147(__Gen_Delegate_Imp233);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate148))
			{
			    return new __Gen_Hotfix_Delegate148(__Gen_Delegate_Imp234);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate149))
			{
			    return new __Gen_Hotfix_Delegate149(__Gen_Delegate_Imp235);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate150))
			{
			    return new __Gen_Hotfix_Delegate150(__Gen_Delegate_Imp236);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate151))
			{
			    return new __Gen_Hotfix_Delegate151(__Gen_Delegate_Imp237);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate152))
			{
			    return new __Gen_Hotfix_Delegate152(__Gen_Delegate_Imp238);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate153))
			{
			    return new __Gen_Hotfix_Delegate153(__Gen_Delegate_Imp239);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate155))
			{
			    return new __Gen_Hotfix_Delegate155(__Gen_Delegate_Imp240);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate156))
			{
			    return new __Gen_Hotfix_Delegate156(__Gen_Delegate_Imp241);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate157))
			{
			    return new __Gen_Hotfix_Delegate157(__Gen_Delegate_Imp242);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate158))
			{
			    return new __Gen_Hotfix_Delegate158(__Gen_Delegate_Imp243);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate159))
			{
			    return new __Gen_Hotfix_Delegate159(__Gen_Delegate_Imp244);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate160))
			{
			    return new __Gen_Hotfix_Delegate160(__Gen_Delegate_Imp245);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate161))
			{
			    return new __Gen_Hotfix_Delegate161(__Gen_Delegate_Imp246);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate162))
			{
			    return new __Gen_Hotfix_Delegate162(__Gen_Delegate_Imp247);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate163))
			{
			    return new __Gen_Hotfix_Delegate163(__Gen_Delegate_Imp248);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate164))
			{
			    return new __Gen_Hotfix_Delegate164(__Gen_Delegate_Imp249);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate165))
			{
			    return new __Gen_Hotfix_Delegate165(__Gen_Delegate_Imp250);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate166))
			{
			    return new __Gen_Hotfix_Delegate166(__Gen_Delegate_Imp251);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate167))
			{
			    return new __Gen_Hotfix_Delegate167(__Gen_Delegate_Imp252);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate168))
			{
			    return new __Gen_Hotfix_Delegate168(__Gen_Delegate_Imp253);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate169))
			{
			    return new __Gen_Hotfix_Delegate169(__Gen_Delegate_Imp254);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate170))
			{
			    return new __Gen_Hotfix_Delegate170(__Gen_Delegate_Imp255);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate171))
			{
			    return new __Gen_Hotfix_Delegate171(__Gen_Delegate_Imp256);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate172))
			{
			    return new __Gen_Hotfix_Delegate172(__Gen_Delegate_Imp257);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate173))
			{
			    return new __Gen_Hotfix_Delegate173(__Gen_Delegate_Imp258);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate174))
			{
			    return new __Gen_Hotfix_Delegate174(__Gen_Delegate_Imp259);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate175))
			{
			    return new __Gen_Hotfix_Delegate175(__Gen_Delegate_Imp260);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate176))
			{
			    return new __Gen_Hotfix_Delegate176(__Gen_Delegate_Imp261);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate177))
			{
			    return new __Gen_Hotfix_Delegate177(__Gen_Delegate_Imp262);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate178))
			{
			    return new __Gen_Hotfix_Delegate178(__Gen_Delegate_Imp263);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate179))
			{
			    return new __Gen_Hotfix_Delegate179(__Gen_Delegate_Imp264);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate180))
			{
			    return new __Gen_Hotfix_Delegate180(__Gen_Delegate_Imp265);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate181))
			{
			    return new __Gen_Hotfix_Delegate181(__Gen_Delegate_Imp266);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate182))
			{
			    return new __Gen_Hotfix_Delegate182(__Gen_Delegate_Imp267);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate183))
			{
			    return new __Gen_Hotfix_Delegate183(__Gen_Delegate_Imp268);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate184))
			{
			    return new __Gen_Hotfix_Delegate184(__Gen_Delegate_Imp269);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate185))
			{
			    return new __Gen_Hotfix_Delegate185(__Gen_Delegate_Imp270);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate186))
			{
			    return new __Gen_Hotfix_Delegate186(__Gen_Delegate_Imp271);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate187))
			{
			    return new __Gen_Hotfix_Delegate187(__Gen_Delegate_Imp272);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate188))
			{
			    return new __Gen_Hotfix_Delegate188(__Gen_Delegate_Imp273);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate189))
			{
			    return new __Gen_Hotfix_Delegate189(__Gen_Delegate_Imp274);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate190))
			{
			    return new __Gen_Hotfix_Delegate190(__Gen_Delegate_Imp275);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate191))
			{
			    return new __Gen_Hotfix_Delegate191(__Gen_Delegate_Imp276);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate192))
			{
			    return new __Gen_Hotfix_Delegate192(__Gen_Delegate_Imp277);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate193))
			{
			    return new __Gen_Hotfix_Delegate193(__Gen_Delegate_Imp278);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate194))
			{
			    return new __Gen_Hotfix_Delegate194(__Gen_Delegate_Imp279);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate195))
			{
			    return new __Gen_Hotfix_Delegate195(__Gen_Delegate_Imp280);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate196))
			{
			    return new __Gen_Hotfix_Delegate196(__Gen_Delegate_Imp281);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate197))
			{
			    return new __Gen_Hotfix_Delegate197(__Gen_Delegate_Imp282);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate198))
			{
			    return new __Gen_Hotfix_Delegate198(__Gen_Delegate_Imp283);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate199))
			{
			    return new __Gen_Hotfix_Delegate199(__Gen_Delegate_Imp284);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate200))
			{
			    return new __Gen_Hotfix_Delegate200(__Gen_Delegate_Imp285);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate201))
			{
			    return new __Gen_Hotfix_Delegate201(__Gen_Delegate_Imp286);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate202))
			{
			    return new __Gen_Hotfix_Delegate202(__Gen_Delegate_Imp287);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate203))
			{
			    return new __Gen_Hotfix_Delegate203(__Gen_Delegate_Imp288);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate204))
			{
			    return new __Gen_Hotfix_Delegate204(__Gen_Delegate_Imp289);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate205))
			{
			    return new __Gen_Hotfix_Delegate205(__Gen_Delegate_Imp290);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate206))
			{
			    return new __Gen_Hotfix_Delegate206(__Gen_Delegate_Imp291);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate207))
			{
			    return new __Gen_Hotfix_Delegate207(__Gen_Delegate_Imp292);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate208))
			{
			    return new __Gen_Hotfix_Delegate208(__Gen_Delegate_Imp293);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate209))
			{
			    return new __Gen_Hotfix_Delegate209(__Gen_Delegate_Imp294);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate210))
			{
			    return new __Gen_Hotfix_Delegate210(__Gen_Delegate_Imp295);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate211))
			{
			    return new __Gen_Hotfix_Delegate211(__Gen_Delegate_Imp296);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate212))
			{
			    return new __Gen_Hotfix_Delegate212(__Gen_Delegate_Imp297);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate213))
			{
			    return new __Gen_Hotfix_Delegate213(__Gen_Delegate_Imp298);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate214))
			{
			    return new __Gen_Hotfix_Delegate214(__Gen_Delegate_Imp299);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate215))
			{
			    return new __Gen_Hotfix_Delegate215(__Gen_Delegate_Imp300);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate216))
			{
			    return new __Gen_Hotfix_Delegate216(__Gen_Delegate_Imp301);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate217))
			{
			    return new __Gen_Hotfix_Delegate217(__Gen_Delegate_Imp302);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate218))
			{
			    return new __Gen_Hotfix_Delegate218(__Gen_Delegate_Imp303);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate219))
			{
			    return new __Gen_Hotfix_Delegate219(__Gen_Delegate_Imp304);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate220))
			{
			    return new __Gen_Hotfix_Delegate220(__Gen_Delegate_Imp305);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate221))
			{
			    return new __Gen_Hotfix_Delegate221(__Gen_Delegate_Imp306);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate222))
			{
			    return new __Gen_Hotfix_Delegate222(__Gen_Delegate_Imp307);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate223))
			{
			    return new __Gen_Hotfix_Delegate223(__Gen_Delegate_Imp308);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate224))
			{
			    return new __Gen_Hotfix_Delegate224(__Gen_Delegate_Imp309);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate225))
			{
			    return new __Gen_Hotfix_Delegate225(__Gen_Delegate_Imp310);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate226))
			{
			    return new __Gen_Hotfix_Delegate226(__Gen_Delegate_Imp311);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate227))
			{
			    return new __Gen_Hotfix_Delegate227(__Gen_Delegate_Imp312);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate228))
			{
			    return new __Gen_Hotfix_Delegate228(__Gen_Delegate_Imp313);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate229))
			{
			    return new __Gen_Hotfix_Delegate229(__Gen_Delegate_Imp314);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate230))
			{
			    return new __Gen_Hotfix_Delegate230(__Gen_Delegate_Imp315);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate231))
			{
			    return new __Gen_Hotfix_Delegate231(__Gen_Delegate_Imp316);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate232))
			{
			    return new __Gen_Hotfix_Delegate232(__Gen_Delegate_Imp317);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate233))
			{
			    return new __Gen_Hotfix_Delegate233(__Gen_Delegate_Imp318);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate234))
			{
			    return new __Gen_Hotfix_Delegate234(__Gen_Delegate_Imp319);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate235))
			{
			    return new __Gen_Hotfix_Delegate235(__Gen_Delegate_Imp320);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate236))
			{
			    return new __Gen_Hotfix_Delegate236(__Gen_Delegate_Imp321);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate237))
			{
			    return new __Gen_Hotfix_Delegate237(__Gen_Delegate_Imp322);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate238))
			{
			    return new __Gen_Hotfix_Delegate238(__Gen_Delegate_Imp323);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate239))
			{
			    return new __Gen_Hotfix_Delegate239(__Gen_Delegate_Imp324);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate240))
			{
			    return new __Gen_Hotfix_Delegate240(__Gen_Delegate_Imp325);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate241))
			{
			    return new __Gen_Hotfix_Delegate241(__Gen_Delegate_Imp326);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate242))
			{
			    return new __Gen_Hotfix_Delegate242(__Gen_Delegate_Imp327);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate243))
			{
			    return new __Gen_Hotfix_Delegate243(__Gen_Delegate_Imp328);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate244))
			{
			    return new __Gen_Hotfix_Delegate244(__Gen_Delegate_Imp329);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate245))
			{
			    return new __Gen_Hotfix_Delegate245(__Gen_Delegate_Imp330);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate246))
			{
			    return new __Gen_Hotfix_Delegate246(__Gen_Delegate_Imp331);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate247))
			{
			    return new __Gen_Hotfix_Delegate247(__Gen_Delegate_Imp332);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate248))
			{
			    return new __Gen_Hotfix_Delegate248(__Gen_Delegate_Imp333);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate249))
			{
			    return new __Gen_Hotfix_Delegate249(__Gen_Delegate_Imp334);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate250))
			{
			    return new __Gen_Hotfix_Delegate250(__Gen_Delegate_Imp335);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate251))
			{
			    return new __Gen_Hotfix_Delegate251(__Gen_Delegate_Imp336);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate252))
			{
			    return new __Gen_Hotfix_Delegate252(__Gen_Delegate_Imp337);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate253))
			{
			    return new __Gen_Hotfix_Delegate253(__Gen_Delegate_Imp338);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate254))
			{
			    return new __Gen_Hotfix_Delegate254(__Gen_Delegate_Imp339);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate255))
			{
			    return new __Gen_Hotfix_Delegate255(__Gen_Delegate_Imp340);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate256))
			{
			    return new __Gen_Hotfix_Delegate256(__Gen_Delegate_Imp341);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate257))
			{
			    return new __Gen_Hotfix_Delegate257(__Gen_Delegate_Imp342);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate258))
			{
			    return new __Gen_Hotfix_Delegate258(__Gen_Delegate_Imp343);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate259))
			{
			    return new __Gen_Hotfix_Delegate259(__Gen_Delegate_Imp344);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate260))
			{
			    return new __Gen_Hotfix_Delegate260(__Gen_Delegate_Imp345);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate261))
			{
			    return new __Gen_Hotfix_Delegate261(__Gen_Delegate_Imp346);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate262))
			{
			    return new __Gen_Hotfix_Delegate262(__Gen_Delegate_Imp347);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate263))
			{
			    return new __Gen_Hotfix_Delegate263(__Gen_Delegate_Imp348);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate264))
			{
			    return new __Gen_Hotfix_Delegate264(__Gen_Delegate_Imp349);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate265))
			{
			    return new __Gen_Hotfix_Delegate265(__Gen_Delegate_Imp350);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate266))
			{
			    return new __Gen_Hotfix_Delegate266(__Gen_Delegate_Imp351);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate267))
			{
			    return new __Gen_Hotfix_Delegate267(__Gen_Delegate_Imp352);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate268))
			{
			    return new __Gen_Hotfix_Delegate268(__Gen_Delegate_Imp353);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate269))
			{
			    return new __Gen_Hotfix_Delegate269(__Gen_Delegate_Imp354);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate270))
			{
			    return new __Gen_Hotfix_Delegate270(__Gen_Delegate_Imp355);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate271))
			{
			    return new __Gen_Hotfix_Delegate271(__Gen_Delegate_Imp356);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate272))
			{
			    return new __Gen_Hotfix_Delegate272(__Gen_Delegate_Imp357);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate273))
			{
			    return new __Gen_Hotfix_Delegate273(__Gen_Delegate_Imp358);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate274))
			{
			    return new __Gen_Hotfix_Delegate274(__Gen_Delegate_Imp359);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate275))
			{
			    return new __Gen_Hotfix_Delegate275(__Gen_Delegate_Imp360);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate276))
			{
			    return new __Gen_Hotfix_Delegate276(__Gen_Delegate_Imp361);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate277))
			{
			    return new __Gen_Hotfix_Delegate277(__Gen_Delegate_Imp362);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate278))
			{
			    return new __Gen_Hotfix_Delegate278(__Gen_Delegate_Imp363);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate279))
			{
			    return new __Gen_Hotfix_Delegate279(__Gen_Delegate_Imp364);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate280))
			{
			    return new __Gen_Hotfix_Delegate280(__Gen_Delegate_Imp365);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate281))
			{
			    return new __Gen_Hotfix_Delegate281(__Gen_Delegate_Imp366);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate282))
			{
			    return new __Gen_Hotfix_Delegate282(__Gen_Delegate_Imp367);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate283))
			{
			    return new __Gen_Hotfix_Delegate283(__Gen_Delegate_Imp368);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate284))
			{
			    return new __Gen_Hotfix_Delegate284(__Gen_Delegate_Imp369);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate285))
			{
			    return new __Gen_Hotfix_Delegate285(__Gen_Delegate_Imp370);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate286))
			{
			    return new __Gen_Hotfix_Delegate286(__Gen_Delegate_Imp371);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate287))
			{
			    return new __Gen_Hotfix_Delegate287(__Gen_Delegate_Imp372);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate288))
			{
			    return new __Gen_Hotfix_Delegate288(__Gen_Delegate_Imp373);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate289))
			{
			    return new __Gen_Hotfix_Delegate289(__Gen_Delegate_Imp374);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate290))
			{
			    return new __Gen_Hotfix_Delegate290(__Gen_Delegate_Imp375);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate291))
			{
			    return new __Gen_Hotfix_Delegate291(__Gen_Delegate_Imp376);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate292))
			{
			    return new __Gen_Hotfix_Delegate292(__Gen_Delegate_Imp377);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate293))
			{
			    return new __Gen_Hotfix_Delegate293(__Gen_Delegate_Imp378);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate294))
			{
			    return new __Gen_Hotfix_Delegate294(__Gen_Delegate_Imp379);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate295))
			{
			    return new __Gen_Hotfix_Delegate295(__Gen_Delegate_Imp380);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate296))
			{
			    return new __Gen_Hotfix_Delegate296(__Gen_Delegate_Imp381);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate297))
			{
			    return new __Gen_Hotfix_Delegate297(__Gen_Delegate_Imp382);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate298))
			{
			    return new __Gen_Hotfix_Delegate298(__Gen_Delegate_Imp383);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate299))
			{
			    return new __Gen_Hotfix_Delegate299(__Gen_Delegate_Imp384);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate300))
			{
			    return new __Gen_Hotfix_Delegate300(__Gen_Delegate_Imp385);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate301))
			{
			    return new __Gen_Hotfix_Delegate301(__Gen_Delegate_Imp386);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate302))
			{
			    return new __Gen_Hotfix_Delegate302(__Gen_Delegate_Imp387);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate303))
			{
			    return new __Gen_Hotfix_Delegate303(__Gen_Delegate_Imp388);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate304))
			{
			    return new __Gen_Hotfix_Delegate304(__Gen_Delegate_Imp389);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate305))
			{
			    return new __Gen_Hotfix_Delegate305(__Gen_Delegate_Imp390);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate306))
			{
			    return new __Gen_Hotfix_Delegate306(__Gen_Delegate_Imp391);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate307))
			{
			    return new __Gen_Hotfix_Delegate307(__Gen_Delegate_Imp392);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate308))
			{
			    return new __Gen_Hotfix_Delegate308(__Gen_Delegate_Imp393);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate309))
			{
			    return new __Gen_Hotfix_Delegate309(__Gen_Delegate_Imp394);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate310))
			{
			    return new __Gen_Hotfix_Delegate310(__Gen_Delegate_Imp395);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate311))
			{
			    return new __Gen_Hotfix_Delegate311(__Gen_Delegate_Imp396);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate312))
			{
			    return new __Gen_Hotfix_Delegate312(__Gen_Delegate_Imp397);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate313))
			{
			    return new __Gen_Hotfix_Delegate313(__Gen_Delegate_Imp398);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate314))
			{
			    return new __Gen_Hotfix_Delegate314(__Gen_Delegate_Imp399);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate315))
			{
			    return new __Gen_Hotfix_Delegate315(__Gen_Delegate_Imp400);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate316))
			{
			    return new __Gen_Hotfix_Delegate316(__Gen_Delegate_Imp401);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate317))
			{
			    return new __Gen_Hotfix_Delegate317(__Gen_Delegate_Imp402);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate318))
			{
			    return new __Gen_Hotfix_Delegate318(__Gen_Delegate_Imp403);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate319))
			{
			    return new __Gen_Hotfix_Delegate319(__Gen_Delegate_Imp404);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate320))
			{
			    return new __Gen_Hotfix_Delegate320(__Gen_Delegate_Imp405);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate321))
			{
			    return new __Gen_Hotfix_Delegate321(__Gen_Delegate_Imp406);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate322))
			{
			    return new __Gen_Hotfix_Delegate322(__Gen_Delegate_Imp407);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate323))
			{
			    return new __Gen_Hotfix_Delegate323(__Gen_Delegate_Imp408);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate324))
			{
			    return new __Gen_Hotfix_Delegate324(__Gen_Delegate_Imp409);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate325))
			{
			    return new __Gen_Hotfix_Delegate325(__Gen_Delegate_Imp410);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate326))
			{
			    return new __Gen_Hotfix_Delegate326(__Gen_Delegate_Imp411);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate327))
			{
			    return new __Gen_Hotfix_Delegate327(__Gen_Delegate_Imp412);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate328))
			{
			    return new __Gen_Hotfix_Delegate328(__Gen_Delegate_Imp413);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate329))
			{
			    return new __Gen_Hotfix_Delegate329(__Gen_Delegate_Imp414);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate330))
			{
			    return new __Gen_Hotfix_Delegate330(__Gen_Delegate_Imp415);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate331))
			{
			    return new __Gen_Hotfix_Delegate331(__Gen_Delegate_Imp416);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate332))
			{
			    return new __Gen_Hotfix_Delegate332(__Gen_Delegate_Imp417);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate333))
			{
			    return new __Gen_Hotfix_Delegate333(__Gen_Delegate_Imp418);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate334))
			{
			    return new __Gen_Hotfix_Delegate334(__Gen_Delegate_Imp419);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate335))
			{
			    return new __Gen_Hotfix_Delegate335(__Gen_Delegate_Imp420);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate336))
			{
			    return new __Gen_Hotfix_Delegate336(__Gen_Delegate_Imp421);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate337))
			{
			    return new __Gen_Hotfix_Delegate337(__Gen_Delegate_Imp422);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate338))
			{
			    return new __Gen_Hotfix_Delegate338(__Gen_Delegate_Imp423);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate339))
			{
			    return new __Gen_Hotfix_Delegate339(__Gen_Delegate_Imp424);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate340))
			{
			    return new __Gen_Hotfix_Delegate340(__Gen_Delegate_Imp425);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate341))
			{
			    return new __Gen_Hotfix_Delegate341(__Gen_Delegate_Imp426);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate342))
			{
			    return new __Gen_Hotfix_Delegate342(__Gen_Delegate_Imp427);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate343))
			{
			    return new __Gen_Hotfix_Delegate343(__Gen_Delegate_Imp428);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate344))
			{
			    return new __Gen_Hotfix_Delegate344(__Gen_Delegate_Imp429);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate345))
			{
			    return new __Gen_Hotfix_Delegate345(__Gen_Delegate_Imp430);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate346))
			{
			    return new __Gen_Hotfix_Delegate346(__Gen_Delegate_Imp431);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate347))
			{
			    return new __Gen_Hotfix_Delegate347(__Gen_Delegate_Imp432);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate348))
			{
			    return new __Gen_Hotfix_Delegate348(__Gen_Delegate_Imp433);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate349))
			{
			    return new __Gen_Hotfix_Delegate349(__Gen_Delegate_Imp434);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate350))
			{
			    return new __Gen_Hotfix_Delegate350(__Gen_Delegate_Imp435);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate351))
			{
			    return new __Gen_Hotfix_Delegate351(__Gen_Delegate_Imp436);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate352))
			{
			    return new __Gen_Hotfix_Delegate352(__Gen_Delegate_Imp437);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate353))
			{
			    return new __Gen_Hotfix_Delegate353(__Gen_Delegate_Imp438);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate354))
			{
			    return new __Gen_Hotfix_Delegate354(__Gen_Delegate_Imp439);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate355))
			{
			    return new __Gen_Hotfix_Delegate355(__Gen_Delegate_Imp440);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate356))
			{
			    return new __Gen_Hotfix_Delegate356(__Gen_Delegate_Imp441);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate357))
			{
			    return new __Gen_Hotfix_Delegate357(__Gen_Delegate_Imp442);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate358))
			{
			    return new __Gen_Hotfix_Delegate358(__Gen_Delegate_Imp443);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate359))
			{
			    return new __Gen_Hotfix_Delegate359(__Gen_Delegate_Imp444);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate360))
			{
			    return new __Gen_Hotfix_Delegate360(__Gen_Delegate_Imp445);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate361))
			{
			    return new __Gen_Hotfix_Delegate361(__Gen_Delegate_Imp446);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate362))
			{
			    return new __Gen_Hotfix_Delegate362(__Gen_Delegate_Imp447);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate363))
			{
			    return new __Gen_Hotfix_Delegate363(__Gen_Delegate_Imp448);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate364))
			{
			    return new __Gen_Hotfix_Delegate364(__Gen_Delegate_Imp449);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate365))
			{
			    return new __Gen_Hotfix_Delegate365(__Gen_Delegate_Imp450);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate366))
			{
			    return new __Gen_Hotfix_Delegate366(__Gen_Delegate_Imp451);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate367))
			{
			    return new __Gen_Hotfix_Delegate367(__Gen_Delegate_Imp452);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate368))
			{
			    return new __Gen_Hotfix_Delegate368(__Gen_Delegate_Imp453);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate369))
			{
			    return new __Gen_Hotfix_Delegate369(__Gen_Delegate_Imp454);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate370))
			{
			    return new __Gen_Hotfix_Delegate370(__Gen_Delegate_Imp455);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate371))
			{
			    return new __Gen_Hotfix_Delegate371(__Gen_Delegate_Imp456);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate372))
			{
			    return new __Gen_Hotfix_Delegate372(__Gen_Delegate_Imp457);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate373))
			{
			    return new __Gen_Hotfix_Delegate373(__Gen_Delegate_Imp458);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate374))
			{
			    return new __Gen_Hotfix_Delegate374(__Gen_Delegate_Imp459);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate375))
			{
			    return new __Gen_Hotfix_Delegate375(__Gen_Delegate_Imp460);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate376))
			{
			    return new __Gen_Hotfix_Delegate376(__Gen_Delegate_Imp461);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate377))
			{
			    return new __Gen_Hotfix_Delegate377(__Gen_Delegate_Imp462);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate378))
			{
			    return new __Gen_Hotfix_Delegate378(__Gen_Delegate_Imp463);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate379))
			{
			    return new __Gen_Hotfix_Delegate379(__Gen_Delegate_Imp464);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate380))
			{
			    return new __Gen_Hotfix_Delegate380(__Gen_Delegate_Imp465);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate381))
			{
			    return new __Gen_Hotfix_Delegate381(__Gen_Delegate_Imp466);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate382))
			{
			    return new __Gen_Hotfix_Delegate382(__Gen_Delegate_Imp467);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate383))
			{
			    return new __Gen_Hotfix_Delegate383(__Gen_Delegate_Imp468);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate384))
			{
			    return new __Gen_Hotfix_Delegate384(__Gen_Delegate_Imp469);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate385))
			{
			    return new __Gen_Hotfix_Delegate385(__Gen_Delegate_Imp470);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate386))
			{
			    return new __Gen_Hotfix_Delegate386(__Gen_Delegate_Imp471);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate387))
			{
			    return new __Gen_Hotfix_Delegate387(__Gen_Delegate_Imp472);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate388))
			{
			    return new __Gen_Hotfix_Delegate388(__Gen_Delegate_Imp473);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate389))
			{
			    return new __Gen_Hotfix_Delegate389(__Gen_Delegate_Imp474);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate390))
			{
			    return new __Gen_Hotfix_Delegate390(__Gen_Delegate_Imp475);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate391))
			{
			    return new __Gen_Hotfix_Delegate391(__Gen_Delegate_Imp476);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate392))
			{
			    return new __Gen_Hotfix_Delegate392(__Gen_Delegate_Imp477);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate393))
			{
			    return new __Gen_Hotfix_Delegate393(__Gen_Delegate_Imp478);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate394))
			{
			    return new __Gen_Hotfix_Delegate394(__Gen_Delegate_Imp479);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate395))
			{
			    return new __Gen_Hotfix_Delegate395(__Gen_Delegate_Imp480);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate396))
			{
			    return new __Gen_Hotfix_Delegate396(__Gen_Delegate_Imp481);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate397))
			{
			    return new __Gen_Hotfix_Delegate397(__Gen_Delegate_Imp482);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate398))
			{
			    return new __Gen_Hotfix_Delegate398(__Gen_Delegate_Imp483);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate399))
			{
			    return new __Gen_Hotfix_Delegate399(__Gen_Delegate_Imp484);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate400))
			{
			    return new __Gen_Hotfix_Delegate400(__Gen_Delegate_Imp485);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate401))
			{
			    return new __Gen_Hotfix_Delegate401(__Gen_Delegate_Imp486);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate402))
			{
			    return new __Gen_Hotfix_Delegate402(__Gen_Delegate_Imp487);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate403))
			{
			    return new __Gen_Hotfix_Delegate403(__Gen_Delegate_Imp488);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate404))
			{
			    return new __Gen_Hotfix_Delegate404(__Gen_Delegate_Imp489);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate405))
			{
			    return new __Gen_Hotfix_Delegate405(__Gen_Delegate_Imp490);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate406))
			{
			    return new __Gen_Hotfix_Delegate406(__Gen_Delegate_Imp491);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate407))
			{
			    return new __Gen_Hotfix_Delegate407(__Gen_Delegate_Imp492);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate408))
			{
			    return new __Gen_Hotfix_Delegate408(__Gen_Delegate_Imp493);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate409))
			{
			    return new __Gen_Hotfix_Delegate409(__Gen_Delegate_Imp494);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate410))
			{
			    return new __Gen_Hotfix_Delegate410(__Gen_Delegate_Imp495);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate411))
			{
			    return new __Gen_Hotfix_Delegate411(__Gen_Delegate_Imp496);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate412))
			{
			    return new __Gen_Hotfix_Delegate412(__Gen_Delegate_Imp497);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate413))
			{
			    return new __Gen_Hotfix_Delegate413(__Gen_Delegate_Imp498);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate414))
			{
			    return new __Gen_Hotfix_Delegate414(__Gen_Delegate_Imp499);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate415))
			{
			    return new __Gen_Hotfix_Delegate415(__Gen_Delegate_Imp500);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate416))
			{
			    return new __Gen_Hotfix_Delegate416(__Gen_Delegate_Imp501);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate417))
			{
			    return new __Gen_Hotfix_Delegate417(__Gen_Delegate_Imp502);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate418))
			{
			    return new __Gen_Hotfix_Delegate418(__Gen_Delegate_Imp503);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate419))
			{
			    return new __Gen_Hotfix_Delegate419(__Gen_Delegate_Imp504);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate420))
			{
			    return new __Gen_Hotfix_Delegate420(__Gen_Delegate_Imp505);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate421))
			{
			    return new __Gen_Hotfix_Delegate421(__Gen_Delegate_Imp506);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate422))
			{
			    return new __Gen_Hotfix_Delegate422(__Gen_Delegate_Imp507);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate423))
			{
			    return new __Gen_Hotfix_Delegate423(__Gen_Delegate_Imp508);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate424))
			{
			    return new __Gen_Hotfix_Delegate424(__Gen_Delegate_Imp509);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate425))
			{
			    return new __Gen_Hotfix_Delegate425(__Gen_Delegate_Imp510);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate426))
			{
			    return new __Gen_Hotfix_Delegate426(__Gen_Delegate_Imp511);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate427))
			{
			    return new __Gen_Hotfix_Delegate427(__Gen_Delegate_Imp512);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate428))
			{
			    return new __Gen_Hotfix_Delegate428(__Gen_Delegate_Imp513);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate429))
			{
			    return new __Gen_Hotfix_Delegate429(__Gen_Delegate_Imp514);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate430))
			{
			    return new __Gen_Hotfix_Delegate430(__Gen_Delegate_Imp515);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate431))
			{
			    return new __Gen_Hotfix_Delegate431(__Gen_Delegate_Imp516);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate432))
			{
			    return new __Gen_Hotfix_Delegate432(__Gen_Delegate_Imp517);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate433))
			{
			    return new __Gen_Hotfix_Delegate433(__Gen_Delegate_Imp518);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate434))
			{
			    return new __Gen_Hotfix_Delegate434(__Gen_Delegate_Imp519);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate435))
			{
			    return new __Gen_Hotfix_Delegate435(__Gen_Delegate_Imp520);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate436))
			{
			    return new __Gen_Hotfix_Delegate436(__Gen_Delegate_Imp521);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate437))
			{
			    return new __Gen_Hotfix_Delegate437(__Gen_Delegate_Imp522);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate438))
			{
			    return new __Gen_Hotfix_Delegate438(__Gen_Delegate_Imp523);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate439))
			{
			    return new __Gen_Hotfix_Delegate439(__Gen_Delegate_Imp524);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate440))
			{
			    return new __Gen_Hotfix_Delegate440(__Gen_Delegate_Imp525);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate441))
			{
			    return new __Gen_Hotfix_Delegate441(__Gen_Delegate_Imp526);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate442))
			{
			    return new __Gen_Hotfix_Delegate442(__Gen_Delegate_Imp527);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate443))
			{
			    return new __Gen_Hotfix_Delegate443(__Gen_Delegate_Imp528);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate444))
			{
			    return new __Gen_Hotfix_Delegate444(__Gen_Delegate_Imp529);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate445))
			{
			    return new __Gen_Hotfix_Delegate445(__Gen_Delegate_Imp530);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate446))
			{
			    return new __Gen_Hotfix_Delegate446(__Gen_Delegate_Imp531);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate447))
			{
			    return new __Gen_Hotfix_Delegate447(__Gen_Delegate_Imp532);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate448))
			{
			    return new __Gen_Hotfix_Delegate448(__Gen_Delegate_Imp533);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate449))
			{
			    return new __Gen_Hotfix_Delegate449(__Gen_Delegate_Imp534);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate450))
			{
			    return new __Gen_Hotfix_Delegate450(__Gen_Delegate_Imp535);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate451))
			{
			    return new __Gen_Hotfix_Delegate451(__Gen_Delegate_Imp536);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate452))
			{
			    return new __Gen_Hotfix_Delegate452(__Gen_Delegate_Imp537);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate453))
			{
			    return new __Gen_Hotfix_Delegate453(__Gen_Delegate_Imp538);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate454))
			{
			    return new __Gen_Hotfix_Delegate454(__Gen_Delegate_Imp539);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate455))
			{
			    return new __Gen_Hotfix_Delegate455(__Gen_Delegate_Imp540);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate456))
			{
			    return new __Gen_Hotfix_Delegate456(__Gen_Delegate_Imp541);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate457))
			{
			    return new __Gen_Hotfix_Delegate457(__Gen_Delegate_Imp542);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate458))
			{
			    return new __Gen_Hotfix_Delegate458(__Gen_Delegate_Imp543);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate459))
			{
			    return new __Gen_Hotfix_Delegate459(__Gen_Delegate_Imp544);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate460))
			{
			    return new __Gen_Hotfix_Delegate460(__Gen_Delegate_Imp545);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate461))
			{
			    return new __Gen_Hotfix_Delegate461(__Gen_Delegate_Imp546);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate462))
			{
			    return new __Gen_Hotfix_Delegate462(__Gen_Delegate_Imp547);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate463))
			{
			    return new __Gen_Hotfix_Delegate463(__Gen_Delegate_Imp548);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate464))
			{
			    return new __Gen_Hotfix_Delegate464(__Gen_Delegate_Imp549);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate465))
			{
			    return new __Gen_Hotfix_Delegate465(__Gen_Delegate_Imp550);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate466))
			{
			    return new __Gen_Hotfix_Delegate466(__Gen_Delegate_Imp551);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate467))
			{
			    return new __Gen_Hotfix_Delegate467(__Gen_Delegate_Imp552);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate468))
			{
			    return new __Gen_Hotfix_Delegate468(__Gen_Delegate_Imp553);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate469))
			{
			    return new __Gen_Hotfix_Delegate469(__Gen_Delegate_Imp554);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate470))
			{
			    return new __Gen_Hotfix_Delegate470(__Gen_Delegate_Imp555);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate471))
			{
			    return new __Gen_Hotfix_Delegate471(__Gen_Delegate_Imp556);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate472))
			{
			    return new __Gen_Hotfix_Delegate472(__Gen_Delegate_Imp557);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate473))
			{
			    return new __Gen_Hotfix_Delegate473(__Gen_Delegate_Imp558);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate474))
			{
			    return new __Gen_Hotfix_Delegate474(__Gen_Delegate_Imp559);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate475))
			{
			    return new __Gen_Hotfix_Delegate475(__Gen_Delegate_Imp560);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate476))
			{
			    return new __Gen_Hotfix_Delegate476(__Gen_Delegate_Imp561);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate477))
			{
			    return new __Gen_Hotfix_Delegate477(__Gen_Delegate_Imp562);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate478))
			{
			    return new __Gen_Hotfix_Delegate478(__Gen_Delegate_Imp563);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate479))
			{
			    return new __Gen_Hotfix_Delegate479(__Gen_Delegate_Imp564);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate480))
			{
			    return new __Gen_Hotfix_Delegate480(__Gen_Delegate_Imp565);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate481))
			{
			    return new __Gen_Hotfix_Delegate481(__Gen_Delegate_Imp566);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate483))
			{
			    return new __Gen_Hotfix_Delegate483(__Gen_Delegate_Imp567);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate484))
			{
			    return new __Gen_Hotfix_Delegate484(__Gen_Delegate_Imp568);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate485))
			{
			    return new __Gen_Hotfix_Delegate485(__Gen_Delegate_Imp569);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate486))
			{
			    return new __Gen_Hotfix_Delegate486(__Gen_Delegate_Imp570);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate487))
			{
			    return new __Gen_Hotfix_Delegate487(__Gen_Delegate_Imp571);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate488))
			{
			    return new __Gen_Hotfix_Delegate488(__Gen_Delegate_Imp572);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate489))
			{
			    return new __Gen_Hotfix_Delegate489(__Gen_Delegate_Imp573);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate490))
			{
			    return new __Gen_Hotfix_Delegate490(__Gen_Delegate_Imp574);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate491))
			{
			    return new __Gen_Hotfix_Delegate491(__Gen_Delegate_Imp575);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate492))
			{
			    return new __Gen_Hotfix_Delegate492(__Gen_Delegate_Imp576);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate493))
			{
			    return new __Gen_Hotfix_Delegate493(__Gen_Delegate_Imp577);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate494))
			{
			    return new __Gen_Hotfix_Delegate494(__Gen_Delegate_Imp578);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate495))
			{
			    return new __Gen_Hotfix_Delegate495(__Gen_Delegate_Imp579);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate496))
			{
			    return new __Gen_Hotfix_Delegate496(__Gen_Delegate_Imp580);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate497))
			{
			    return new __Gen_Hotfix_Delegate497(__Gen_Delegate_Imp581);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate498))
			{
			    return new __Gen_Hotfix_Delegate498(__Gen_Delegate_Imp582);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate499))
			{
			    return new __Gen_Hotfix_Delegate499(__Gen_Delegate_Imp583);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate500))
			{
			    return new __Gen_Hotfix_Delegate500(__Gen_Delegate_Imp584);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate501))
			{
			    return new __Gen_Hotfix_Delegate501(__Gen_Delegate_Imp585);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate502))
			{
			    return new __Gen_Hotfix_Delegate502(__Gen_Delegate_Imp586);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate503))
			{
			    return new __Gen_Hotfix_Delegate503(__Gen_Delegate_Imp587);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate504))
			{
			    return new __Gen_Hotfix_Delegate504(__Gen_Delegate_Imp588);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate505))
			{
			    return new __Gen_Hotfix_Delegate505(__Gen_Delegate_Imp589);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate506))
			{
			    return new __Gen_Hotfix_Delegate506(__Gen_Delegate_Imp590);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate507))
			{
			    return new __Gen_Hotfix_Delegate507(__Gen_Delegate_Imp591);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate508))
			{
			    return new __Gen_Hotfix_Delegate508(__Gen_Delegate_Imp592);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate509))
			{
			    return new __Gen_Hotfix_Delegate509(__Gen_Delegate_Imp593);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate510))
			{
			    return new __Gen_Hotfix_Delegate510(__Gen_Delegate_Imp594);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate511))
			{
			    return new __Gen_Hotfix_Delegate511(__Gen_Delegate_Imp595);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate512))
			{
			    return new __Gen_Hotfix_Delegate512(__Gen_Delegate_Imp596);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate513))
			{
			    return new __Gen_Hotfix_Delegate513(__Gen_Delegate_Imp597);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate514))
			{
			    return new __Gen_Hotfix_Delegate514(__Gen_Delegate_Imp598);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate515))
			{
			    return new __Gen_Hotfix_Delegate515(__Gen_Delegate_Imp599);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate516))
			{
			    return new __Gen_Hotfix_Delegate516(__Gen_Delegate_Imp600);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate517))
			{
			    return new __Gen_Hotfix_Delegate517(__Gen_Delegate_Imp601);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate518))
			{
			    return new __Gen_Hotfix_Delegate518(__Gen_Delegate_Imp602);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate519))
			{
			    return new __Gen_Hotfix_Delegate519(__Gen_Delegate_Imp603);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate520))
			{
			    return new __Gen_Hotfix_Delegate520(__Gen_Delegate_Imp604);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate521))
			{
			    return new __Gen_Hotfix_Delegate521(__Gen_Delegate_Imp605);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate522))
			{
			    return new __Gen_Hotfix_Delegate522(__Gen_Delegate_Imp606);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate523))
			{
			    return new __Gen_Hotfix_Delegate523(__Gen_Delegate_Imp607);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate524))
			{
			    return new __Gen_Hotfix_Delegate524(__Gen_Delegate_Imp608);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate525))
			{
			    return new __Gen_Hotfix_Delegate525(__Gen_Delegate_Imp609);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate526))
			{
			    return new __Gen_Hotfix_Delegate526(__Gen_Delegate_Imp610);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate527))
			{
			    return new __Gen_Hotfix_Delegate527(__Gen_Delegate_Imp611);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate528))
			{
			    return new __Gen_Hotfix_Delegate528(__Gen_Delegate_Imp612);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate529))
			{
			    return new __Gen_Hotfix_Delegate529(__Gen_Delegate_Imp613);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate530))
			{
			    return new __Gen_Hotfix_Delegate530(__Gen_Delegate_Imp614);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate531))
			{
			    return new __Gen_Hotfix_Delegate531(__Gen_Delegate_Imp615);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate532))
			{
			    return new __Gen_Hotfix_Delegate532(__Gen_Delegate_Imp616);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate533))
			{
			    return new __Gen_Hotfix_Delegate533(__Gen_Delegate_Imp617);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate534))
			{
			    return new __Gen_Hotfix_Delegate534(__Gen_Delegate_Imp618);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate535))
			{
			    return new __Gen_Hotfix_Delegate535(__Gen_Delegate_Imp619);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate536))
			{
			    return new __Gen_Hotfix_Delegate536(__Gen_Delegate_Imp620);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate537))
			{
			    return new __Gen_Hotfix_Delegate537(__Gen_Delegate_Imp621);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate538))
			{
			    return new __Gen_Hotfix_Delegate538(__Gen_Delegate_Imp622);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate539))
			{
			    return new __Gen_Hotfix_Delegate539(__Gen_Delegate_Imp623);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate540))
			{
			    return new __Gen_Hotfix_Delegate540(__Gen_Delegate_Imp624);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate541))
			{
			    return new __Gen_Hotfix_Delegate541(__Gen_Delegate_Imp625);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate542))
			{
			    return new __Gen_Hotfix_Delegate542(__Gen_Delegate_Imp626);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate543))
			{
			    return new __Gen_Hotfix_Delegate543(__Gen_Delegate_Imp627);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate544))
			{
			    return new __Gen_Hotfix_Delegate544(__Gen_Delegate_Imp628);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate545))
			{
			    return new __Gen_Hotfix_Delegate545(__Gen_Delegate_Imp629);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate546))
			{
			    return new __Gen_Hotfix_Delegate546(__Gen_Delegate_Imp630);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate547))
			{
			    return new __Gen_Hotfix_Delegate547(__Gen_Delegate_Imp631);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate548))
			{
			    return new __Gen_Hotfix_Delegate548(__Gen_Delegate_Imp632);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate549))
			{
			    return new __Gen_Hotfix_Delegate549(__Gen_Delegate_Imp633);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate550))
			{
			    return new __Gen_Hotfix_Delegate550(__Gen_Delegate_Imp634);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate551))
			{
			    return new __Gen_Hotfix_Delegate551(__Gen_Delegate_Imp635);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate552))
			{
			    return new __Gen_Hotfix_Delegate552(__Gen_Delegate_Imp636);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate553))
			{
			    return new __Gen_Hotfix_Delegate553(__Gen_Delegate_Imp637);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate554))
			{
			    return new __Gen_Hotfix_Delegate554(__Gen_Delegate_Imp638);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate555))
			{
			    return new __Gen_Hotfix_Delegate555(__Gen_Delegate_Imp639);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate556))
			{
			    return new __Gen_Hotfix_Delegate556(__Gen_Delegate_Imp640);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate557))
			{
			    return new __Gen_Hotfix_Delegate557(__Gen_Delegate_Imp641);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate558))
			{
			    return new __Gen_Hotfix_Delegate558(__Gen_Delegate_Imp642);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate559))
			{
			    return new __Gen_Hotfix_Delegate559(__Gen_Delegate_Imp643);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate560))
			{
			    return new __Gen_Hotfix_Delegate560(__Gen_Delegate_Imp644);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate561))
			{
			    return new __Gen_Hotfix_Delegate561(__Gen_Delegate_Imp645);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate562))
			{
			    return new __Gen_Hotfix_Delegate562(__Gen_Delegate_Imp646);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate563))
			{
			    return new __Gen_Hotfix_Delegate563(__Gen_Delegate_Imp647);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate564))
			{
			    return new __Gen_Hotfix_Delegate564(__Gen_Delegate_Imp648);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate565))
			{
			    return new __Gen_Hotfix_Delegate565(__Gen_Delegate_Imp649);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate566))
			{
			    return new __Gen_Hotfix_Delegate566(__Gen_Delegate_Imp650);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate567))
			{
			    return new __Gen_Hotfix_Delegate567(__Gen_Delegate_Imp651);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate568))
			{
			    return new __Gen_Hotfix_Delegate568(__Gen_Delegate_Imp652);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate569))
			{
			    return new __Gen_Hotfix_Delegate569(__Gen_Delegate_Imp653);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate570))
			{
			    return new __Gen_Hotfix_Delegate570(__Gen_Delegate_Imp654);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate571))
			{
			    return new __Gen_Hotfix_Delegate571(__Gen_Delegate_Imp655);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate572))
			{
			    return new __Gen_Hotfix_Delegate572(__Gen_Delegate_Imp656);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate573))
			{
			    return new __Gen_Hotfix_Delegate573(__Gen_Delegate_Imp657);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate574))
			{
			    return new __Gen_Hotfix_Delegate574(__Gen_Delegate_Imp658);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate575))
			{
			    return new __Gen_Hotfix_Delegate575(__Gen_Delegate_Imp659);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate576))
			{
			    return new __Gen_Hotfix_Delegate576(__Gen_Delegate_Imp660);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate577))
			{
			    return new __Gen_Hotfix_Delegate577(__Gen_Delegate_Imp661);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate578))
			{
			    return new __Gen_Hotfix_Delegate578(__Gen_Delegate_Imp662);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate579))
			{
			    return new __Gen_Hotfix_Delegate579(__Gen_Delegate_Imp663);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate580))
			{
			    return new __Gen_Hotfix_Delegate580(__Gen_Delegate_Imp664);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate581))
			{
			    return new __Gen_Hotfix_Delegate581(__Gen_Delegate_Imp665);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate582))
			{
			    return new __Gen_Hotfix_Delegate582(__Gen_Delegate_Imp666);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate583))
			{
			    return new __Gen_Hotfix_Delegate583(__Gen_Delegate_Imp667);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate584))
			{
			    return new __Gen_Hotfix_Delegate584(__Gen_Delegate_Imp668);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate585))
			{
			    return new __Gen_Hotfix_Delegate585(__Gen_Delegate_Imp669);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate586))
			{
			    return new __Gen_Hotfix_Delegate586(__Gen_Delegate_Imp670);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate587))
			{
			    return new __Gen_Hotfix_Delegate587(__Gen_Delegate_Imp671);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate588))
			{
			    return new __Gen_Hotfix_Delegate588(__Gen_Delegate_Imp672);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate589))
			{
			    return new __Gen_Hotfix_Delegate589(__Gen_Delegate_Imp673);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate590))
			{
			    return new __Gen_Hotfix_Delegate590(__Gen_Delegate_Imp674);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate591))
			{
			    return new __Gen_Hotfix_Delegate591(__Gen_Delegate_Imp675);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate592))
			{
			    return new __Gen_Hotfix_Delegate592(__Gen_Delegate_Imp676);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate593))
			{
			    return new __Gen_Hotfix_Delegate593(__Gen_Delegate_Imp677);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate594))
			{
			    return new __Gen_Hotfix_Delegate594(__Gen_Delegate_Imp678);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate595))
			{
			    return new __Gen_Hotfix_Delegate595(__Gen_Delegate_Imp679);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate596))
			{
			    return new __Gen_Hotfix_Delegate596(__Gen_Delegate_Imp680);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate597))
			{
			    return new __Gen_Hotfix_Delegate597(__Gen_Delegate_Imp681);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate598))
			{
			    return new __Gen_Hotfix_Delegate598(__Gen_Delegate_Imp682);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate599))
			{
			    return new __Gen_Hotfix_Delegate599(__Gen_Delegate_Imp683);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate600))
			{
			    return new __Gen_Hotfix_Delegate600(__Gen_Delegate_Imp684);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate601))
			{
			    return new __Gen_Hotfix_Delegate601(__Gen_Delegate_Imp685);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate602))
			{
			    return new __Gen_Hotfix_Delegate602(__Gen_Delegate_Imp686);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate603))
			{
			    return new __Gen_Hotfix_Delegate603(__Gen_Delegate_Imp687);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate604))
			{
			    return new __Gen_Hotfix_Delegate604(__Gen_Delegate_Imp688);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate605))
			{
			    return new __Gen_Hotfix_Delegate605(__Gen_Delegate_Imp689);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate606))
			{
			    return new __Gen_Hotfix_Delegate606(__Gen_Delegate_Imp690);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate607))
			{
			    return new __Gen_Hotfix_Delegate607(__Gen_Delegate_Imp691);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate608))
			{
			    return new __Gen_Hotfix_Delegate608(__Gen_Delegate_Imp692);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate609))
			{
			    return new __Gen_Hotfix_Delegate609(__Gen_Delegate_Imp693);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate610))
			{
			    return new __Gen_Hotfix_Delegate610(__Gen_Delegate_Imp694);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate611))
			{
			    return new __Gen_Hotfix_Delegate611(__Gen_Delegate_Imp695);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate612))
			{
			    return new __Gen_Hotfix_Delegate612(__Gen_Delegate_Imp696);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate613))
			{
			    return new __Gen_Hotfix_Delegate613(__Gen_Delegate_Imp697);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate614))
			{
			    return new __Gen_Hotfix_Delegate614(__Gen_Delegate_Imp698);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate615))
			{
			    return new __Gen_Hotfix_Delegate615(__Gen_Delegate_Imp699);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate616))
			{
			    return new __Gen_Hotfix_Delegate616(__Gen_Delegate_Imp700);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate617))
			{
			    return new __Gen_Hotfix_Delegate617(__Gen_Delegate_Imp701);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate618))
			{
			    return new __Gen_Hotfix_Delegate618(__Gen_Delegate_Imp702);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate619))
			{
			    return new __Gen_Hotfix_Delegate619(__Gen_Delegate_Imp703);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate620))
			{
			    return new __Gen_Hotfix_Delegate620(__Gen_Delegate_Imp704);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate621))
			{
			    return new __Gen_Hotfix_Delegate621(__Gen_Delegate_Imp705);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate622))
			{
			    return new __Gen_Hotfix_Delegate622(__Gen_Delegate_Imp706);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate623))
			{
			    return new __Gen_Hotfix_Delegate623(__Gen_Delegate_Imp707);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate624))
			{
			    return new __Gen_Hotfix_Delegate624(__Gen_Delegate_Imp708);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate625))
			{
			    return new __Gen_Hotfix_Delegate625(__Gen_Delegate_Imp709);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate626))
			{
			    return new __Gen_Hotfix_Delegate626(__Gen_Delegate_Imp710);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate627))
			{
			    return new __Gen_Hotfix_Delegate627(__Gen_Delegate_Imp711);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate628))
			{
			    return new __Gen_Hotfix_Delegate628(__Gen_Delegate_Imp712);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate629))
			{
			    return new __Gen_Hotfix_Delegate629(__Gen_Delegate_Imp713);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate630))
			{
			    return new __Gen_Hotfix_Delegate630(__Gen_Delegate_Imp714);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate631))
			{
			    return new __Gen_Hotfix_Delegate631(__Gen_Delegate_Imp715);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate632))
			{
			    return new __Gen_Hotfix_Delegate632(__Gen_Delegate_Imp716);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate633))
			{
			    return new __Gen_Hotfix_Delegate633(__Gen_Delegate_Imp717);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate634))
			{
			    return new __Gen_Hotfix_Delegate634(__Gen_Delegate_Imp718);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate635))
			{
			    return new __Gen_Hotfix_Delegate635(__Gen_Delegate_Imp719);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate636))
			{
			    return new __Gen_Hotfix_Delegate636(__Gen_Delegate_Imp720);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate637))
			{
			    return new __Gen_Hotfix_Delegate637(__Gen_Delegate_Imp721);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate638))
			{
			    return new __Gen_Hotfix_Delegate638(__Gen_Delegate_Imp722);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate639))
			{
			    return new __Gen_Hotfix_Delegate639(__Gen_Delegate_Imp723);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate640))
			{
			    return new __Gen_Hotfix_Delegate640(__Gen_Delegate_Imp724);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate641))
			{
			    return new __Gen_Hotfix_Delegate641(__Gen_Delegate_Imp725);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate642))
			{
			    return new __Gen_Hotfix_Delegate642(__Gen_Delegate_Imp726);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate643))
			{
			    return new __Gen_Hotfix_Delegate643(__Gen_Delegate_Imp727);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate644))
			{
			    return new __Gen_Hotfix_Delegate644(__Gen_Delegate_Imp728);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate645))
			{
			    return new __Gen_Hotfix_Delegate645(__Gen_Delegate_Imp729);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate646))
			{
			    return new __Gen_Hotfix_Delegate646(__Gen_Delegate_Imp730);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate647))
			{
			    return new __Gen_Hotfix_Delegate647(__Gen_Delegate_Imp731);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate648))
			{
			    return new __Gen_Hotfix_Delegate648(__Gen_Delegate_Imp732);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate649))
			{
			    return new __Gen_Hotfix_Delegate649(__Gen_Delegate_Imp733);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate650))
			{
			    return new __Gen_Hotfix_Delegate650(__Gen_Delegate_Imp734);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate651))
			{
			    return new __Gen_Hotfix_Delegate651(__Gen_Delegate_Imp735);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate652))
			{
			    return new __Gen_Hotfix_Delegate652(__Gen_Delegate_Imp736);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate653))
			{
			    return new __Gen_Hotfix_Delegate653(__Gen_Delegate_Imp737);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate654))
			{
			    return new __Gen_Hotfix_Delegate654(__Gen_Delegate_Imp738);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate655))
			{
			    return new __Gen_Hotfix_Delegate655(__Gen_Delegate_Imp739);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate656))
			{
			    return new __Gen_Hotfix_Delegate656(__Gen_Delegate_Imp740);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate657))
			{
			    return new __Gen_Hotfix_Delegate657(__Gen_Delegate_Imp741);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate658))
			{
			    return new __Gen_Hotfix_Delegate658(__Gen_Delegate_Imp742);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate659))
			{
			    return new __Gen_Hotfix_Delegate659(__Gen_Delegate_Imp743);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate660))
			{
			    return new __Gen_Hotfix_Delegate660(__Gen_Delegate_Imp744);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate661))
			{
			    return new __Gen_Hotfix_Delegate661(__Gen_Delegate_Imp745);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate662))
			{
			    return new __Gen_Hotfix_Delegate662(__Gen_Delegate_Imp746);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate663))
			{
			    return new __Gen_Hotfix_Delegate663(__Gen_Delegate_Imp747);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate664))
			{
			    return new __Gen_Hotfix_Delegate664(__Gen_Delegate_Imp748);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate665))
			{
			    return new __Gen_Hotfix_Delegate665(__Gen_Delegate_Imp749);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate666))
			{
			    return new __Gen_Hotfix_Delegate666(__Gen_Delegate_Imp750);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate667))
			{
			    return new __Gen_Hotfix_Delegate667(__Gen_Delegate_Imp751);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate668))
			{
			    return new __Gen_Hotfix_Delegate668(__Gen_Delegate_Imp752);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate669))
			{
			    return new __Gen_Hotfix_Delegate669(__Gen_Delegate_Imp753);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate670))
			{
			    return new __Gen_Hotfix_Delegate670(__Gen_Delegate_Imp754);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate671))
			{
			    return new __Gen_Hotfix_Delegate671(__Gen_Delegate_Imp755);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate672))
			{
			    return new __Gen_Hotfix_Delegate672(__Gen_Delegate_Imp756);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate673))
			{
			    return new __Gen_Hotfix_Delegate673(__Gen_Delegate_Imp757);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate674))
			{
			    return new __Gen_Hotfix_Delegate674(__Gen_Delegate_Imp758);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate675))
			{
			    return new __Gen_Hotfix_Delegate675(__Gen_Delegate_Imp759);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate676))
			{
			    return new __Gen_Hotfix_Delegate676(__Gen_Delegate_Imp760);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate677))
			{
			    return new __Gen_Hotfix_Delegate677(__Gen_Delegate_Imp761);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate678))
			{
			    return new __Gen_Hotfix_Delegate678(__Gen_Delegate_Imp762);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate679))
			{
			    return new __Gen_Hotfix_Delegate679(__Gen_Delegate_Imp763);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate680))
			{
			    return new __Gen_Hotfix_Delegate680(__Gen_Delegate_Imp764);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate681))
			{
			    return new __Gen_Hotfix_Delegate681(__Gen_Delegate_Imp765);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate682))
			{
			    return new __Gen_Hotfix_Delegate682(__Gen_Delegate_Imp766);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate683))
			{
			    return new __Gen_Hotfix_Delegate683(__Gen_Delegate_Imp767);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate684))
			{
			    return new __Gen_Hotfix_Delegate684(__Gen_Delegate_Imp768);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate685))
			{
			    return new __Gen_Hotfix_Delegate685(__Gen_Delegate_Imp769);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate686))
			{
			    return new __Gen_Hotfix_Delegate686(__Gen_Delegate_Imp770);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate687))
			{
			    return new __Gen_Hotfix_Delegate687(__Gen_Delegate_Imp771);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate688))
			{
			    return new __Gen_Hotfix_Delegate688(__Gen_Delegate_Imp772);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate689))
			{
			    return new __Gen_Hotfix_Delegate689(__Gen_Delegate_Imp773);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate690))
			{
			    return new __Gen_Hotfix_Delegate690(__Gen_Delegate_Imp774);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate691))
			{
			    return new __Gen_Hotfix_Delegate691(__Gen_Delegate_Imp775);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate692))
			{
			    return new __Gen_Hotfix_Delegate692(__Gen_Delegate_Imp776);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate693))
			{
			    return new __Gen_Hotfix_Delegate693(__Gen_Delegate_Imp777);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate694))
			{
			    return new __Gen_Hotfix_Delegate694(__Gen_Delegate_Imp778);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate695))
			{
			    return new __Gen_Hotfix_Delegate695(__Gen_Delegate_Imp779);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate696))
			{
			    return new __Gen_Hotfix_Delegate696(__Gen_Delegate_Imp780);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate697))
			{
			    return new __Gen_Hotfix_Delegate697(__Gen_Delegate_Imp781);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate698))
			{
			    return new __Gen_Hotfix_Delegate698(__Gen_Delegate_Imp782);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate699))
			{
			    return new __Gen_Hotfix_Delegate699(__Gen_Delegate_Imp783);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate700))
			{
			    return new __Gen_Hotfix_Delegate700(__Gen_Delegate_Imp784);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate701))
			{
			    return new __Gen_Hotfix_Delegate701(__Gen_Delegate_Imp785);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate702))
			{
			    return new __Gen_Hotfix_Delegate702(__Gen_Delegate_Imp786);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate703))
			{
			    return new __Gen_Hotfix_Delegate703(__Gen_Delegate_Imp787);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate704))
			{
			    return new __Gen_Hotfix_Delegate704(__Gen_Delegate_Imp788);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate705))
			{
			    return new __Gen_Hotfix_Delegate705(__Gen_Delegate_Imp789);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate706))
			{
			    return new __Gen_Hotfix_Delegate706(__Gen_Delegate_Imp790);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate707))
			{
			    return new __Gen_Hotfix_Delegate707(__Gen_Delegate_Imp791);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate708))
			{
			    return new __Gen_Hotfix_Delegate708(__Gen_Delegate_Imp792);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate709))
			{
			    return new __Gen_Hotfix_Delegate709(__Gen_Delegate_Imp793);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate710))
			{
			    return new __Gen_Hotfix_Delegate710(__Gen_Delegate_Imp794);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate711))
			{
			    return new __Gen_Hotfix_Delegate711(__Gen_Delegate_Imp795);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate712))
			{
			    return new __Gen_Hotfix_Delegate712(__Gen_Delegate_Imp796);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate713))
			{
			    return new __Gen_Hotfix_Delegate713(__Gen_Delegate_Imp797);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate714))
			{
			    return new __Gen_Hotfix_Delegate714(__Gen_Delegate_Imp798);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate715))
			{
			    return new __Gen_Hotfix_Delegate715(__Gen_Delegate_Imp799);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate716))
			{
			    return new __Gen_Hotfix_Delegate716(__Gen_Delegate_Imp800);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate717))
			{
			    return new __Gen_Hotfix_Delegate717(__Gen_Delegate_Imp801);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate718))
			{
			    return new __Gen_Hotfix_Delegate718(__Gen_Delegate_Imp802);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate719))
			{
			    return new __Gen_Hotfix_Delegate719(__Gen_Delegate_Imp803);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate720))
			{
			    return new __Gen_Hotfix_Delegate720(__Gen_Delegate_Imp804);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate721))
			{
			    return new __Gen_Hotfix_Delegate721(__Gen_Delegate_Imp805);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate722))
			{
			    return new __Gen_Hotfix_Delegate722(__Gen_Delegate_Imp806);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate723))
			{
			    return new __Gen_Hotfix_Delegate723(__Gen_Delegate_Imp807);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate724))
			{
			    return new __Gen_Hotfix_Delegate724(__Gen_Delegate_Imp808);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate725))
			{
			    return new __Gen_Hotfix_Delegate725(__Gen_Delegate_Imp809);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate726))
			{
			    return new __Gen_Hotfix_Delegate726(__Gen_Delegate_Imp810);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate727))
			{
			    return new __Gen_Hotfix_Delegate727(__Gen_Delegate_Imp811);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate728))
			{
			    return new __Gen_Hotfix_Delegate728(__Gen_Delegate_Imp812);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate729))
			{
			    return new __Gen_Hotfix_Delegate729(__Gen_Delegate_Imp813);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate730))
			{
			    return new __Gen_Hotfix_Delegate730(__Gen_Delegate_Imp814);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate731))
			{
			    return new __Gen_Hotfix_Delegate731(__Gen_Delegate_Imp815);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate732))
			{
			    return new __Gen_Hotfix_Delegate732(__Gen_Delegate_Imp816);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate733))
			{
			    return new __Gen_Hotfix_Delegate733(__Gen_Delegate_Imp817);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate734))
			{
			    return new __Gen_Hotfix_Delegate734(__Gen_Delegate_Imp818);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate735))
			{
			    return new __Gen_Hotfix_Delegate735(__Gen_Delegate_Imp819);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate736))
			{
			    return new __Gen_Hotfix_Delegate736(__Gen_Delegate_Imp820);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate737))
			{
			    return new __Gen_Hotfix_Delegate737(__Gen_Delegate_Imp821);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate738))
			{
			    return new __Gen_Hotfix_Delegate738(__Gen_Delegate_Imp822);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate739))
			{
			    return new __Gen_Hotfix_Delegate739(__Gen_Delegate_Imp823);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate740))
			{
			    return new __Gen_Hotfix_Delegate740(__Gen_Delegate_Imp824);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate741))
			{
			    return new __Gen_Hotfix_Delegate741(__Gen_Delegate_Imp825);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate742))
			{
			    return new __Gen_Hotfix_Delegate742(__Gen_Delegate_Imp826);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate743))
			{
			    return new __Gen_Hotfix_Delegate743(__Gen_Delegate_Imp827);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate744))
			{
			    return new __Gen_Hotfix_Delegate744(__Gen_Delegate_Imp828);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate745))
			{
			    return new __Gen_Hotfix_Delegate745(__Gen_Delegate_Imp829);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate746))
			{
			    return new __Gen_Hotfix_Delegate746(__Gen_Delegate_Imp830);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate747))
			{
			    return new __Gen_Hotfix_Delegate747(__Gen_Delegate_Imp831);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate748))
			{
			    return new __Gen_Hotfix_Delegate748(__Gen_Delegate_Imp832);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate749))
			{
			    return new __Gen_Hotfix_Delegate749(__Gen_Delegate_Imp833);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate750))
			{
			    return new __Gen_Hotfix_Delegate750(__Gen_Delegate_Imp834);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate751))
			{
			    return new __Gen_Hotfix_Delegate751(__Gen_Delegate_Imp835);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate752))
			{
			    return new __Gen_Hotfix_Delegate752(__Gen_Delegate_Imp836);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate753))
			{
			    return new __Gen_Hotfix_Delegate753(__Gen_Delegate_Imp837);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate754))
			{
			    return new __Gen_Hotfix_Delegate754(__Gen_Delegate_Imp838);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate755))
			{
			    return new __Gen_Hotfix_Delegate755(__Gen_Delegate_Imp839);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate756))
			{
			    return new __Gen_Hotfix_Delegate756(__Gen_Delegate_Imp840);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate757))
			{
			    return new __Gen_Hotfix_Delegate757(__Gen_Delegate_Imp841);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate758))
			{
			    return new __Gen_Hotfix_Delegate758(__Gen_Delegate_Imp842);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate759))
			{
			    return new __Gen_Hotfix_Delegate759(__Gen_Delegate_Imp843);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate760))
			{
			    return new __Gen_Hotfix_Delegate760(__Gen_Delegate_Imp844);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate761))
			{
			    return new __Gen_Hotfix_Delegate761(__Gen_Delegate_Imp845);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate762))
			{
			    return new __Gen_Hotfix_Delegate762(__Gen_Delegate_Imp846);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate763))
			{
			    return new __Gen_Hotfix_Delegate763(__Gen_Delegate_Imp847);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate764))
			{
			    return new __Gen_Hotfix_Delegate764(__Gen_Delegate_Imp848);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate765))
			{
			    return new __Gen_Hotfix_Delegate765(__Gen_Delegate_Imp849);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate766))
			{
			    return new __Gen_Hotfix_Delegate766(__Gen_Delegate_Imp850);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate767))
			{
			    return new __Gen_Hotfix_Delegate767(__Gen_Delegate_Imp851);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate768))
			{
			    return new __Gen_Hotfix_Delegate768(__Gen_Delegate_Imp852);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate769))
			{
			    return new __Gen_Hotfix_Delegate769(__Gen_Delegate_Imp853);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate770))
			{
			    return new __Gen_Hotfix_Delegate770(__Gen_Delegate_Imp854);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate771))
			{
			    return new __Gen_Hotfix_Delegate771(__Gen_Delegate_Imp855);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate772))
			{
			    return new __Gen_Hotfix_Delegate772(__Gen_Delegate_Imp856);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate773))
			{
			    return new __Gen_Hotfix_Delegate773(__Gen_Delegate_Imp857);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate774))
			{
			    return new __Gen_Hotfix_Delegate774(__Gen_Delegate_Imp858);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate775))
			{
			    return new __Gen_Hotfix_Delegate775(__Gen_Delegate_Imp859);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate776))
			{
			    return new __Gen_Hotfix_Delegate776(__Gen_Delegate_Imp860);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate777))
			{
			    return new __Gen_Hotfix_Delegate777(__Gen_Delegate_Imp861);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate778))
			{
			    return new __Gen_Hotfix_Delegate778(__Gen_Delegate_Imp862);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate779))
			{
			    return new __Gen_Hotfix_Delegate779(__Gen_Delegate_Imp863);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate780))
			{
			    return new __Gen_Hotfix_Delegate780(__Gen_Delegate_Imp864);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate781))
			{
			    return new __Gen_Hotfix_Delegate781(__Gen_Delegate_Imp865);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate782))
			{
			    return new __Gen_Hotfix_Delegate782(__Gen_Delegate_Imp866);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate783))
			{
			    return new __Gen_Hotfix_Delegate783(__Gen_Delegate_Imp867);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate784))
			{
			    return new __Gen_Hotfix_Delegate784(__Gen_Delegate_Imp868);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate785))
			{
			    return new __Gen_Hotfix_Delegate785(__Gen_Delegate_Imp869);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate786))
			{
			    return new __Gen_Hotfix_Delegate786(__Gen_Delegate_Imp870);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate787))
			{
			    return new __Gen_Hotfix_Delegate787(__Gen_Delegate_Imp871);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate788))
			{
			    return new __Gen_Hotfix_Delegate788(__Gen_Delegate_Imp872);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate789))
			{
			    return new __Gen_Hotfix_Delegate789(__Gen_Delegate_Imp873);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate790))
			{
			    return new __Gen_Hotfix_Delegate790(__Gen_Delegate_Imp874);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate791))
			{
			    return new __Gen_Hotfix_Delegate791(__Gen_Delegate_Imp875);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate792))
			{
			    return new __Gen_Hotfix_Delegate792(__Gen_Delegate_Imp876);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate793))
			{
			    return new __Gen_Hotfix_Delegate793(__Gen_Delegate_Imp877);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate794))
			{
			    return new __Gen_Hotfix_Delegate794(__Gen_Delegate_Imp878);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate795))
			{
			    return new __Gen_Hotfix_Delegate795(__Gen_Delegate_Imp879);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate796))
			{
			    return new __Gen_Hotfix_Delegate796(__Gen_Delegate_Imp880);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate797))
			{
			    return new __Gen_Hotfix_Delegate797(__Gen_Delegate_Imp881);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate798))
			{
			    return new __Gen_Hotfix_Delegate798(__Gen_Delegate_Imp882);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate799))
			{
			    return new __Gen_Hotfix_Delegate799(__Gen_Delegate_Imp883);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate800))
			{
			    return new __Gen_Hotfix_Delegate800(__Gen_Delegate_Imp884);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate801))
			{
			    return new __Gen_Hotfix_Delegate801(__Gen_Delegate_Imp885);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate802))
			{
			    return new __Gen_Hotfix_Delegate802(__Gen_Delegate_Imp886);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate803))
			{
			    return new __Gen_Hotfix_Delegate803(__Gen_Delegate_Imp887);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate804))
			{
			    return new __Gen_Hotfix_Delegate804(__Gen_Delegate_Imp888);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate805))
			{
			    return new __Gen_Hotfix_Delegate805(__Gen_Delegate_Imp889);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate806))
			{
			    return new __Gen_Hotfix_Delegate806(__Gen_Delegate_Imp890);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate807))
			{
			    return new __Gen_Hotfix_Delegate807(__Gen_Delegate_Imp891);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate808))
			{
			    return new __Gen_Hotfix_Delegate808(__Gen_Delegate_Imp892);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate809))
			{
			    return new __Gen_Hotfix_Delegate809(__Gen_Delegate_Imp893);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate810))
			{
			    return new __Gen_Hotfix_Delegate810(__Gen_Delegate_Imp894);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate811))
			{
			    return new __Gen_Hotfix_Delegate811(__Gen_Delegate_Imp895);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate812))
			{
			    return new __Gen_Hotfix_Delegate812(__Gen_Delegate_Imp896);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate813))
			{
			    return new __Gen_Hotfix_Delegate813(__Gen_Delegate_Imp897);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate814))
			{
			    return new __Gen_Hotfix_Delegate814(__Gen_Delegate_Imp898);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate815))
			{
			    return new __Gen_Hotfix_Delegate815(__Gen_Delegate_Imp899);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate816))
			{
			    return new __Gen_Hotfix_Delegate816(__Gen_Delegate_Imp900);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate817))
			{
			    return new __Gen_Hotfix_Delegate817(__Gen_Delegate_Imp901);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate818))
			{
			    return new __Gen_Hotfix_Delegate818(__Gen_Delegate_Imp902);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate819))
			{
			    return new __Gen_Hotfix_Delegate819(__Gen_Delegate_Imp903);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate820))
			{
			    return new __Gen_Hotfix_Delegate820(__Gen_Delegate_Imp904);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate821))
			{
			    return new __Gen_Hotfix_Delegate821(__Gen_Delegate_Imp905);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate822))
			{
			    return new __Gen_Hotfix_Delegate822(__Gen_Delegate_Imp906);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate823))
			{
			    return new __Gen_Hotfix_Delegate823(__Gen_Delegate_Imp907);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate824))
			{
			    return new __Gen_Hotfix_Delegate824(__Gen_Delegate_Imp908);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate825))
			{
			    return new __Gen_Hotfix_Delegate825(__Gen_Delegate_Imp909);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate826))
			{
			    return new __Gen_Hotfix_Delegate826(__Gen_Delegate_Imp910);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate827))
			{
			    return new __Gen_Hotfix_Delegate827(__Gen_Delegate_Imp911);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate828))
			{
			    return new __Gen_Hotfix_Delegate828(__Gen_Delegate_Imp912);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate829))
			{
			    return new __Gen_Hotfix_Delegate829(__Gen_Delegate_Imp913);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate830))
			{
			    return new __Gen_Hotfix_Delegate830(__Gen_Delegate_Imp914);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate831))
			{
			    return new __Gen_Hotfix_Delegate831(__Gen_Delegate_Imp915);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate832))
			{
			    return new __Gen_Hotfix_Delegate832(__Gen_Delegate_Imp916);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate833))
			{
			    return new __Gen_Hotfix_Delegate833(__Gen_Delegate_Imp917);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate834))
			{
			    return new __Gen_Hotfix_Delegate834(__Gen_Delegate_Imp918);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate835))
			{
			    return new __Gen_Hotfix_Delegate835(__Gen_Delegate_Imp919);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate836))
			{
			    return new __Gen_Hotfix_Delegate836(__Gen_Delegate_Imp920);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate837))
			{
			    return new __Gen_Hotfix_Delegate837(__Gen_Delegate_Imp921);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate838))
			{
			    return new __Gen_Hotfix_Delegate838(__Gen_Delegate_Imp922);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate839))
			{
			    return new __Gen_Hotfix_Delegate839(__Gen_Delegate_Imp923);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate840))
			{
			    return new __Gen_Hotfix_Delegate840(__Gen_Delegate_Imp924);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate841))
			{
			    return new __Gen_Hotfix_Delegate841(__Gen_Delegate_Imp925);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate842))
			{
			    return new __Gen_Hotfix_Delegate842(__Gen_Delegate_Imp926);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate843))
			{
			    return new __Gen_Hotfix_Delegate843(__Gen_Delegate_Imp927);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate844))
			{
			    return new __Gen_Hotfix_Delegate844(__Gen_Delegate_Imp928);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate845))
			{
			    return new __Gen_Hotfix_Delegate845(__Gen_Delegate_Imp929);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate846))
			{
			    return new __Gen_Hotfix_Delegate846(__Gen_Delegate_Imp930);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate847))
			{
			    return new __Gen_Hotfix_Delegate847(__Gen_Delegate_Imp931);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate848))
			{
			    return new __Gen_Hotfix_Delegate848(__Gen_Delegate_Imp932);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate849))
			{
			    return new __Gen_Hotfix_Delegate849(__Gen_Delegate_Imp933);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate850))
			{
			    return new __Gen_Hotfix_Delegate850(__Gen_Delegate_Imp934);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate851))
			{
			    return new __Gen_Hotfix_Delegate851(__Gen_Delegate_Imp935);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate852))
			{
			    return new __Gen_Hotfix_Delegate852(__Gen_Delegate_Imp936);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate853))
			{
			    return new __Gen_Hotfix_Delegate853(__Gen_Delegate_Imp937);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate854))
			{
			    return new __Gen_Hotfix_Delegate854(__Gen_Delegate_Imp938);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate855))
			{
			    return new __Gen_Hotfix_Delegate855(__Gen_Delegate_Imp939);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate856))
			{
			    return new __Gen_Hotfix_Delegate856(__Gen_Delegate_Imp940);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate857))
			{
			    return new __Gen_Hotfix_Delegate857(__Gen_Delegate_Imp941);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate858))
			{
			    return new __Gen_Hotfix_Delegate858(__Gen_Delegate_Imp942);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate859))
			{
			    return new __Gen_Hotfix_Delegate859(__Gen_Delegate_Imp943);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate860))
			{
			    return new __Gen_Hotfix_Delegate860(__Gen_Delegate_Imp944);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate861))
			{
			    return new __Gen_Hotfix_Delegate861(__Gen_Delegate_Imp945);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate862))
			{
			    return new __Gen_Hotfix_Delegate862(__Gen_Delegate_Imp946);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate863))
			{
			    return new __Gen_Hotfix_Delegate863(__Gen_Delegate_Imp947);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate864))
			{
			    return new __Gen_Hotfix_Delegate864(__Gen_Delegate_Imp948);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate865))
			{
			    return new __Gen_Hotfix_Delegate865(__Gen_Delegate_Imp949);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate866))
			{
			    return new __Gen_Hotfix_Delegate866(__Gen_Delegate_Imp950);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate867))
			{
			    return new __Gen_Hotfix_Delegate867(__Gen_Delegate_Imp951);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate868))
			{
			    return new __Gen_Hotfix_Delegate868(__Gen_Delegate_Imp952);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate869))
			{
			    return new __Gen_Hotfix_Delegate869(__Gen_Delegate_Imp953);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate870))
			{
			    return new __Gen_Hotfix_Delegate870(__Gen_Delegate_Imp954);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate871))
			{
			    return new __Gen_Hotfix_Delegate871(__Gen_Delegate_Imp955);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate872))
			{
			    return new __Gen_Hotfix_Delegate872(__Gen_Delegate_Imp956);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate873))
			{
			    return new __Gen_Hotfix_Delegate873(__Gen_Delegate_Imp957);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate874))
			{
			    return new __Gen_Hotfix_Delegate874(__Gen_Delegate_Imp958);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate875))
			{
			    return new __Gen_Hotfix_Delegate875(__Gen_Delegate_Imp959);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate876))
			{
			    return new __Gen_Hotfix_Delegate876(__Gen_Delegate_Imp960);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate877))
			{
			    return new __Gen_Hotfix_Delegate877(__Gen_Delegate_Imp961);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate878))
			{
			    return new __Gen_Hotfix_Delegate878(__Gen_Delegate_Imp962);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate879))
			{
			    return new __Gen_Hotfix_Delegate879(__Gen_Delegate_Imp963);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate880))
			{
			    return new __Gen_Hotfix_Delegate880(__Gen_Delegate_Imp964);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate881))
			{
			    return new __Gen_Hotfix_Delegate881(__Gen_Delegate_Imp965);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate882))
			{
			    return new __Gen_Hotfix_Delegate882(__Gen_Delegate_Imp966);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate883))
			{
			    return new __Gen_Hotfix_Delegate883(__Gen_Delegate_Imp967);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate884))
			{
			    return new __Gen_Hotfix_Delegate884(__Gen_Delegate_Imp968);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate885))
			{
			    return new __Gen_Hotfix_Delegate885(__Gen_Delegate_Imp969);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate886))
			{
			    return new __Gen_Hotfix_Delegate886(__Gen_Delegate_Imp970);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate887))
			{
			    return new __Gen_Hotfix_Delegate887(__Gen_Delegate_Imp971);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate888))
			{
			    return new __Gen_Hotfix_Delegate888(__Gen_Delegate_Imp972);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate889))
			{
			    return new __Gen_Hotfix_Delegate889(__Gen_Delegate_Imp973);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate890))
			{
			    return new __Gen_Hotfix_Delegate890(__Gen_Delegate_Imp974);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate891))
			{
			    return new __Gen_Hotfix_Delegate891(__Gen_Delegate_Imp975);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate892))
			{
			    return new __Gen_Hotfix_Delegate892(__Gen_Delegate_Imp976);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate893))
			{
			    return new __Gen_Hotfix_Delegate893(__Gen_Delegate_Imp977);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate894))
			{
			    return new __Gen_Hotfix_Delegate894(__Gen_Delegate_Imp978);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate895))
			{
			    return new __Gen_Hotfix_Delegate895(__Gen_Delegate_Imp979);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate896))
			{
			    return new __Gen_Hotfix_Delegate896(__Gen_Delegate_Imp980);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate897))
			{
			    return new __Gen_Hotfix_Delegate897(__Gen_Delegate_Imp981);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate898))
			{
			    return new __Gen_Hotfix_Delegate898(__Gen_Delegate_Imp982);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate899))
			{
			    return new __Gen_Hotfix_Delegate899(__Gen_Delegate_Imp983);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate900))
			{
			    return new __Gen_Hotfix_Delegate900(__Gen_Delegate_Imp984);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate901))
			{
			    return new __Gen_Hotfix_Delegate901(__Gen_Delegate_Imp985);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate902))
			{
			    return new __Gen_Hotfix_Delegate902(__Gen_Delegate_Imp986);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate903))
			{
			    return new __Gen_Hotfix_Delegate903(__Gen_Delegate_Imp987);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate904))
			{
			    return new __Gen_Hotfix_Delegate904(__Gen_Delegate_Imp988);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate905))
			{
			    return new __Gen_Hotfix_Delegate905(__Gen_Delegate_Imp989);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate906))
			{
			    return new __Gen_Hotfix_Delegate906(__Gen_Delegate_Imp990);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate907))
			{
			    return new __Gen_Hotfix_Delegate907(__Gen_Delegate_Imp991);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate908))
			{
			    return new __Gen_Hotfix_Delegate908(__Gen_Delegate_Imp992);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate909))
			{
			    return new __Gen_Hotfix_Delegate909(__Gen_Delegate_Imp993);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate910))
			{
			    return new __Gen_Hotfix_Delegate910(__Gen_Delegate_Imp994);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate911))
			{
			    return new __Gen_Hotfix_Delegate911(__Gen_Delegate_Imp995);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate912))
			{
			    return new __Gen_Hotfix_Delegate912(__Gen_Delegate_Imp996);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate913))
			{
			    return new __Gen_Hotfix_Delegate913(__Gen_Delegate_Imp997);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate914))
			{
			    return new __Gen_Hotfix_Delegate914(__Gen_Delegate_Imp998);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate915))
			{
			    return new __Gen_Hotfix_Delegate915(__Gen_Delegate_Imp999);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate916))
			{
			    return new __Gen_Hotfix_Delegate916(__Gen_Delegate_Imp1000);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate917))
			{
			    return new __Gen_Hotfix_Delegate917(__Gen_Delegate_Imp1001);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate918))
			{
			    return new __Gen_Hotfix_Delegate918(__Gen_Delegate_Imp1002);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate919))
			{
			    return new __Gen_Hotfix_Delegate919(__Gen_Delegate_Imp1003);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate920))
			{
			    return new __Gen_Hotfix_Delegate920(__Gen_Delegate_Imp1004);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate921))
			{
			    return new __Gen_Hotfix_Delegate921(__Gen_Delegate_Imp1005);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate922))
			{
			    return new __Gen_Hotfix_Delegate922(__Gen_Delegate_Imp1006);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate923))
			{
			    return new __Gen_Hotfix_Delegate923(__Gen_Delegate_Imp1007);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate924))
			{
			    return new __Gen_Hotfix_Delegate924(__Gen_Delegate_Imp1008);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate925))
			{
			    return new __Gen_Hotfix_Delegate925(__Gen_Delegate_Imp1009);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate926))
			{
			    return new __Gen_Hotfix_Delegate926(__Gen_Delegate_Imp1010);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate927))
			{
			    return new __Gen_Hotfix_Delegate927(__Gen_Delegate_Imp1011);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate928))
			{
			    return new __Gen_Hotfix_Delegate928(__Gen_Delegate_Imp1012);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate929))
			{
			    return new __Gen_Hotfix_Delegate929(__Gen_Delegate_Imp1013);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate930))
			{
			    return new __Gen_Hotfix_Delegate930(__Gen_Delegate_Imp1014);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate931))
			{
			    return new __Gen_Hotfix_Delegate931(__Gen_Delegate_Imp1015);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate932))
			{
			    return new __Gen_Hotfix_Delegate932(__Gen_Delegate_Imp1016);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate933))
			{
			    return new __Gen_Hotfix_Delegate933(__Gen_Delegate_Imp1017);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate934))
			{
			    return new __Gen_Hotfix_Delegate934(__Gen_Delegate_Imp1018);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate935))
			{
			    return new __Gen_Hotfix_Delegate935(__Gen_Delegate_Imp1019);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate936))
			{
			    return new __Gen_Hotfix_Delegate936(__Gen_Delegate_Imp1020);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate937))
			{
			    return new __Gen_Hotfix_Delegate937(__Gen_Delegate_Imp1021);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate938))
			{
			    return new __Gen_Hotfix_Delegate938(__Gen_Delegate_Imp1022);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate939))
			{
			    return new __Gen_Hotfix_Delegate939(__Gen_Delegate_Imp1023);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate940))
			{
			    return new __Gen_Hotfix_Delegate940(__Gen_Delegate_Imp1024);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate941))
			{
			    return new __Gen_Hotfix_Delegate941(__Gen_Delegate_Imp1025);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate942))
			{
			    return new __Gen_Hotfix_Delegate942(__Gen_Delegate_Imp1026);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate943))
			{
			    return new __Gen_Hotfix_Delegate943(__Gen_Delegate_Imp1027);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate944))
			{
			    return new __Gen_Hotfix_Delegate944(__Gen_Delegate_Imp1028);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate945))
			{
			    return new __Gen_Hotfix_Delegate945(__Gen_Delegate_Imp1029);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate946))
			{
			    return new __Gen_Hotfix_Delegate946(__Gen_Delegate_Imp1030);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate947))
			{
			    return new __Gen_Hotfix_Delegate947(__Gen_Delegate_Imp1031);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate948))
			{
			    return new __Gen_Hotfix_Delegate948(__Gen_Delegate_Imp1032);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate949))
			{
			    return new __Gen_Hotfix_Delegate949(__Gen_Delegate_Imp1033);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate950))
			{
			    return new __Gen_Hotfix_Delegate950(__Gen_Delegate_Imp1034);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate951))
			{
			    return new __Gen_Hotfix_Delegate951(__Gen_Delegate_Imp1035);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate952))
			{
			    return new __Gen_Hotfix_Delegate952(__Gen_Delegate_Imp1036);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate953))
			{
			    return new __Gen_Hotfix_Delegate953(__Gen_Delegate_Imp1037);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate954))
			{
			    return new __Gen_Hotfix_Delegate954(__Gen_Delegate_Imp1038);
			}
		
		    if (type == typeof(__Gen_Hotfix_Delegate955))
			{
			    return new __Gen_Hotfix_Delegate955(__Gen_Delegate_Imp1039);
			}
		
		    throw new InvalidCastException("This delegate must add to CSharpCallLua: " + type);
		}
	}
    
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate0(object p0);
    
    [HotfixDelegate]
    public delegate int __Gen_Hotfix_Delegate1(object p0, int p1, int p2);
    
    [HotfixDelegate]
    public delegate UnityEngine.Vector3 __Gen_Hotfix_Delegate2(object p0, UnityEngine.Vector3 p1, UnityEngine.Vector3 p2);
    
    [HotfixDelegate]
    public delegate int __Gen_Hotfix_Delegate3(object p0, int p1, out double p2, ref string p3);
    
    [HotfixDelegate]
    public delegate int __Gen_Hotfix_Delegate4(object p0, int p1, out double p2, ref string p3, object p4);
    
    [HotfixDelegate]
    public delegate UnityEngine.GameObject __Gen_Hotfix_Delegate5(StructTest p0, int p1, object p2);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate6(StructTest p0, object p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate7(XLua.LuaTable p0, object p1);
    
    [HotfixDelegate]
    public delegate int __Gen_Hotfix_Delegate8(XLua.LuaTable p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate9(XLua.LuaTable p0, int p1);
    
    [HotfixDelegate]
    public delegate int __Gen_Hotfix_Delegate10(XLua.LuaTable p0, object p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate11(XLua.LuaTable p0, object p1, int p2);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate12(XLua.LuaTable p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate13(int p0, int p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate14(object p0, int p1, int p2);
    
    [HotfixDelegate]
    public delegate XLua.LuaTable __Gen_Hotfix_Delegate15(object p0);
    
    [HotfixDelegate]
    public delegate XLua.LuaTable __Gen_Hotfix_Delegate16(object p0, int p1, int p2);
    
    [HotfixDelegate]
    public delegate ItemUI __Gen_Hotfix_Delegate17(XLua.LuaTable p0);
    
    [HotfixDelegate]
    public delegate ItemUIContainer.FilterType __Gen_Hotfix_Delegate18(XLua.LuaTable p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate19(XLua.LuaTable p0, ItemUIContainer.FilterType p1);
    
    [HotfixDelegate]
    public delegate UIExGrid __Gen_Hotfix_Delegate20(XLua.LuaTable p0);
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate21(XLua.LuaTable p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate22(XLua.LuaTable p0, UIExGrid.Arrangement p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate23(XLua.LuaTable p0, float p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate24(XLua.LuaTable p0, bool p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate25(XLua.LuaTable p0, int p1, object p2);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate26(XLua.LuaTable p0, int p1, object p2, bool p3);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate27(XLua.LuaTable p0, ItemActionType p1, ItemActionType p2, ItemActionType p3);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate28(XLua.LuaTable p0, ItemActionType p1, ItemActionType p2, ItemActionType p3, ItemActionType p4);
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate29(XLua.LuaTable p0, object p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate30(XLua.LuaTable p0, object p1, int p2, int p3);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate31(XLua.LuaTable p0, object p1, ItemUIContainer.FilterType p2);
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate32(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate33(object p0, bool p1);
    
    [HotfixDelegate]
    public delegate int __Gen_Hotfix_Delegate34(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate35(object p0, object p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate36(object p0, object p1, object p2, object p3);
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate37(ObjectType p0, int p1);
    
    [HotfixDelegate]
    public delegate System.Collections.IEnumerator __Gen_Hotfix_Delegate38(object p0, bool p1);
    
    [HotfixDelegate]
    public delegate System.Collections.IEnumerator __Gen_Hotfix_Delegate39(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<bool> __Gen_Hotfix_Delegate40(object p0);
    
    [HotfixDelegate]
    public delegate long __Gen_Hotfix_Delegate41(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate42(object p0, long p1);
    
    [HotfixDelegate]
    public delegate uint __Gen_Hotfix_Delegate43(object p0);
    
    [HotfixDelegate]
    public delegate System.DateTime __Gen_Hotfix_Delegate44(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate45(object p0, System.DateTime p1);
    
    [HotfixDelegate]
    public delegate SceneType __Gen_Hotfix_Delegate46(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate47(object p0, int p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate48(object p0, object p1, object p2);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate49(object p0, object p1, int p2, int p3, int p4);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate50(object p0, object p1, float p2, float p3, int p4, float p5);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate51(object p0, object p1, int p2, int p3, int p4, float p5);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate52(object p0, int p1, int p2, int p3, int p4, int p5, int p6);
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate53(object p0, object p1, object p2, int p3);
    
    [HotfixDelegate]
    public delegate GameStage.Sector __Gen_Hotfix_Delegate54(object p0, int p1, int p2);
    
    [HotfixDelegate]
    public delegate GameStage.Sector __Gen_Hotfix_Delegate55(object p0, UnityEngine.Vector3 p1);
    
    [HotfixDelegate]
    public delegate UnityEngine.Vector3 __Gen_Hotfix_Delegate56(object p0, object p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate57(object p0, object p1, out int p2, out int p3);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate58(object p0, float p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate59(object p0, object p1, float p2, int p3, int p4);
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate60(object p0, object p1);
    
    [HotfixDelegate]
    public delegate InteractiveObject __Gen_Hotfix_Delegate61(object p0, ObjectType p1, int p2);
    
    [HotfixDelegate]
    public delegate MainPlayer __Gen_Hotfix_Delegate62(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<string> __Gen_Hotfix_Delegate63(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate64(object p0, object p1, int p2);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate65(object p0, object p1, int p2, object p3);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate66(object p0, EquipSlot p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate67(object p0, TaskDataType p1, TaskType p2);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate68(object p0, ObjectType p1, int p2);
    
    [HotfixDelegate]
    public delegate System.Collections.IEnumerator __Gen_Hotfix_Delegate69(object p0, float p1, object p2);
    
    [HotfixDelegate]
    public delegate float __Gen_Hotfix_Delegate70(object p0);
    
    [HotfixDelegate]
    public delegate string __Gen_Hotfix_Delegate71(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.IEnumerator __Gen_Hotfix_Delegate72(object p0, object p1, object p2);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.Dictionary<string, VersionAsset> __Gen_Hotfix_Delegate73(object p0, object p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<VersionAsset> __Gen_Hotfix_Delegate74(object p0, object p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.Dictionary<string, VersionAsset> __Gen_Hotfix_Delegate75(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.IEnumerator __Gen_Hotfix_Delegate76(object p0, UpdateAssetStage.EventType p1);
    
    [HotfixDelegate]
    public delegate string __Gen_Hotfix_Delegate77(object p0, object p1, bool p2);
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate78(object p0, object p1, object p2);
    
    [HotfixDelegate]
    public delegate UnityEngine.Texture __Gen_Hotfix_Delegate79(AlertAreaType p0);
    
    [HotfixDelegate]
    public delegate UIAtlas __Gen_Hotfix_Delegate80();
    
    [HotfixDelegate]
    public delegate UnityEngine.Vector3[] __Gen_Hotfix_Delegate81(UnityEngine.Vector3 p0, UnityEngine.Vector3 p1, float p2);
    
    [HotfixDelegate]
    public delegate UnityEngine.Vector3[] __Gen_Hotfix_Delegate82(object p0);
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate83(UnityEngine.Vector3 p0, UnityEngine.Vector3 p1);
    
    [HotfixDelegate]
    public delegate PlayerBase __Gen_Hotfix_Delegate84(object p0, int p1);
    
    [HotfixDelegate]
    public delegate OtherPlayer __Gen_Hotfix_Delegate85(object p0, int p1);
    
    [HotfixDelegate]
    public delegate OtherEntourage __Gen_Hotfix_Delegate86(object p0, int p1);
    
    [HotfixDelegate]
    public delegate NPC __Gen_Hotfix_Delegate87(object p0, int p1);
    
    [HotfixDelegate]
    public delegate Monster __Gen_Hotfix_Delegate88(object p0, int p1);
    
    [HotfixDelegate]
    public delegate EntourageBase __Gen_Hotfix_Delegate89(object p0, int p1);
    
    [HotfixDelegate]
    public delegate DropItem __Gen_Hotfix_Delegate90(object p0, int p1);
    
    [HotfixDelegate]
    public delegate Trap __Gen_Hotfix_Delegate91(object p0, int p1);
    
    [HotfixDelegate]
    public delegate SceneItem __Gen_Hotfix_Delegate92(object p0, int p1);
    
    [HotfixDelegate]
    public delegate InteractiveObject __Gen_Hotfix_Delegate93(object p0, int p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<NPC> __Gen_Hotfix_Delegate94(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<FlyPoint> __Gen_Hotfix_Delegate95(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<OtherPlayer> __Gen_Hotfix_Delegate96(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<OtherEntourage> __Gen_Hotfix_Delegate97(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<DropItem> __Gen_Hotfix_Delegate98(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<SceneItem> __Gen_Hotfix_Delegate99(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<Model> __Gen_Hotfix_Delegate100(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<Trap> __Gen_Hotfix_Delegate101(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<Monster> __Gen_Hotfix_Delegate102(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<SmartActor> __Gen_Hotfix_Delegate103(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<NPC> __Gen_Hotfix_Delegate104(object p0, object p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<FlyPoint> __Gen_Hotfix_Delegate105(object p0, object p1);
    
    [HotfixDelegate]
    public delegate SmartActor __Gen_Hotfix_Delegate106(object p0, int p1, UnityEngine.Vector3 p2);
    
    [HotfixDelegate]
    public delegate Monster __Gen_Hotfix_Delegate107(object p0, object p1, ref float p2);
    
    [HotfixDelegate]
    public delegate Monster __Gen_Hotfix_Delegate108(object p0, object p1);
    
    [HotfixDelegate]
    public delegate OtherPlayer __Gen_Hotfix_Delegate109(object p0, object p1, RelationType p2, ref float p3);
    
    [HotfixDelegate]
    public delegate OtherEntourage __Gen_Hotfix_Delegate110(object p0, object p1, RelationType p2, ref float p3);
    
    [HotfixDelegate]
    public delegate SmartActor __Gen_Hotfix_Delegate111(object p0, object p1, RelationType p2, ref float p3);
    
    [HotfixDelegate]
    public delegate NPC __Gen_Hotfix_Delegate112(object p0, object p1, NPCType p2);
    
    [HotfixDelegate]
    public delegate float __Gen_Hotfix_Delegate113(object p0, object p1, NPCType p2);
    
    [HotfixDelegate]
    public delegate NPC __Gen_Hotfix_Delegate114(object p0, object p1, int p2);
    
    [HotfixDelegate]
    public delegate SceneItem __Gen_Hotfix_Delegate115(object p0, object p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<DropItemInfo> __Gen_Hotfix_Delegate116(object p0);
    
    [HotfixDelegate]
    public delegate DropItemInfo __Gen_Hotfix_Delegate117(object p0, object p1);
    
    [HotfixDelegate]
    public delegate UnityEngine.Vector3 __Gen_Hotfix_Delegate118(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate119(object p0, UnityEngine.Vector3 p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<PostionSlot> __Gen_Hotfix_Delegate120(object p0);
    
    [HotfixDelegate]
    public delegate PostionSlot __Gen_Hotfix_Delegate121(object p0);
    
    [HotfixDelegate]
    public delegate UnityEngine.Transform __Gen_Hotfix_Delegate122(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate123(object p0, UnityEngine.Color p1, bool p2, float p3);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate124(object p0, float p1, float p2, float p3);
    
    [HotfixDelegate]
    public delegate UnityEngine.Texture2D[] __Gen_Hotfix_Delegate125(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate126(object p0, bool p1, float p2);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate127(object p0, bool p1, UnityEngine.Vector3 p2);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate128(object p0, float p1, bool p2);
    
    [HotfixDelegate]
    public delegate ActorAnimFSM __Gen_Hotfix_Delegate129(object p0);
    
    [HotfixDelegate]
    public delegate ActorMoveFSM __Gen_Hotfix_Delegate130(object p0);
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate131(object p0, object p1, int p2);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate132(object p0, UnityEngine.Vector3 p1, float p2, bool p3);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate133(object p0, object p1, float p2, bool p3);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate134(object p0, object p1, float p2);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate135(object p0, object p1, object p2, bool p3);
    
    [HotfixDelegate]
    public delegate System.Collections.IEnumerator __Gen_Hotfix_Delegate136(object p0, int p1, float p2);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate137(object p0, object p1, object p2, float p3);
    
    [HotfixDelegate]
    public delegate UnityEngine.AnimationState __Gen_Hotfix_Delegate138(object p0, object p1, object p2, bool p3);
    
    [HotfixDelegate]
    public delegate UnityEngine.AnimationState __Gen_Hotfix_Delegate139(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate140(object p0, bool p1, float p2, float p3);
    
    [HotfixDelegate]
    public delegate FDictionary __Gen_Hotfix_Delegate141(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.Dictionary<EquipSlot, EquipmentInfo> __Gen_Hotfix_Delegate142(object p0);
    
    [HotfixDelegate]
    public delegate int __Gen_Hotfix_Delegate143(object p0, object p1);
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate144(object p0, EquipSlot p1, object p2);
    
    [HotfixDelegate]
    public delegate ulong __Gen_Hotfix_Delegate145(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate146(object p0, object p1, int p2, int p3);
    
    [HotfixDelegate]
    public delegate BuffInfo __Gen_Hotfix_Delegate147(object p0, int p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate148(object p0, object p1, bool p2);
    
    [HotfixDelegate]
    public delegate UnityEngine.Vector3 __Gen_Hotfix_Delegate149(UnityEngine.Vector3 p0, UnityEngine.Vector3 p1);
    
    [HotfixDelegate]
    public delegate UnityEngine.Vector3 __Gen_Hotfix_Delegate150(UnityEngine.Vector3 p0, float p1, float p2);
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate151(UnityEngine.Vector3 p0, float p1, float p2);
    
    [HotfixDelegate]
    public delegate UnityEngine.Vector3 __Gen_Hotfix_Delegate152(UnityEngine.Vector3 p0, bool p1);
    
    [HotfixDelegate]
    public delegate UnityEngine.Vector3 __Gen_Hotfix_Delegate153(UnityEngine.Vector2 p0, bool p1);
    
    [HotfixDelegate]
    public delegate UnityEngine.Vector3 __Gen_Hotfix_Delegate154(UnityEngine.Vector3 p0);
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate155(object p0, UnityEngine.Vector3 p1);
    
    [HotfixDelegate]
    public delegate UnityEngine.Vector3 __Gen_Hotfix_Delegate156(UnityEngine.Vector2 p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate157(object p0, UnityEngine.Vector3 p1, bool p2);
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate158(object p0, out UnityEngine.Bounds p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate159(object p0, UnityEngine.Color p1);
    
    [HotfixDelegate]
    public delegate ActorInfo __Gen_Hotfix_Delegate160(object p0);
    
    [HotfixDelegate]
    public delegate UnityEngine.Vector3 __Gen_Hotfix_Delegate161(UnityEngine.Vector3 p0, UnityEngine.Vector3 p1, float p2, float p3);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate162(object p0, int p1, bool p2);
    
    [HotfixDelegate]
    public delegate HeadTextCtrl __Gen_Hotfix_Delegate163(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate164(object p0, bool p1, object p2);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate165(object p0, ActorPropertyTag p1, long p2, bool p3);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate166(object p0, ActorBaseTag p1, ulong p2, bool p3);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate167(object p0, UnityEngine.Vector3 p1, float p2, object p3);
    
    [HotfixDelegate]
    public delegate ActorAnimFSM.EventType __Gen_Hotfix_Delegate168(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate169(object p0, ActorAnimFSM.EventType p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate170(object p0, float p1, float p2, object p3);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate171(object p0, float p1, float p2);
    
    [HotfixDelegate]
    public delegate float __Gen_Hotfix_Delegate172(object p0, object p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate173(object p0, object p1, float p2, UnityEngine.WrapMode p3);
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate174(object p0, bool p1, bool p2);
    
    [HotfixDelegate]
    public delegate UnityEngine.GameObject[] __Gen_Hotfix_Delegate175(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate176(object p0, EquipSlot p1, object p2);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate177(object p0, object p1, EquipSlot p2, object p3, object p4);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate178(object p0, EquipSlot p1, object p2, object p3);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate179(object p0, object p1, UnityEngine.Color p2, object p3);
    
    [HotfixDelegate]
    public delegate MonsterInfo __Gen_Hotfix_Delegate180(object p0);
    
    [HotfixDelegate]
    public delegate Monster __Gen_Hotfix_Delegate181(object p0);
    
    [HotfixDelegate]
    public delegate AssetMng.DownloadID __Gen_Hotfix_Delegate182(object p0, object p1, object p2);
    
    [HotfixDelegate]
    public delegate System.Collections.IEnumerator __Gen_Hotfix_Delegate183(object p0, float p1, float p2, float p3);
    
    [HotfixDelegate]
    public delegate MonsterData __Gen_Hotfix_Delegate184(object p0);
    
    [HotfixDelegate]
    public delegate MonsterRef __Gen_Hotfix_Delegate185(object p0);
    
    [HotfixDelegate]
    public delegate UnityEngine.Color __Gen_Hotfix_Delegate186(object p0);
    
    [HotfixDelegate]
    public delegate float __Gen_Hotfix_Delegate187(object p0, PreviewConfigType p1);
    
    [HotfixDelegate]
    public delegate UnityEngine.Vector3 __Gen_Hotfix_Delegate188(object p0, PreviewConfigType p1);
    
    [HotfixDelegate]
    public delegate MobRankLevel __Gen_Hotfix_Delegate189(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<int> __Gen_Hotfix_Delegate190(object p0);
    
    [HotfixDelegate]
    public delegate TouchType __Gen_Hotfix_Delegate191(object p0);
    
    [HotfixDelegate]
    public delegate SceneFunctionType __Gen_Hotfix_Delegate192(object p0);
    
    [HotfixDelegate]
    public delegate SceneItem __Gen_Hotfix_Delegate193(object p0);
    
    [HotfixDelegate]
    public delegate SceneItemDisRef __Gen_Hotfix_Delegate194(object p0);
    
    [HotfixDelegate]
    public delegate SceneItemRef __Gen_Hotfix_Delegate195(object p0);
    
    [HotfixDelegate]
    public delegate BubbleRef __Gen_Hotfix_Delegate196(object p0);
    
    [HotfixDelegate]
    public delegate ConnectType __Gen_Hotfix_Delegate197(object p0);
    
    [HotfixDelegate]
    public delegate TaskStateType __Gen_Hotfix_Delegate198(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<SceneItemEffect> __Gen_Hotfix_Delegate199(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<uint> __Gen_Hotfix_Delegate200(object p0);
    
    [HotfixDelegate]
    public delegate DropItem __Gen_Hotfix_Delegate201(object p0);
    
    [HotfixDelegate]
    public delegate EquipmentRef __Gen_Hotfix_Delegate202(object p0);
    
    [HotfixDelegate]
    public delegate UnityEngine.Vector2 __Gen_Hotfix_Delegate203(object p0);
    
    [HotfixDelegate]
    public delegate EquipmentFamily __Gen_Hotfix_Delegate204(object p0);
    
    [HotfixDelegate]
    public delegate Trap __Gen_Hotfix_Delegate205(object p0);
    
    [HotfixDelegate]
    public delegate TrapRef __Gen_Hotfix_Delegate206(object p0);
    
    [HotfixDelegate]
    public delegate FlyPointRef __Gen_Hotfix_Delegate207(object p0);
    
    [HotfixDelegate]
    public delegate FlyPoint __Gen_Hotfix_Delegate208(object p0);
    
    [HotfixDelegate]
    public delegate MercenaryInfo __Gen_Hotfix_Delegate209(object p0);
    
    [HotfixDelegate]
    public delegate PlayerBase __Gen_Hotfix_Delegate210(object p0);
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate211(object p0, EquipSlot p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate212(object p0, bool p1, int p2);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate213(object p0, EntourageAutoFightFSM.EventType p1, EntourageAutoFightFSM.EventType p2, float p3);
    
    [HotfixDelegate]
    public delegate SmartActor __Gen_Hotfix_Delegate214(object p0, EntourageAutoFightFSM.EventType p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate215(object p0, EntourageTalkType p1);
    
    [HotfixDelegate]
    public delegate MainEntourage __Gen_Hotfix_Delegate216(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.IEnumerator __Gen_Hotfix_Delegate217(object p0, object p1);
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate218(object p0, object p1, bool p2, bool p3);
    
    [HotfixDelegate]
    public delegate MainEntourage.EventType __Gen_Hotfix_Delegate219(object p0);
    
    [HotfixDelegate]
    public delegate PoPoRef __Gen_Hotfix_Delegate220(object p0);
    
    [HotfixDelegate]
    public delegate OtherPlayer __Gen_Hotfix_Delegate221(object p0);
    
    [HotfixDelegate]
    public delegate float __Gen_Hotfix_Delegate222(object p0, UnityEngine.Vector3 p1);
    
    [HotfixDelegate]
    public delegate OtherEntourage __Gen_Hotfix_Delegate223(object p0);
    
    [HotfixDelegate]
    public delegate PlayerBaseInfo __Gen_Hotfix_Delegate224(object p0);
    
    [HotfixDelegate]
    public delegate PkMode __Gen_Hotfix_Delegate225(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate226(object p0, SystemSettingMng.RendererQuality p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate227(object p0, ActorBaseTag p1, int p2);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate228(object p0, bool p1, bool p2);
    
    [HotfixDelegate]
    public delegate PlayerBaseData __Gen_Hotfix_Delegate229(object p0);
    
    [HotfixDelegate]
    public delegate PlayerConfig __Gen_Hotfix_Delegate230(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate231(object p0, EquipSlot p1, int p2, bool p3);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<EquipmentInfo> __Gen_Hotfix_Delegate232(object p0);
    
    [HotfixDelegate]
    public delegate MountInfo __Gen_Hotfix_Delegate233(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<SkillInfo> __Gen_Hotfix_Delegate234(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate235(object p0, int p1, int p2, bool p3);
    
    [HotfixDelegate]
    public delegate PreviewPlayer __Gen_Hotfix_Delegate236(object p0, object p1);
    
    [HotfixDelegate]
    public delegate OtherPlayerInfo __Gen_Hotfix_Delegate237(object p0);
    
    [HotfixDelegate]
    public delegate OtherPlayerData __Gen_Hotfix_Delegate238(object p0);
    
    [HotfixDelegate]
    public delegate OtherPlayerListSingle __Gen_Hotfix_Delegate239(object p0, object p1, int p2);
    
    [HotfixDelegate]
    public delegate InteractiveObject __Gen_Hotfix_Delegate240(object p0);
    
    [HotfixDelegate]
    public delegate MainPlayer.AttackType __Gen_Hotfix_Delegate241(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate242(object p0, MainPlayer.AttackType p1);
    
    [HotfixDelegate]
    public delegate MainPlayerInfo __Gen_Hotfix_Delegate243(object p0);
    
    [HotfixDelegate]
    public delegate UnityEngine.Color __Gen_Hotfix_Delegate244(object p0, object p1);
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate245(object p0, int p1, int p2, bool p3);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate246(object p0, ActorBaseTag p1, int p2, bool p3);
    
    [HotfixDelegate]
    public delegate MainPlayer.EventType __Gen_Hotfix_Delegate247(object p0);
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate248(object p0, int p1, int p2, int p3);
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate249(object p0, float p1, float p2);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate250(object p0, RelationType p1, float p2);
    
    [HotfixDelegate]
    public delegate MainPlayerData __Gen_Hotfix_Delegate251(object p0);
    
    [HotfixDelegate]
    public delegate int __Gen_Hotfix_Delegate252(object p0, ActorBaseTag p1);
    
    [HotfixDelegate]
    public delegate SceneRef __Gen_Hotfix_Delegate253(object p0);
    
    [HotfixDelegate]
    public delegate SceneUiType __Gen_Hotfix_Delegate254(object p0);
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate255(object p0, UnityEngine.Vector3 p1, UnityEngine.Vector3 p2);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate256(object p0, object p1, object p2, object p3, object p4);
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate257(object p0, int p1);
    
    [HotfixDelegate]
    public delegate CreatePlayer __Gen_Hotfix_Delegate258(object p0);
    
    [HotfixDelegate]
    public delegate LoginPlayer __Gen_Hotfix_Delegate259(object p0);
    
    [HotfixDelegate]
    public delegate NPCInfo __Gen_Hotfix_Delegate260(object p0);
    
    [HotfixDelegate]
    public delegate UnityEngine.Animation __Gen_Hotfix_Delegate261(object p0);
    
    [HotfixDelegate]
    public delegate NPC __Gen_Hotfix_Delegate262(object p0);
    
    [HotfixDelegate]
    public delegate NPCTaskState __Gen_Hotfix_Delegate263(object p0);
    
    [HotfixDelegate]
    public delegate UnityEngine.Vector3 __Gen_Hotfix_Delegate264(object p0, UnityEngine.Vector3 p1);
    
    [HotfixDelegate]
    public delegate NpcData __Gen_Hotfix_Delegate265(object p0);
    
    [HotfixDelegate]
    public delegate SceneNPCRef __Gen_Hotfix_Delegate266(object p0);
    
    [HotfixDelegate]
    public delegate NPCAIRef __Gen_Hotfix_Delegate267(object p0);
    
    [HotfixDelegate]
    public delegate NPCTypeRef __Gen_Hotfix_Delegate268(object p0);
    
    [HotfixDelegate]
    public delegate ActionType __Gen_Hotfix_Delegate269(object p0);
    
    [HotfixDelegate]
    public delegate AssetPathType __Gen_Hotfix_Delegate270(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate271(object p0, object p1, object p2, object p3, object p4, object p5, object p6);
    
    [HotfixDelegate]
    public delegate PreviewNPC __Gen_Hotfix_Delegate272(object p0);
    
    [HotfixDelegate]
    public delegate string __Gen_Hotfix_Delegate273(object p0, int p1);
    
    [HotfixDelegate]
    public delegate Mount __Gen_Hotfix_Delegate274(object p0);
    
    [HotfixDelegate]
    public delegate UnityEngine.GameObject __Gen_Hotfix_Delegate275(object p0, object p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate276(object p0, bool p1, bool p2, bool p3);
    
    [HotfixDelegate]
    public delegate MountData __Gen_Hotfix_Delegate277(object p0);
    
    [HotfixDelegate]
    public delegate MountRef __Gen_Hotfix_Delegate278(object p0);
    
    [HotfixDelegate]
    public delegate RidePropertyRef __Gen_Hotfix_Delegate279(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<MountEffect> __Gen_Hotfix_Delegate280(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<ItemValue> __Gen_Hotfix_Delegate281(object p0);
    
    [HotfixDelegate]
    public delegate RecastType __Gen_Hotfix_Delegate282(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<BoneEffectRef> __Gen_Hotfix_Delegate283(object p0);
    
    [HotfixDelegate]
    public delegate EquipmentInfo __Gen_Hotfix_Delegate284(object p0);
    
    [HotfixDelegate]
    public delegate MountType __Gen_Hotfix_Delegate285(object p0);
    
    [HotfixDelegate]
    public delegate PreviewMount __Gen_Hotfix_Delegate286(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.IEnumerator __Gen_Hotfix_Delegate287(object p0, float p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate288(object p0, int p1, int p2, int p3);
    
    [HotfixDelegate]
    public delegate int __Gen_Hotfix_Delegate289(object p0, ActorPropertyTag p1, object p2);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<AttributePair> __Gen_Hotfix_Delegate290(object p0, object p1, object p2);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate291(object p0, int p1, EquipSlot p2);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<MountRef> __Gen_Hotfix_Delegate292(object p0);
    
    [HotfixDelegate]
    public delegate MountInfo __Gen_Hotfix_Delegate293(object p0, int p1);
    
    [HotfixDelegate]
    public delegate EquipmentInfo __Gen_Hotfix_Delegate294(object p0, int p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<MountRef> __Gen_Hotfix_Delegate295(object p0, int p1);
    
    [HotfixDelegate]
    public delegate int __Gen_Hotfix_Delegate296(object p0, object p1, object p2);
    
    [HotfixDelegate]
    public delegate NewMountMng __Gen_Hotfix_Delegate297();
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate298(object p0, MountType p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate299(object p0, ChangeMount p1, int p2, MountReqRideType p3);
    
    [HotfixDelegate]
    public delegate UnityEngine.GameObject __Gen_Hotfix_Delegate300(object p0);
    
    [HotfixDelegate]
    public delegate UnityEngine.Vector3 __Gen_Hotfix_Delegate301(object p0, FlagType p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate302(object p0, NPCTaskState p1);
    
    [HotfixDelegate]
    public delegate HeadTextPrefab __Gen_Hotfix_Delegate303(object p0, FlagType p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate304(object p0, HeadTextCtrl.LeaderTagType p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate305(object p0, float p1, object p2);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate306(object p0, object p1, float p2, float p3, UnityEngine.Vector3 p4, object p5);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate307(object p0, object p1, float p2, UnityEngine.Vector3 p3, UnityEngine.Quaternion p4);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate308(object p0, object p1, float p2, UnityEngine.Vector3 p3, UnityEngine.Quaternion p4, object p5);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate309(object p0, object p1, float p2, UnityEngine.Vector3 p3, object p4);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate310(object p0, object p1, object p2, object p3, float p4);
    
    [HotfixDelegate]
    public delegate SoundMng __Gen_Hotfix_Delegate311();
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate312(object p0, SystemSettingType p1, bool p2, float p3);
    
    [HotfixDelegate]
    public delegate string __Gen_Hotfix_Delegate313(SystemSound p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate314(object p0, object p1, float p2, bool p3, bool p4, int p5);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate315(object p0, SystemSound p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate316(object p0, object p1, float p2, bool p3, bool p4);
    
    [HotfixDelegate]
    public delegate float __Gen_Hotfix_Delegate317(object p0, object p1, float p2);
    
    [HotfixDelegate]
    public delegate AudioAutoPlayLoader __Gen_Hotfix_Delegate318(object p0, object p1, float p2, bool p3, bool p4, int p5);
    
    [HotfixDelegate]
    public delegate string __Gen_Hotfix_Delegate319(object p0, bool p1, bool p2);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate320(object p0, object p1, ref string p2);
    
    [HotfixDelegate]
    public delegate UnityEngine.Object __Gen_Hotfix_Delegate321(object p0, object p1);
    
    [HotfixDelegate]
    public delegate UnityEngine.AssetBundle __Gen_Hotfix_Delegate322(object p0, object p1);
    
    [HotfixDelegate]
    public delegate PreviewEntourage __Gen_Hotfix_Delegate323(object p0);
    
    [HotfixDelegate]
    public delegate PreviewEquipment __Gen_Hotfix_Delegate324(object p0);
    
    [HotfixDelegate]
    public delegate PreviewManager __Gen_Hotfix_Delegate325();
    
    [HotfixDelegate]
    public delegate UnityEngine.Vector2 __Gen_Hotfix_Delegate326(object p0, UnityEngine.Vector2 p1);
    
    [HotfixDelegate]
    public delegate UnityEngine.GameObject __Gen_Hotfix_Delegate327(object p0, UnityEngine.Vector3 p1, UnityEngine.Vector3 p2);
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate328(object p0, object p1, object p2, object p3, ActorAnimFSM.EventType p4);
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate329(object p0, object p1, object p2, bool p3);
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate330(object p0, object p1, object p2, bool p3, object p4);
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate331(object p0, object p1, object p2, ActorAnimFSM.EventType p3);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<st.net.NetBase.lost_item_info> __Gen_Hotfix_Delegate332(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<st.net.NetBase.entourage_info_list> __Gen_Hotfix_Delegate333(object p0);
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate334(object p0, int p1, object p2);
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate335(object p0, int p1, object p2, PreviewConfigType p3);
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate336(object p0, int p1, object p2, PreviewConfigType p3, object p4);
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate337(object p0, object p1, object p2, PreviewConfigType p3);
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate338(object p0, int p1, object p2, object p3);
    
    [HotfixDelegate]
    public delegate PreviewMob __Gen_Hotfix_Delegate339(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate340(object p0, int p1, NGUI3DType p2, object p3);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate341(object p0, int p1, NGUI3DType p2);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate342(object p0, SubGUIType p1);
    
    [HotfixDelegate]
    public delegate SubGUIType __Gen_Hotfix_Delegate343(object p0);
    
    [HotfixDelegate]
    public delegate GUIZLayer __Gen_Hotfix_Delegate344(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate345(object p0, GUIZLayer p1);
    
    [HotfixDelegate]
    public delegate GUIBase __Gen_Hotfix_Delegate346(object p0);
    
    [HotfixDelegate]
    public delegate GUIBase __Gen_Hotfix_Delegate347(object p0, GUIType p1);
    
    [HotfixDelegate]
    public delegate SubGUIType __Gen_Hotfix_Delegate348(object p0, SubGUIType p1);
    
    [HotfixDelegate]
    public delegate VIPDataInfo __Gen_Hotfix_Delegate349(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate350(object p0, int p1, UnityEngine.Vector3 p2);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate351(object p0, TaskType p1);
    
    [HotfixDelegate]
    public delegate int __Gen_Hotfix_Delegate352(object p0, TaskType p1, int p2);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate353(object p0, UnityEngine.Vector2 p1);
    
    [HotfixDelegate]
    public delegate TaskInfo __Gen_Hotfix_Delegate354(object p0);
    
    [HotfixDelegate]
    public delegate TaskListSingle __Gen_Hotfix_Delegate355(object p0, object p1, int p2);
    
    [HotfixDelegate]
    public delegate TeamMemberListSingle __Gen_Hotfix_Delegate356(object p0, object p1, int p2);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate357(object p0, PkMode p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate358(object p0, UnityEngine.Vector3 p1, float p2);
    
    [HotfixDelegate]
    public delegate string __Gen_Hotfix_Delegate359(object p0, object p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate360(object p0, uint p1);
    
    [HotfixDelegate]
    public delegate PlayerBaseInfo __Gen_Hotfix_Delegate361(object p0, uint p1);
    
    [HotfixDelegate]
    public delegate LoginMng.ConnectServerType __Gen_Hotfix_Delegate362(object p0);
    
    [HotfixDelegate]
    public delegate int __Gen_Hotfix_Delegate363(object p0, int p1);
    
    [HotfixDelegate]
    public delegate LoginMng __Gen_Hotfix_Delegate364();
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate365(object p0, int p1, object p2);
    
    [HotfixDelegate]
    public delegate string __Gen_Hotfix_Delegate366(object p0, object p1, object p2);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate367(object p0, LoginStage.EventType p1);
    
    [HotfixDelegate]
    public delegate LoginStage.EventType __Gen_Hotfix_Delegate368(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.IEnumerator __Gen_Hotfix_Delegate369(object p0, int p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate370(object p0, LoginMng.LoginPassType p1);
    
    [HotfixDelegate]
    public delegate ServerPageItem __Gen_Hotfix_Delegate371(object p0, object p1);
    
    [HotfixDelegate]
    public delegate ServerChoiceItem __Gen_Hotfix_Delegate372(object p0, object p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.Dictionary<int, GuildData> __Gen_Hotfix_Delegate373(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<GuildMemberData> __Gen_Hotfix_Delegate374(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.Dictionary<int, EquipmentInfo> __Gen_Hotfix_Delegate375(object p0);
    
    [HotfixDelegate]
    public delegate GuildInfo __Gen_Hotfix_Delegate376(object p0);
    
    [HotfixDelegate]
    public delegate GuildMng __Gen_Hotfix_Delegate377(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate378(object p0, object p1, object p2, int p3);
    
    [HotfixDelegate]
    public delegate GuildItem __Gen_Hotfix_Delegate379(object p0);
    
    [HotfixDelegate]
    public delegate GuildRef __Gen_Hotfix_Delegate380(object p0);
    
    [HotfixDelegate]
    public delegate GuildMemPosition __Gen_Hotfix_Delegate381(object p0);
    
    [HotfixDelegate]
    public delegate GuildFightMng __Gen_Hotfix_Delegate382(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate383(object p0, int p1, object p2, int p3);
    
    [HotfixDelegate]
    public delegate GuildProtectRankUI __Gen_Hotfix_Delegate384(object p0, object p1);
    
    [HotfixDelegate]
    public delegate RankItemUI __Gen_Hotfix_Delegate385(object p0);
    
    [HotfixDelegate]
    public delegate ApplyListItemUI __Gen_Hotfix_Delegate386(object p0);
    
    [HotfixDelegate]
    public delegate GuildSkillInfo __Gen_Hotfix_Delegate387(object p0);
    
    [HotfixDelegate]
    public delegate GuildSkillMng __Gen_Hotfix_Delegate388(object p0);
    
    [HotfixDelegate]
    public delegate GuildSkillRef __Gen_Hotfix_Delegate389(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<AttributePair> __Gen_Hotfix_Delegate390(object p0);
    
    [HotfixDelegate]
    public delegate GuildShopRef __Gen_Hotfix_Delegate391(object p0);
    
    [HotfixDelegate]
    public delegate GuildShopMng __Gen_Hotfix_Delegate392(object p0);
    
    [HotfixDelegate]
    public delegate InventoryMng __Gen_Hotfix_Delegate393(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate394(object p0, ItemShowUIType p1);
    
    [HotfixDelegate]
    public delegate EquipmentInfo __Gen_Hotfix_Delegate395(object p0, EquipSlot p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate396(object p0, EquipmentBelongTo p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate397(object p0, object p1, EquipmentBelongTo p2);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate398(object p0, object p1, EquipmentInfo.EmptyType p2, EquipmentBelongTo p3);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.Dictionary<int, st.net.NetBase.pos_des> __Gen_Hotfix_Delegate399(object p0);
    
    [HotfixDelegate]
    public delegate EquipSlot __Gen_Hotfix_Delegate400(object p0);
    
    [HotfixDelegate]
    public delegate ShowType __Gen_Hotfix_Delegate401(object p0);
    
    [HotfixDelegate]
    public delegate EquipmentBelongTo __Gen_Hotfix_Delegate402(object p0);
    
    [HotfixDelegate]
    public delegate GoodsRecycleType __Gen_Hotfix_Delegate403(object p0);
    
    [HotfixDelegate]
    public delegate GoodsAttentionType __Gen_Hotfix_Delegate404(object p0);
    
    [HotfixDelegate]
    public delegate EquipmentBindType __Gen_Hotfix_Delegate405(object p0);
    
    [HotfixDelegate]
    public delegate int __Gen_Hotfix_Delegate406(object p0, ActorPropertyTag p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<AttributePair> __Gen_Hotfix_Delegate407(object p0, int p1);
    
    [HotfixDelegate]
    public delegate CDValue __Gen_Hotfix_Delegate408(object p0);
    
    [HotfixDelegate]
    public delegate EquipActionType __Gen_Hotfix_Delegate409(object p0);
    
    [HotfixDelegate]
    public delegate string __Gen_Hotfix_Delegate410(int p0);
    
    [HotfixDelegate]
    public delegate UnityEngine.Color __Gen_Hotfix_Delegate411(int p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate412(object p0, int p1, EquipmentBelongTo p2);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate413(object p0, int p1, int p2, EquipmentBelongTo p3);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate414(object p0, object p1, int p2, EquipmentBelongTo p3);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate415(object p0, int p1, int p2, int p3, EquipmentBelongTo p4);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate416(object p0, int p1, int p2, bool p3, EquipmentBelongTo p4);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate417(object p0, int p1, EquipmentInfo.EmptyType p2, EquipmentBelongTo p3);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate418(object p0, LockUpdateType p1);
    
    [HotfixDelegate]
    public delegate BlendRef __Gen_Hotfix_Delegate419(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate420(object p0, object p1, object p2, SubGUIType p3);
    
    [HotfixDelegate]
    public delegate DecomposeItemUI __Gen_Hotfix_Delegate421(object p0, object p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<StrengthenSuitRef> __Gen_Hotfix_Delegate422(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate423(object p0, ActorPropertyTag p1, int p2, bool p3);
    
    [HotfixDelegate]
    public delegate StrengthenSuitRef __Gen_Hotfix_Delegate424(object p0, int p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate425(object p0, ItemActionType p1, ItemActionType p2, ItemActionType p3);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate426(object p0, ItemActionType p1, ItemActionType p2, ItemActionType p3, ItemActionType p4);
    
    [HotfixDelegate]
    public delegate ItemUI __Gen_Hotfix_Delegate427(object p0, int p1, object p2);
    
    [HotfixDelegate]
    public delegate ItemUI __Gen_Hotfix_Delegate428(object p0, UnityEngine.Vector3 p1, UnityEngine.Vector3 p2, bool p3);
    
    [HotfixDelegate]
    public delegate EquipmentInfo __Gen_Hotfix_Delegate429(object p0, object p1);
    
    [HotfixDelegate]
    public delegate System.Text.StringBuilder __Gen_Hotfix_Delegate430(object p0, int p1);
    
    [HotfixDelegate]
    public delegate string __Gen_Hotfix_Delegate431(object p0, ItemActionType p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate432(object p0, ItemActionType p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate433(object p0, ActorPropertyTag p1, int p2, object p3);
    
    [HotfixDelegate]
    public delegate EquipmentTrainingMng __Gen_Hotfix_Delegate434();
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate435(object p0, int p1, object p2, bool p3);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate436(object p0, int p1, int p2, object p3, bool p4);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate437(object p0, object p1, object p2, out bool p3, out bool p4);
    
    [HotfixDelegate]
    public delegate BossRef __Gen_Hotfix_Delegate438(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<BossChallengeData> __Gen_Hotfix_Delegate439(object p0);
    
    [HotfixDelegate]
    public delegate BossChallengeMng __Gen_Hotfix_Delegate440();
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate441(BossChallengeWnd.ToggleType p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate442(object p0, BossChallengeWnd.ToggleType p1);
    
    [HotfixDelegate]
    public delegate BossListSingle __Gen_Hotfix_Delegate443(object p0, object p1, int p2);
    
    [HotfixDelegate]
    public delegate DailyMustDoMng __Gen_Hotfix_Delegate444();
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<DailyMustDoInfo> __Gen_Hotfix_Delegate445(object p0, MustDoType p1);
    
    [HotfixDelegate]
    public delegate LivelyRef __Gen_Hotfix_Delegate446(object p0);
    
    [HotfixDelegate]
    public delegate DailyMustDoInfo.RewardState __Gen_Hotfix_Delegate447(object p0);
    
    [HotfixDelegate]
    public delegate MustDoType __Gen_Hotfix_Delegate448(object p0);
    
    [HotfixDelegate]
    public delegate DailyMustDoItemUI __Gen_Hotfix_Delegate449(object p0, object p1);
    
    [HotfixDelegate]
    public delegate TaskMng __Gen_Hotfix_Delegate450(object p0);
    
    [HotfixDelegate]
    public delegate TaskTeamWnd.ToggleType __Gen_Hotfix_Delegate451(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate452(object p0, TaskTeamWnd.ToggleType p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.Dictionary<int, TaskInfo> __Gen_Hotfix_Delegate453(object p0, TaskType p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<TaskInfo> __Gen_Hotfix_Delegate454(object p0, TaskType p1);
    
    [HotfixDelegate]
    public delegate TaskInfo __Gen_Hotfix_Delegate455(object p0, int p1);
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate456(object p0, int p1, int p2);
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate457(object p0, int p1, TaskType p2);
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate458(object p0, int p1, int p2, TaskType p3);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<TaskInfo> __Gen_Hotfix_Delegate459(object p0, int p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.Dictionary<int, TaskInfo> __Gen_Hotfix_Delegate460(object p0, int p1);
    
    [HotfixDelegate]
    public delegate TaskSinglePath __Gen_Hotfix_Delegate461(object p0);
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate462(object p0, int p1, int p2, ref System.Collections.Generic.List<int> p3, ref System.Collections.Generic.List<int> p4);
    
    [HotfixDelegate]
    public delegate TaskStepRef __Gen_Hotfix_Delegate463(object p0);
    
    [HotfixDelegate]
    public delegate TaskType __Gen_Hotfix_Delegate464(object p0);
    
    [HotfixDelegate]
    public delegate GUIType __Gen_Hotfix_Delegate465(object p0);
    
    [HotfixDelegate]
    public delegate GuideType __Gen_Hotfix_Delegate466(object p0);
    
    [HotfixDelegate]
    public delegate TaskContentType __Gen_Hotfix_Delegate467(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<TaskConditionRef> __Gen_Hotfix_Delegate468(object p0);
    
    [HotfixDelegate]
    public delegate CampType __Gen_Hotfix_Delegate469(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate470(object p0, int p1, int p2, TaskStateType p3);
    
    [HotfixDelegate]
    public delegate NewMallMng __Gen_Hotfix_Delegate471(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate472(object p0, MallItemType p1);
    
    [HotfixDelegate]
    public delegate MallRef __Gen_Hotfix_Delegate473(object p0);
    
    [HotfixDelegate]
    public delegate BuyMng __Gen_Hotfix_Delegate474(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate475(object p0, object p1, BuyType p2, int p3);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate476(object p0, object p1, GUIType p2, BuyType p3, int p4);
    
    [HotfixDelegate]
    public delegate ShopMng __Gen_Hotfix_Delegate477(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate478(object p0, ShopItemType p1);
    
    [HotfixDelegate]
    public delegate ShopRef __Gen_Hotfix_Delegate479(object p0);
    
    [HotfixDelegate]
    public delegate SystemSettingMng __Gen_Hotfix_Delegate480();
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate481();
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate482(bool p0);
    
    [HotfixDelegate]
    public delegate SystemSettingMng.RendererQuality __Gen_Hotfix_Delegate483(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate484(object p0, object p1, UnityEngine.Vector2 p2);
    
    [HotfixDelegate]
    public delegate LittleHelperMng __Gen_Hotfix_Delegate485(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate486(object p0, LittleHelpType p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate487(object p0, ChatInfo.Type p1);
    
    [HotfixDelegate]
    public delegate MessageInstanceMng __Gen_Hotfix_Delegate488();
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<MessageST> __Gen_Hotfix_Delegate489(object p0);
    
    [HotfixDelegate]
    public delegate int __Gen_Hotfix_Delegate490(object p0, int p1, object p2, object p3);
    
    [HotfixDelegate]
    public delegate int __Gen_Hotfix_Delegate491(object p0, int p1, object p2);
    
    [HotfixDelegate]
    public delegate int __Gen_Hotfix_Delegate492(object p0, int p1, object p2, object p3, object p4);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<ErrorMsgStr> __Gen_Hotfix_Delegate493(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate494(object p0, int p1, int p2, object p3);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate495(object p0, object p1, object p2, bool p3, bool p4);
    
    [HotfixDelegate]
    public delegate ServerMSGRef __Gen_Hotfix_Delegate496(object p0);
    
    [HotfixDelegate]
    public delegate MsgRefData __Gen_Hotfix_Delegate497(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate498(object p0, GUIType p1);
    
    [HotfixDelegate]
    public delegate object[] __Gen_Hotfix_Delegate499(object p0, object p1);
    
    [HotfixDelegate]
    public delegate System.Collections.IEnumerator __Gen_Hotfix_Delegate500(object p0, object p1, bool p2);
    
    [HotfixDelegate]
    public delegate MagicWeaponInfo __Gen_Hotfix_Delegate501(object p0);
    
    [HotfixDelegate]
    public delegate MagicWeaponMng __Gen_Hotfix_Delegate502(object p0);
    
    [HotfixDelegate]
    public delegate MagicWeaponRef __Gen_Hotfix_Delegate503(object p0);
    
    [HotfixDelegate]
    public delegate RefineRef __Gen_Hotfix_Delegate504(object p0);
    
    [HotfixDelegate]
    public delegate AddSoulRef __Gen_Hotfix_Delegate505(object p0);
    
    [HotfixDelegate]
    public delegate WingInfo __Gen_Hotfix_Delegate506(object p0);
    
    [HotfixDelegate]
    public delegate WingMng __Gen_Hotfix_Delegate507(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate508(object p0, WingState p1, int p2, bool p3);
    
    [HotfixDelegate]
    public delegate WingRef __Gen_Hotfix_Delegate509(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.Dictionary<int, WingRef> __Gen_Hotfix_Delegate510(object p0);
    
    [HotfixDelegate]
    public delegate TreasureHouseMng __Gen_Hotfix_Delegate511();
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate512(object p0, GetTreasureType p1);
    
    [HotfixDelegate]
    public delegate UnityEngine.GameObject __Gen_Hotfix_Delegate513(object p0, object p1, int p2, int p3, int p4);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.Dictionary<int, NewRankingInfo> __Gen_Hotfix_Delegate514(object p0);
    
    [HotfixDelegate]
    public delegate NewRankingMng __Gen_Hotfix_Delegate515();
    
    [HotfixDelegate]
    public delegate AchievementRewardState __Gen_Hotfix_Delegate516(object p0);
    
    [HotfixDelegate]
    public delegate AchievementMng __Gen_Hotfix_Delegate517(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<AchievementData> __Gen_Hotfix_Delegate518(object p0, int p1);
    
    [HotfixDelegate]
    public delegate SevenDayMng __Gen_Hotfix_Delegate519();
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.Dictionary<int, SevendDayData> __Gen_Hotfix_Delegate520(object p0);
    
    [HotfixDelegate]
    public delegate FirstChargeBonusMng __Gen_Hotfix_Delegate521();
    
    [HotfixDelegate]
    public delegate RankRewardMng __Gen_Hotfix_Delegate522();
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate523(object p0, RewardType p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.Dictionary<int, int> __Gen_Hotfix_Delegate524(object p0);
    
    [HotfixDelegate]
    public delegate EverydayRewardRef __Gen_Hotfix_Delegate525(object p0);
    
    [HotfixDelegate]
    public delegate EverydayRewardUi __Gen_Hotfix_Delegate526(object p0, object p1, int p2);
    
    [HotfixDelegate]
    public delegate RoyalTreasureMng __Gen_Hotfix_Delegate527();
    
    [HotfixDelegate]
    public delegate ActivityDataInfo __Gen_Hotfix_Delegate528(object p0, int p1);
    
    [HotfixDelegate]
    public delegate ActivityState __Gen_Hotfix_Delegate529(object p0, ActivityType p1);
    
    [HotfixDelegate]
    public delegate int __Gen_Hotfix_Delegate530(object p0, ActivityType p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate531(object p0, ActivityType p1);
    
    [HotfixDelegate]
    public delegate ActivityMng __Gen_Hotfix_Delegate532();
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate533(object p0, int p1, DartType p2);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate534(object p0, DartType p1);
    
    [HotfixDelegate]
    public delegate ActivityListRef __Gen_Hotfix_Delegate535(object p0);
    
    [HotfixDelegate]
    public delegate ActivityDataInfo __Gen_Hotfix_Delegate536(object p0);
    
    [HotfixDelegate]
    public delegate ActivityType __Gen_Hotfix_Delegate537(object p0);
    
    [HotfixDelegate]
    public delegate ActivityState __Gen_Hotfix_Delegate538(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate539(object p0, ActivityState p1);
    
    [HotfixDelegate]
    public delegate ActivityState __Gen_Hotfix_Delegate540(object p0, bool p1);
    
    [HotfixDelegate]
    public delegate ActivityState __Gen_Hotfix_Delegate541(object p0, object p1, bool p2);
    
    [HotfixDelegate]
    public delegate DuplicateMng __Gen_Hotfix_Delegate542();
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate543(object p0, SubGUIType p1, OneCopySType p2);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate544(object p0, DuplicateMng.CopysType p1, OneCopySType p2);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.Dictionary<int, CopyInItemDataInfo> __Gen_Hotfix_Delegate545(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.Dictionary<int, CopySceneTeamPlayerInfo> __Gen_Hotfix_Delegate546(object p0);
    
    [HotfixDelegate]
    public delegate DuplicateMng.CopysType __Gen_Hotfix_Delegate547(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate548(object p0, DuplicateMng.CopysType p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<OtherPlayerInfo> __Gen_Hotfix_Delegate549(object p0);
    
    [HotfixDelegate]
    public delegate OtherPlayerInfo __Gen_Hotfix_Delegate550(object p0, int p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate551(object p0, object p1, object p2, int p3, bool p4, bool p5);
    
    [HotfixDelegate]
    public delegate string __Gen_Hotfix_Delegate552(object p0, int p1, bool p2);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate553(object p0, byte p1);
    
    [HotfixDelegate]
    public delegate CopyGroupRef __Gen_Hotfix_Delegate554(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate555(object p0, uint p1, uint p2);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate556(object p0, int p1, uint p2, bool p3);
    
    [HotfixDelegate]
    public delegate TeamMenberInfo __Gen_Hotfix_Delegate557(object p0);
    
    [HotfixDelegate]
    public delegate CopyInItemDataInfo __Gen_Hotfix_Delegate558(object p0);
    
    [HotfixDelegate]
    public delegate CopySettlementDataInfo __Gen_Hotfix_Delegate559(object p0);
    
    [HotfixDelegate]
    public delegate ArenaMng __Gen_Hotfix_Delegate560();
    
    [HotfixDelegate]
    public delegate CheckPointRef __Gen_Hotfix_Delegate561(object p0);
    
    [HotfixDelegate]
    public delegate EndLessTrialsMng __Gen_Hotfix_Delegate562();
    
    [HotfixDelegate]
    public delegate EndLessTrialsDataInfo.EndLessTrialsItemData __Gen_Hotfix_Delegate563(object p0, int p1);
    
    [HotfixDelegate]
    public delegate ChapterReward __Gen_Hotfix_Delegate564(object p0);
    
    [HotfixDelegate]
    public delegate EndLessTrialsMng __Gen_Hotfix_Delegate565(object p0);
    
    [HotfixDelegate]
    public delegate ChapterReward __Gen_Hotfix_Delegate566(object p0, object p1);
    
    [HotfixDelegate]
    public delegate VipMng __Gen_Hotfix_Delegate567();
    
    [HotfixDelegate]
    public delegate VIPRef __Gen_Hotfix_Delegate568(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<RechargeRef> __Gen_Hotfix_Delegate569(object p0);
    
    [HotfixDelegate]
    public delegate RechargeMng __Gen_Hotfix_Delegate570(object p0);
    
    [HotfixDelegate]
    public delegate FunctionType __Gen_Hotfix_Delegate571(object p0);
    
    [HotfixDelegate]
    public delegate OpenNewFunctionGuideRef __Gen_Hotfix_Delegate572(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate573(object p0, FunctionType p1, bool p2, FunctionDataInfo.FunctionControlType p3);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate574(object p0, FunctionType p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate575(object p0, object p1, ModelType p2);
    
    [HotfixDelegate]
    public delegate UnityEngine.Vector3 __Gen_Hotfix_Delegate576(object p0, UnityEngine.Vector2 p1);
    
    [HotfixDelegate]
    public delegate OffLineRewardMng __Gen_Hotfix_Delegate577();
    
    [HotfixDelegate]
    public delegate OffLineRewardRef __Gen_Hotfix_Delegate578(object p0);
    
    [HotfixDelegate]
    public delegate NoviceGuideMng __Gen_Hotfix_Delegate579();
    
    [HotfixDelegate]
    public delegate UnityEngine.Vector3 __Gen_Hotfix_Delegate580(object p0, UnityEngine.Vector2 p1, int p2);
    
    [HotfixDelegate]
    public delegate TreasureTroveMng __Gen_Hotfix_Delegate581();
    
    [HotfixDelegate]
    public delegate ItemValue __Gen_Hotfix_Delegate582(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<st.net.NetBase.treasure_times_reward> __Gen_Hotfix_Delegate583(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<System.Collections.Generic.List<ItemValue>> __Gen_Hotfix_Delegate584(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<st.net.NetBase.rank_info_base> __Gen_Hotfix_Delegate585(object p0);
    
    [HotfixDelegate]
    public delegate TreasureRankItemUI __Gen_Hotfix_Delegate586(object p0, object p1);
    
    [HotfixDelegate]
    public delegate TreasureRankItemUI __Gen_Hotfix_Delegate587(object p0, object p1, UnityEngine.Color p2);
    
    [HotfixDelegate]
    public delegate TreasureSuperItemUI __Gen_Hotfix_Delegate588(object p0, object p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate589(object p0, int p1, int p2, int p3, uint p4, object p5, object p6);
    
    [HotfixDelegate]
    public delegate PetData __Gen_Hotfix_Delegate590(object p0);
    
    [HotfixDelegate]
    public delegate NewPetRef __Gen_Hotfix_Delegate591(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<st.net.NetBase.pet_property_list> __Gen_Hotfix_Delegate592(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<uint> __Gen_Hotfix_Delegate593(object p0, object p1);
    
    [HotfixDelegate]
    public delegate MercenaryInfo __Gen_Hotfix_Delegate594(object p0, int p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<TitleRef> __Gen_Hotfix_Delegate595(object p0);
    
    [HotfixDelegate]
    public delegate MercenaryMng __Gen_Hotfix_Delegate596();
    
    [HotfixDelegate]
    public delegate int __Gen_Hotfix_Delegate597(object p0, PetPropertyType p1, int p2);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate598(object p0, PetChange p1, int p2);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate599(object p0, PetChange p1, int p2, int p3);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<int> __Gen_Hotfix_Delegate600(object p0, object p1);
    
    [HotfixDelegate]
    public delegate NewPetSkillRef __Gen_Hotfix_Delegate601(object p0);
    
    [HotfixDelegate]
    public delegate BookItem __Gen_Hotfix_Delegate602(int p0, object p1, bool p2);
    
    [HotfixDelegate]
    public delegate TitleRef __Gen_Hotfix_Delegate603(object p0);
    
    [HotfixDelegate]
    public delegate PetHonor __Gen_Hotfix_Delegate604(int p0, int p1, object p2);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate605(object p0, int p1, PetChange p2);
    
    [HotfixDelegate]
    public delegate NewPetSkillNumRef __Gen_Hotfix_Delegate606(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate607(object p0, LingXiuType p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate608(object p0, PetChange p1);
    
    [HotfixDelegate]
    public delegate SingleLearnedSkill __Gen_Hotfix_Delegate609(int p0, int p1, object p2);
    
    [HotfixDelegate]
    public delegate SingleSkill __Gen_Hotfix_Delegate610(int p0, int p1, object p2);
    
    [HotfixDelegate]
    public delegate SingleSpritAnimal __Gen_Hotfix_Delegate611(object p0, int p1);
    
    [HotfixDelegate]
    public delegate SkinItem __Gen_Hotfix_Delegate612(int p0, int p1, object p2);
    
    [HotfixDelegate]
    public delegate FriendsInfo __Gen_Hotfix_Delegate613(object p0, int p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<FriendsInfo> __Gen_Hotfix_Delegate614(object p0);
    
    [HotfixDelegate]
    public delegate FriendsMng __Gen_Hotfix_Delegate615();
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate616(object p0, FriendOperation p1, object p2);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate617(object p0, FriendOperation p1, int p2);
    
    [HotfixDelegate]
    public delegate FriendsInfo __Gen_Hotfix_Delegate618(object p0);
    
    [HotfixDelegate]
    public delegate FlowerData __Gen_Hotfix_Delegate619(object p0);
    
    [HotfixDelegate]
    public delegate WeddingRef __Gen_Hotfix_Delegate620(object p0);
    
    [HotfixDelegate]
    public delegate PracticeMng __Gen_Hotfix_Delegate621();
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate622(object p0, int p1, object p2, object p3);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate623(object p0, practiceType p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate624(object p0, ExcerciseType p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate625(object p0, int p1, bool p2, int p3);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate626(object p0, UnityEngine.Vector3 p1, LingXiuType p2);
    
    [HotfixDelegate]
    public delegate SwornRef __Gen_Hotfix_Delegate627(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate628(object p0, ActorPropertyTag p1, object p2, object p3);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<float> __Gen_Hotfix_Delegate629(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<ItemValue> __Gen_Hotfix_Delegate630(object p0, int p1);
    
    [HotfixDelegate]
    public delegate st.net.NetBase.brothers_list __Gen_Hotfix_Delegate631(object p0);
    
    [HotfixDelegate]
    public delegate OpenType __Gen_Hotfix_Delegate632(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate633(object p0, OpenType p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<TaskInfo> __Gen_Hotfix_Delegate634(object p0);
    
    [HotfixDelegate]
    public delegate SwornMng __Gen_Hotfix_Delegate635();
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<st.net.NetBase.brother_reward_info> __Gen_Hotfix_Delegate636(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.Dictionary<int, System.Collections.Generic.Dictionary<int, int>> __Gen_Hotfix_Delegate637(object p0);
    
    [HotfixDelegate]
    public delegate SwornData __Gen_Hotfix_Delegate638(object p0);
    
    [HotfixDelegate]
    public delegate TokenLevRef __Gen_Hotfix_Delegate639(object p0);
    
    [HotfixDelegate]
    public delegate CoupleMng __Gen_Hotfix_Delegate640();
    
    [HotfixDelegate]
    public delegate RankRewardUi __Gen_Hotfix_Delegate641(object p0, object p1, int p2);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<DialogueRef> __Gen_Hotfix_Delegate642(object p0);
    
    [HotfixDelegate]
    public delegate LovePackageMng __Gen_Hotfix_Delegate643();
    
    [HotfixDelegate]
    public delegate WeekCardMng __Gen_Hotfix_Delegate644();
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate645(object p0, object p1, int p2, bool p3, int p4);
    
    [HotfixDelegate]
    public delegate BattleFieldRankUi __Gen_Hotfix_Delegate646(object p0, object p1);
    
    [HotfixDelegate]
    public delegate BattleFightMng __Gen_Hotfix_Delegate647();
    
    [HotfixDelegate]
    public delegate BattleFieldRef __Gen_Hotfix_Delegate648(object p0);
    
    [HotfixDelegate]
    public delegate BattleComentUi __Gen_Hotfix_Delegate649(object p0, object p1);
    
    [HotfixDelegate]
    public delegate ChatInfo.Type __Gen_Hotfix_Delegate650(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<VoiceData> __Gen_Hotfix_Delegate651(object p0);
    
    [HotfixDelegate]
    public delegate ChatMng __Gen_Hotfix_Delegate652();
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate653(object p0, object p1, int p2, object p3);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate654(object p0, ChatInfo.Type p1, object p2, object p3);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<ChatInfo> __Gen_Hotfix_Delegate655(object p0, int p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<ChatInfo> __Gen_Hotfix_Delegate656(object p0, object p1);
    
    [HotfixDelegate]
    public delegate int __Gen_Hotfix_Delegate657(object p0, ChatInfo.Type p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate658(object p0, ChatInfo.Type p1, int p2);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate659(object p0, bool p1, ChatInfo.Type p2, object p3);
    
    [HotfixDelegate]
    public delegate ChatInfo __Gen_Hotfix_Delegate660(object p0);
    
    [HotfixDelegate]
    public delegate CurAutoPlayVoiceType __Gen_Hotfix_Delegate661(object p0);
    
    [HotfixDelegate]
    public delegate string __Gen_Hotfix_Delegate662(object p0, ChatInfo.Type p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate663(object p0, UnityEngine.Vector3 p1, int p2, int p3);
    
    [HotfixDelegate]
    public delegate ChatContentUI __Gen_Hotfix_Delegate664(object p0, int p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate665(object p0, object p1, UnityEngine.Vector3 p2);
    
    [HotfixDelegate]
    public delegate OnlineRewardRef __Gen_Hotfix_Delegate666(object p0);
    
    [HotfixDelegate]
    public delegate OnlineRewardMng __Gen_Hotfix_Delegate667(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate668(object p0, object p1, int p2, int p3, object p4);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate669(object p0, object p1, int p2, object p3, object p4);
    
    [HotfixDelegate]
    public delegate SkillInfo __Gen_Hotfix_Delegate670(object p0);
    
    [HotfixDelegate]
    public delegate MailData __Gen_Hotfix_Delegate671(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<MailData> __Gen_Hotfix_Delegate672(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.Dictionary<int, MailData> __Gen_Hotfix_Delegate673(object p0, XXMailMng.MailState p1);
    
    [HotfixDelegate]
    public delegate XXMailMng __Gen_Hotfix_Delegate674();
    
    [HotfixDelegate]
    public delegate FashionInfo __Gen_Hotfix_Delegate675(object p0);
    
    [HotfixDelegate]
    public delegate FashionMng __Gen_Hotfix_Delegate676(object p0);
    
    [HotfixDelegate]
    public delegate FashionRef __Gen_Hotfix_Delegate677(object p0);
    
    [HotfixDelegate]
    public delegate RemainTime __Gen_Hotfix_Delegate678(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate679(object p0, int p1, int p2, int p3, object p4);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate680(object p0, FashionWndType p1);
    
    [HotfixDelegate]
    public delegate TitleMng __Gen_Hotfix_Delegate681(ref TitleMng p0);
    
    [HotfixDelegate]
    public delegate TitleInfo __Gen_Hotfix_Delegate682(object p0);
    
    [HotfixDelegate]
    public delegate SkillMainConfigRef __Gen_Hotfix_Delegate683(object p0);
    
    [HotfixDelegate]
    public delegate SkillMainLvRef __Gen_Hotfix_Delegate684(object p0);
    
    [HotfixDelegate]
    public delegate SkillLvDataRef __Gen_Hotfix_Delegate685(object p0);
    
    [HotfixDelegate]
    public delegate SkillMode __Gen_Hotfix_Delegate686(object p0);
    
    [HotfixDelegate]
    public delegate AbilityInstance __Gen_Hotfix_Delegate687(object p0);
    
    [HotfixDelegate]
    public delegate SkillMng __Gen_Hotfix_Delegate688(ref SkillMng p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<SkillInfo> __Gen_Hotfix_Delegate689(object p0, int p1);
    
    [HotfixDelegate]
    public delegate CastSoulMng __Gen_Hotfix_Delegate690(object p0);
    
    [HotfixDelegate]
    public delegate MarketRef __Gen_Hotfix_Delegate691(object p0);
    
    [HotfixDelegate]
    public delegate MarketMng __Gen_Hotfix_Delegate692(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate693(object p0, int p1, int p2, int p3, int p4, int p5);
    
    [HotfixDelegate]
    public delegate OpenServerRewardInfoData __Gen_Hotfix_Delegate694(object p0);
    
    [HotfixDelegate]
    public delegate OpenServerType __Gen_Hotfix_Delegate695(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate696(object p0, OpenServerType p1);
    
    [HotfixDelegate]
    public delegate OpenServerRewardMng __Gen_Hotfix_Delegate697(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<WdfActiveData> __Gen_Hotfix_Delegate698(object p0);
    
    [HotfixDelegate]
    public delegate WdfActiveMng __Gen_Hotfix_Delegate699();
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate700(object p0, WdfType p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate701(object p0, object p1, UnityEngine.Vector3 p2, int p3);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate702(object p0, UnityEngine.Vector3 p1, int p2);
    
    [HotfixDelegate]
    public delegate DescriptionMng __Gen_Hotfix_Delegate703();
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate704(object p0, SubGUIType p1, GUIType p2);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate705(object p0, GUIType p1, SubGUIType p2, GUIType p3);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate706(object p0, GUIType p1, GUIType p2);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate707(object p0, GUIType p1, bool p2, SubGUIType p3, GUIType p4, object p5);
    
    [HotfixDelegate]
    public delegate GUIBase __Gen_Hotfix_Delegate708(object p0, object p1, bool p2, SubGUIType p3, GUIType p4, object p5);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<string> __Gen_Hotfix_Delegate709(object p0, GUIType p1);
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate710(object p0, GUIType p1, SubGUIType p2, out bool p3);
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate711(object p0, GUIType p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<AreaBuffRef> __Gen_Hotfix_Delegate712(object p0);
    
    [HotfixDelegate]
    public delegate SceneMng __Gen_Hotfix_Delegate713();
    
    [HotfixDelegate]
    public delegate OtherPlayerInfo __Gen_Hotfix_Delegate714(object p0, object p1);
    
    [HotfixDelegate]
    public delegate NPCInfo __Gen_Hotfix_Delegate715(object p0, int p1);
    
    [HotfixDelegate]
    public delegate MonsterInfo __Gen_Hotfix_Delegate716(object p0, int p1);
    
    [HotfixDelegate]
    public delegate SceneItemInfo __Gen_Hotfix_Delegate717(object p0, int p1);
    
    [HotfixDelegate]
    public delegate AbilityBallisticCurveInfo __Gen_Hotfix_Delegate718(object p0, int p1);
    
    [HotfixDelegate]
    public delegate TrapInfo __Gen_Hotfix_Delegate719(object p0, int p1);
    
    [HotfixDelegate]
    public delegate DropItemInfo __Gen_Hotfix_Delegate720(object p0, int p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<DropItemInfo> __Gen_Hotfix_Delegate721(object p0, int p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<DropItemInfo> __Gen_Hotfix_Delegate722(object p0, object p1);
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate723(object p0, bool p1, object p2);
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate724(object p0, bool p1, TaskStateType p2, TaskStateType p3);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<st.net.NetBase.call_boss_list> __Gen_Hotfix_Delegate725(object p0);
    
    [HotfixDelegate]
    public delegate DungeonMng __Gen_Hotfix_Delegate726();
    
    [HotfixDelegate]
    public delegate AbilityMng __Gen_Hotfix_Delegate727();
    
    [HotfixDelegate]
    public delegate AbilityInstance __Gen_Hotfix_Delegate728(object p0, object p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<st.net.NetBase.skill_effect> __Gen_Hotfix_Delegate729(object p0);
    
    [HotfixDelegate]
    public delegate SkillPerformanceRef __Gen_Hotfix_Delegate730(object p0);
    
    [HotfixDelegate]
    public delegate SkillRuneRef __Gen_Hotfix_Delegate731(object p0);
    
    [HotfixDelegate]
    public delegate SkillTargetType __Gen_Hotfix_Delegate732(object p0);
    
    [HotfixDelegate]
    public delegate AlertAreaType __Gen_Hotfix_Delegate733(object p0);
    
    [HotfixDelegate]
    public delegate ClientShowType __Gen_Hotfix_Delegate734(object p0);
    
    [HotfixDelegate]
    public delegate TurnType __Gen_Hotfix_Delegate735(object p0);
    
    [HotfixDelegate]
    public delegate SmartActor __Gen_Hotfix_Delegate736(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<AbilityDelayEffectRefData> __Gen_Hotfix_Delegate737(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<SkillSoundPair> __Gen_Hotfix_Delegate738(object p0);
    
    [HotfixDelegate]
    public delegate SelfShiftType __Gen_Hotfix_Delegate739(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<UnityEngine.Transform> __Gen_Hotfix_Delegate740(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate741(object p0, int p1, int p2, object p3, object p4);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate742(object p0, int p1, int p2, int p3, object p4, object p5);
    
    [HotfixDelegate]
    public delegate AttackResultType __Gen_Hotfix_Delegate743(object p0);
    
    [HotfixDelegate]
    public delegate DefResultType __Gen_Hotfix_Delegate744(object p0);
    
    [HotfixDelegate]
    public delegate Actor __Gen_Hotfix_Delegate745(object p0);
    
    [HotfixDelegate]
    public delegate ArrowRef __Gen_Hotfix_Delegate746(object p0);
    
    [HotfixDelegate]
    public delegate int __Gen_Hotfix_Delegate747();
    
    [HotfixDelegate]
    public delegate string __Gen_Hotfix_Delegate748(object p0, AssetPathType p1);
    
    [HotfixDelegate]
    public delegate AssetMng.DownloadID __Gen_Hotfix_Delegate749(object p0, object p1, object p2, object p3, bool p4);
    
    [HotfixDelegate]
    public delegate AssetMng.DownloadID __Gen_Hotfix_Delegate750(object p0, object p1, float p2, object p3, object p4, bool p5);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<string> __Gen_Hotfix_Delegate751(object p0, object p1);
    
    [HotfixDelegate]
    public delegate float __Gen_Hotfix_Delegate752(object p0, UnityEngine.Vector2 p1, UnityEngine.Vector2 p2, UnityEngine.Vector2 p3, UnityEngine.Vector2 p4);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate753(object p0, CameraHigh p1);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate754(object p0, object p1, float p2, float p3, float p4, float p5);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate755(object p0, UnityEngine.Vector3 p1, float p2, float p3);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate756(object p0, UnityEngine.Vector3 p1, UnityEngine.Vector3 p2, float p3);
    
    [HotfixDelegate]
    public delegate System.Collections.IEnumerator __Gen_Hotfix_Delegate757(object p0, object p1, UnityEngine.Rect p2, object p3);
    
    [HotfixDelegate]
    public delegate float __Gen_Hotfix_Delegate758(float p0, float p1, float p2);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate759(object p0, CamController.FollowMode p1, UnityEngine.Vector3 p2);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate760(object p0, UnityEngine.Vector3 p1, int p2, float p3, bool p4);
    
    [HotfixDelegate]
    public delegate ConfigMng __Gen_Hotfix_Delegate761();
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<int> __Gen_Hotfix_Delegate762(object p0, int p1);
    
    [HotfixDelegate]
    public delegate EquipmentInfo __Gen_Hotfix_Delegate763(object p0, int p1, int p2);
    
    [HotfixDelegate]
    public delegate ArrowRef __Gen_Hotfix_Delegate764(object p0, int p1);
    
    [HotfixDelegate]
    public delegate AttributeRef __Gen_Hotfix_Delegate765(object p0, int p1);
    
    [HotfixDelegate]
    public delegate ActivityListRef __Gen_Hotfix_Delegate766(object p0, int p1);
    
    [HotfixDelegate]
    public delegate ActivityButtonRef __Gen_Hotfix_Delegate767(object p0, int p1);
    
    [HotfixDelegate]
    public delegate AttributeTypeRef __Gen_Hotfix_Delegate768(object p0, ActorPropertyTag p1);
    
    [HotfixDelegate]
    public delegate string __Gen_Hotfix_Delegate769(object p0, ActorPropertyTag p1);
    
    [HotfixDelegate]
    public delegate LivelyRef __Gen_Hotfix_Delegate770(object p0, int p1);
    
    [HotfixDelegate]
    public delegate LivelyRewardRef __Gen_Hotfix_Delegate771(object p0, int p1);
    
    [HotfixDelegate]
    public delegate TowerRef __Gen_Hotfix_Delegate772(object p0, int p1, int p2);
    
    [HotfixDelegate]
    public delegate AddSoulRef __Gen_Hotfix_Delegate773(object p0, int p1);
    
    [HotfixDelegate]
    public delegate AddSoulRef __Gen_Hotfix_Delegate774(object p0, int p1, int p2, int p3);
    
    [HotfixDelegate]
    public delegate AchieveTypeRef __Gen_Hotfix_Delegate775(object p0, int p1);
    
    [HotfixDelegate]
    public delegate AchievementRef __Gen_Hotfix_Delegate776(object p0, int p1);
    
    [HotfixDelegate]
    public delegate ArenaRankRef __Gen_Hotfix_Delegate777(object p0, int p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<AreaBuffRef> __Gen_Hotfix_Delegate778(object p0, int p1);
    
    [HotfixDelegate]
    public delegate BattleFieldRef __Gen_Hotfix_Delegate779(object p0, int p1);
    
    [HotfixDelegate]
    public delegate BattleSettlementBonusRef __Gen_Hotfix_Delegate780(object p0, int p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<CopyGroupRef> __Gen_Hotfix_Delegate781(object p0, int p1);
    
    [HotfixDelegate]
    public delegate CopyGroupRef __Gen_Hotfix_Delegate782(object p0, int p1);
    
    [HotfixDelegate]
    public delegate CopyRef __Gen_Hotfix_Delegate783(object p0, int p1);
    
    [HotfixDelegate]
    public delegate ChapterRef __Gen_Hotfix_Delegate784(object p0, int p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<ChapterReward> __Gen_Hotfix_Delegate785(object p0, int p1);
    
    [HotfixDelegate]
    public delegate CheckPointRef __Gen_Hotfix_Delegate786(object p0, int p1);
    
    [HotfixDelegate]
    public delegate LineRef __Gen_Hotfix_Delegate787(object p0, int p1);
    
    [HotfixDelegate]
    public delegate CastSoulRef __Gen_Hotfix_Delegate788(object p0, int p1);
    
    [HotfixDelegate]
    public delegate CastSoulTimeRef __Gen_Hotfix_Delegate789(object p0, int p1);
    
    [HotfixDelegate]
    public delegate CastsoulRewardRef __Gen_Hotfix_Delegate790(object p0, int p1);
    
    [HotfixDelegate]
    public delegate SevenDaysRef __Gen_Hotfix_Delegate791(object p0, int p1, int p2);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<SevenDaysRef> __Gen_Hotfix_Delegate792(object p0, int p1);
    
    [HotfixDelegate]
    public delegate TwoChargeRef __Gen_Hotfix_Delegate793(object p0, int p1);
    
    [HotfixDelegate]
    public delegate DescriptionRef __Gen_Hotfix_Delegate794(object p0, int p1);
    
    [HotfixDelegate]
    public delegate DownloadBonusRef __Gen_Hotfix_Delegate795(object p0, int p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<DialogueRef> __Gen_Hotfix_Delegate796(object p0, int p1);
    
    [HotfixDelegate]
    public delegate DividendRef __Gen_Hotfix_Delegate797(object p0, int p1);
    
    [HotfixDelegate]
    public delegate GuildDonateRef __Gen_Hotfix_Delegate798(object p0, int p1);
    
    [HotfixDelegate]
    public delegate EquipmentRef __Gen_Hotfix_Delegate799(object p0, int p1);
    
    [HotfixDelegate]
    public delegate EverydayRewardRef __Gen_Hotfix_Delegate800(object p0, int p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<FlyExRef> __Gen_Hotfix_Delegate801(object p0);
    
    [HotfixDelegate]
    public delegate FlyPointRef __Gen_Hotfix_Delegate802(object p0, int p1);
    
    [HotfixDelegate]
    public delegate FlyPointRef __Gen_Hotfix_Delegate803(object p0, int p1, int p2);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<FlyPointRef> __Gen_Hotfix_Delegate804(object p0, int p1);
    
    [HotfixDelegate]
    public delegate FirstChargeRef __Gen_Hotfix_Delegate805(object p0, int p1);
    
    [HotfixDelegate]
    public delegate CDKeyRef __Gen_Hotfix_Delegate806(object p0, int p1);
    
    [HotfixDelegate]
    public delegate FashionRef __Gen_Hotfix_Delegate807(object p0, int p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<FashionRef> __Gen_Hotfix_Delegate808(object p0);
    
    [HotfixDelegate]
    public delegate GuildLivelyRef __Gen_Hotfix_Delegate809(object p0, int p1);
    
    [HotfixDelegate]
    public delegate GuildLivelyRewardRef __Gen_Hotfix_Delegate810(object p0, int p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<StrengthenSuitRef> __Gen_Hotfix_Delegate811(object p0, int p1);
    
    [HotfixDelegate]
    public delegate CornucopiaRef __Gen_Hotfix_Delegate812(object p0, int p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<LevelRewardLevelRef> __Gen_Hotfix_Delegate813(object p0, int p1);
    
    [HotfixDelegate]
    public delegate LoveSpreeRef __Gen_Hotfix_Delegate814(object p0, int p1, int p2);
    
    [HotfixDelegate]
    public delegate MonsterRef __Gen_Hotfix_Delegate815(object p0, int p1);
    
    [HotfixDelegate]
    public delegate MonsterDistributionRef __Gen_Hotfix_Delegate816(object p0, int p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<MonsterDistributionRef> __Gen_Hotfix_Delegate817(object p0, int p1);
    
    [HotfixDelegate]
    public delegate MountRef __Gen_Hotfix_Delegate818(object p0, int p1);
    
    [HotfixDelegate]
    public delegate RidePropertyRef __Gen_Hotfix_Delegate819(object p0, int p1);
    
    [HotfixDelegate]
    public delegate SkinPropertyRef __Gen_Hotfix_Delegate820(object p0, int p1);
    
    [HotfixDelegate]
    public delegate MagicWeaponRef __Gen_Hotfix_Delegate821(object p0, int p1);
    
    [HotfixDelegate]
    public delegate MountEquQuailtRef __Gen_Hotfix_Delegate822(object p0, int p1, EquipSlot p2);
    
    [HotfixDelegate]
    public delegate MountEquQualityAttributeRef __Gen_Hotfix_Delegate823(object p0, int p1, EquipSlot p2);
    
    [HotfixDelegate]
    public delegate MountStrenLevRef __Gen_Hotfix_Delegate824(object p0, int p1, EquipSlot p2);
    
    [HotfixDelegate]
    public delegate MountStrenConsumeRef __Gen_Hotfix_Delegate825(object p0, int p1);
    
    [HotfixDelegate]
    public delegate MountSuitRef __Gen_Hotfix_Delegate826(object p0, int p1);
    
    [HotfixDelegate]
    public delegate NewFunctionHintsRef __Gen_Hotfix_Delegate827(object p0, int p1);
    
    [HotfixDelegate]
    public delegate NameRef __Gen_Hotfix_Delegate828(object p0, int p1);
    
    [HotfixDelegate]
    public delegate SceneNPCRef __Gen_Hotfix_Delegate829(object p0, int p1);
    
    [HotfixDelegate]
    public delegate NPCTypeRef __Gen_Hotfix_Delegate830(object p0, int p1);
    
    [HotfixDelegate]
    public delegate NPCActionRef __Gen_Hotfix_Delegate831(object p0, int p1);
    
    [HotfixDelegate]
    public delegate NPCAIRef __Gen_Hotfix_Delegate832(object p0, int p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<NPCAIRef> __Gen_Hotfix_Delegate833(object p0, int p1);
    
    [HotfixDelegate]
    public delegate NewFunctionRef __Gen_Hotfix_Delegate834(object p0, int p1);
    
    [HotfixDelegate]
    public delegate PlayerConfig __Gen_Hotfix_Delegate835(object p0, int p1);
    
    [HotfixDelegate]
    public delegate BlendRef __Gen_Hotfix_Delegate836(object p0, int p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<BlendRef> __Gen_Hotfix_Delegate837(object p0, int p1);
    
    [HotfixDelegate]
    public delegate PassiveSkillRef __Gen_Hotfix_Delegate838(object p0, int p1);
    
    [HotfixDelegate]
    public delegate PoPoRef __Gen_Hotfix_Delegate839(object p0, int p1);
    
    [HotfixDelegate]
    public delegate PoPoPetRef __Gen_Hotfix_Delegate840(object p0, int p1);
    
    [HotfixDelegate]
    public delegate PoPoPetRef __Gen_Hotfix_Delegate841(object p0, int p1, EntourageTalkType p2);
    
    [HotfixDelegate]
    public delegate PushedRef __Gen_Hotfix_Delegate842(object p0, int p1);
    
    [HotfixDelegate]
    public delegate RebornRef __Gen_Hotfix_Delegate843(object p0, int p1);
    
    [HotfixDelegate]
    public delegate RechargeRef __Gen_Hotfix_Delegate844(object p0, int p1);
    
    [HotfixDelegate]
    public delegate RelationCompareRef __Gen_Hotfix_Delegate845(object p0, int p1, int p2, SceneType p3);
    
    [HotfixDelegate]
    public delegate RelationType __Gen_Hotfix_Delegate846(object p0, int p1, int p2, SceneType p3);
    
    [HotfixDelegate]
    public delegate UnityEngine.Color __Gen_Hotfix_Delegate847(object p0, int p1, int p2, SceneType p3);
    
    [HotfixDelegate]
    public delegate RefineRef __Gen_Hotfix_Delegate848(object p0, int p1);
    
    [HotfixDelegate]
    public delegate RefineRef __Gen_Hotfix_Delegate849(object p0, int p1, int p2, int p3);
    
    [HotfixDelegate]
    public delegate RoyalBoxRef __Gen_Hotfix_Delegate850(object p0, int p1);
    
    [HotfixDelegate]
    public delegate NewPetDataRef __Gen_Hotfix_Delegate851(object p0, int p1);
    
    [HotfixDelegate]
    public delegate NewPetRef __Gen_Hotfix_Delegate852(object p0, int p1);
    
    [HotfixDelegate]
    public delegate NewPetSkillComposeRef __Gen_Hotfix_Delegate853(object p0, int p1);
    
    [HotfixDelegate]
    public delegate NewPetSkillNumRef __Gen_Hotfix_Delegate854(object p0, int p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<NewPetSkillRef> __Gen_Hotfix_Delegate855(object p0, int p1);
    
    [HotfixDelegate]
    public delegate NewPetSkillRef __Gen_Hotfix_Delegate856(object p0, int p1);
    
    [HotfixDelegate]
    public delegate FashionLevelRef __Gen_Hotfix_Delegate857(object p0, int p1);
    
    [HotfixDelegate]
    public delegate SystemMailRef __Gen_Hotfix_Delegate858(object p0, int p1);
    
    [HotfixDelegate]
    public delegate SceneRef __Gen_Hotfix_Delegate859(object p0, int p1);
    
    [HotfixDelegate]
    public delegate StepConsumptionRef __Gen_Hotfix_Delegate860(object p0, int p1);
    
    [HotfixDelegate]
    public delegate SceneItemRef __Gen_Hotfix_Delegate861(object p0, int p1);
    
    [HotfixDelegate]
    public delegate SceneItemDisRef __Gen_Hotfix_Delegate862(object p0, int p1);
    
    [HotfixDelegate]
    public delegate SkillMainConfigRef __Gen_Hotfix_Delegate863(object p0, int p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<SkillMainConfigRef> __Gen_Hotfix_Delegate864(object p0, int p1);
    
    [HotfixDelegate]
    public delegate SkillPerformanceRef __Gen_Hotfix_Delegate865(object p0, int p1);
    
    [HotfixDelegate]
    public delegate SkillRuneRef __Gen_Hotfix_Delegate866(object p0, int p1);
    
    [HotfixDelegate]
    public delegate SkillMainLvRef __Gen_Hotfix_Delegate867(object p0, int p1, int p2);
    
    [HotfixDelegate]
    public delegate SuperLifeRef __Gen_Hotfix_Delegate868(object p0, int p1);
    
    [HotfixDelegate]
    public delegate FlyUpRef __Gen_Hotfix_Delegate869(object p0, int p1);
    
    [HotfixDelegate]
    public delegate StyliteRef __Gen_Hotfix_Delegate870(object p0, int p1);
    
    [HotfixDelegate]
    public delegate StyliteMoneyRef __Gen_Hotfix_Delegate871(object p0, int p1);
    
    [HotfixDelegate]
    public delegate SkillBuffRef __Gen_Hotfix_Delegate872(object p0, int p1);
    
    [HotfixDelegate]
    public delegate SkillLvDataRef __Gen_Hotfix_Delegate873(object p0, int p1, int p2);
    
    [HotfixDelegate]
    public delegate GuildSkillRef __Gen_Hotfix_Delegate874(object p0, int p1);
    
    [HotfixDelegate]
    public delegate GuildShopRef __Gen_Hotfix_Delegate875(object p0, int p1);
    
    [HotfixDelegate]
    public delegate ShopRef __Gen_Hotfix_Delegate876(object p0, int p1);
    
    [HotfixDelegate]
    public delegate MarketRef __Gen_Hotfix_Delegate877(object p0, int p1);
    
    [HotfixDelegate]
    public delegate OnlineRewardRef __Gen_Hotfix_Delegate878(object p0, int p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<OnlineRewardRef> __Gen_Hotfix_Delegate879(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<LittleHelperRef>> __Gen_Hotfix_Delegate880(object p0);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.Dictionary<int, LittleHelperTypeRef> __Gen_Hotfix_Delegate881(object p0);
    
    [HotfixDelegate]
    public delegate SustainRef __Gen_Hotfix_Delegate882(object p0, int p1);
    
    [HotfixDelegate]
    public delegate MallRef __Gen_Hotfix_Delegate883(object p0, int p1);
    
    [HotfixDelegate]
    public delegate ServerMSGRef __Gen_Hotfix_Delegate884(object p0, int p1);
    
    [HotfixDelegate]
    public delegate OpenNewFunctionRef __Gen_Hotfix_Delegate885(object p0, int p1);
    
    [HotfixDelegate]
    public delegate OpenNewFunctionRef __Gen_Hotfix_Delegate886(object p0, int p1, int p2);
    
    [HotfixDelegate]
    public delegate OpenNewFunctionGuideRef __Gen_Hotfix_Delegate887(object p0, int p1, int p2);
    
    [HotfixDelegate]
    public delegate OpenNewFunctionGuideRef __Gen_Hotfix_Delegate888(object p0, int p1);
    
    [HotfixDelegate]
    public delegate ChatTemplatesRef __Gen_Hotfix_Delegate889(object p0, int p1);
    
    [HotfixDelegate]
    public delegate SpecialRef __Gen_Hotfix_Delegate890(object p0, int p1);
    
    [HotfixDelegate]
    public delegate SwornRef __Gen_Hotfix_Delegate891(object p0, int p1);
    
    [HotfixDelegate]
    public delegate StarTypeRef __Gen_Hotfix_Delegate892(object p0, int p1);
    
    [HotfixDelegate]
    public delegate TaskConfigRef __Gen_Hotfix_Delegate893(object p0, int p1);
    
    [HotfixDelegate]
    public delegate TaskStepRef __Gen_Hotfix_Delegate894(object p0, int p1, int p2);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<TaskStepRef> __Gen_Hotfix_Delegate895(object p0, int p1);
    
    [HotfixDelegate]
    public delegate TaskRingRewardRef __Gen_Hotfix_Delegate896(object p0, int p1);
    
    [HotfixDelegate]
    public delegate TrapRef __Gen_Hotfix_Delegate897(object p0, int p1);
    
    [HotfixDelegate]
    public delegate TitleRef __Gen_Hotfix_Delegate898(object p0, int p1);
    
    [HotfixDelegate]
    public delegate TokenLevRef __Gen_Hotfix_Delegate899(object p0, int p1);
    
    [HotfixDelegate]
    public delegate TreasureHouseRef __Gen_Hotfix_Delegate900(object p0, int p1);
    
    [HotfixDelegate]
    public delegate RewardGroupRef __Gen_Hotfix_Delegate901(object p0, int p1);
    
    [HotfixDelegate]
    public delegate RewardGroupMemberRef __Gen_Hotfix_Delegate902(object p0, int p1);
    
    [HotfixDelegate]
    public delegate UILevelConfigRef __Gen_Hotfix_Delegate903(object p0, GUIType p1);
    
    [HotfixDelegate]
    public delegate GUIType __Gen_Hotfix_Delegate904(object p0, SubGUIType p1);
    
    [HotfixDelegate]
    public delegate UISkipRef __Gen_Hotfix_Delegate905(object p0, int p1);
    
    [HotfixDelegate]
    public delegate VIPRef __Gen_Hotfix_Delegate906(object p0, int p1);
    
    [HotfixDelegate]
    public delegate UIwenbenRef __Gen_Hotfix_Delegate907(object p0, int p1);
    
    [HotfixDelegate]
    public delegate string __Gen_Hotfix_Delegate908(object p0, int p1, object p2);
    
    [HotfixDelegate]
    public delegate WingRefEty __Gen_Hotfix_Delegate909(object p0, int p1);
    
    [HotfixDelegate]
    public delegate WingRef __Gen_Hotfix_Delegate910(object p0, int p1, int p2);
    
    [HotfixDelegate]
    public delegate WeddingRef __Gen_Hotfix_Delegate911(object p0, int p1);
    
    [HotfixDelegate]
    public delegate WeekCardRef __Gen_Hotfix_Delegate912(object p0, int p1);
    
    [HotfixDelegate]
    public delegate WeddingCoppyRef __Gen_Hotfix_Delegate913(object p0, int p1);
    
    [HotfixDelegate]
    public delegate UILabelTranslationProp __Gen_Hotfix_Delegate914(object p0, object p1);
    
    [HotfixDelegate]
    public delegate bool __Gen_Hotfix_Delegate915(object p0, char p1);
    
    [HotfixDelegate]
    public delegate StrengthenAttrRef __Gen_Hotfix_Delegate916(object p0, int p1, EquipSlot p2);
    
    [HotfixDelegate]
    public delegate StrengthenRef __Gen_Hotfix_Delegate917(object p0, int p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<InsetRef> __Gen_Hotfix_Delegate918(object p0, int p1);
    
    [HotfixDelegate]
    public delegate OrangeRefineRef __Gen_Hotfix_Delegate919(object p0, int p1);
    
    [HotfixDelegate]
    public delegate PromoteRef __Gen_Hotfix_Delegate920(object p0, int p1);
    
    [HotfixDelegate]
    public delegate ItemValue __Gen_Hotfix_Delegate921(object p0, int p1, int p2);
    
    [HotfixDelegate]
    public delegate InheritLuckyRef __Gen_Hotfix_Delegate922(object p0, int p1);
    
    [HotfixDelegate]
    public delegate EquipmentWashConsumeRef __Gen_Hotfix_Delegate923(object p0, int p1);
    
    [HotfixDelegate]
    public delegate EquipmentWashValueRef __Gen_Hotfix_Delegate924(object p0, int p1);
    
    [HotfixDelegate]
    public delegate TaskSurroundRewardRef __Gen_Hotfix_Delegate925(object p0, int p1);
    
    [HotfixDelegate]
    public delegate ResolveLevelRef __Gen_Hotfix_Delegate926(object p0, int p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<ItemValue> __Gen_Hotfix_Delegate927(object p0, int p1, int p2, int p3);
    
    [HotfixDelegate]
    public delegate EquipmentSetRef __Gen_Hotfix_Delegate928(object p0, int p1, int p2, int p3);
    
    [HotfixDelegate]
    public delegate GuildRef __Gen_Hotfix_Delegate929(object p0, int p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<CityShopRef> __Gen_Hotfix_Delegate930(object p0, int p1);
    
    [HotfixDelegate]
    public delegate CityShopRef __Gen_Hotfix_Delegate931(object p0, int p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<BossRef> __Gen_Hotfix_Delegate932(object p0, int p1);
    
    [HotfixDelegate]
    public delegate BossRef __Gen_Hotfix_Delegate933(object p0, int p1);
    
    [HotfixDelegate]
    public delegate OffLineRewardRef __Gen_Hotfix_Delegate934(object p0, int p1);
    
    [HotfixDelegate]
    public delegate SevenDaysTaskRef __Gen_Hotfix_Delegate935(object p0, int p1);
    
    [HotfixDelegate]
    public delegate System.Collections.Generic.List<SevenDaysTaskRef> __Gen_Hotfix_Delegate936(object p0, int p1);
    
    [HotfixDelegate]
    public delegate SevenDaysTaskRewardRef __Gen_Hotfix_Delegate937(object p0, int p1);
    
    [HotfixDelegate]
    public delegate MsgLoackingMng __Gen_Hotfix_Delegate938();
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate939(object p0, int p1, bool p2, bool p3);
    
    [HotfixDelegate]
    public delegate LoginStage __Gen_Hotfix_Delegate940(object p0);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate941(object p0, PlayerInputListener.LockType p1);
    
    [HotfixDelegate]
    public delegate string __Gen_Hotfix_Delegate942(int p0, ulong p1);
    
    [HotfixDelegate]
    public delegate string __Gen_Hotfix_Delegate943(object p0, out bool p1);
    
    [HotfixDelegate]
    public delegate string __Gen_Hotfix_Delegate944(object p0, out bool p1, out EquipmentInfo p2);
    
    [HotfixDelegate]
    public delegate System.DateTime __Gen_Hotfix_Delegate945(System.DateTime p0);
    
    [HotfixDelegate]
    public delegate UILabel __Gen_Hotfix_Delegate946(object p0, object p1, object p2, object p3);
    
    [HotfixDelegate]
    public delegate float __Gen_Hotfix_Delegate947(object p0, float p1);
    
    [HotfixDelegate]
    public delegate UILabel __Gen_Hotfix_Delegate948(object p0, object p1, object p2, UnityEngine.Color p3);
    
    [HotfixDelegate]
    public delegate UnityEngine.GameObject __Gen_Hotfix_Delegate949(object p0, object p1, object p2, float p3, object p4, int p5);
    
    [HotfixDelegate]
    public delegate void __Gen_Hotfix_Delegate950(object p0, object p1, OpenServerType p2, bool p3);
    
    [HotfixDelegate]
    public delegate OpenServerActiveTogType __Gen_Hotfix_Delegate951(object p0, object p1);
    
    [HotfixDelegate]
    public delegate TwoChargeMng __Gen_Hotfix_Delegate952();
    
    [HotfixDelegate]
    public delegate SevenChallengeMng __Gen_Hotfix_Delegate953();
    
    [HotfixDelegate]
    public delegate SevenChallengeSingleUI __Gen_Hotfix_Delegate954(object p0, object p1);
    
    [HotfixDelegate]
    public delegate GuildLivelyRankItemUI __Gen_Hotfix_Delegate955(object p0, object p1);
    
}